###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       23/Nov/2017  13:36:18
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC199B-200 主板\Software\APP\comm\app_comm_mtr.c
#    Command line =  
#        "F:\iar\NC199B-200 主板\Software\APP\comm\app_comm_mtr.c" -D
#        USE_STDPERIPH_DRIVER -D _STM32F10X_HD -D STM32F10X_CL -D DEBUG -D
#        STM32F103RC -D STM32_FLASH_SIZE=256 -D HSE_VALUE=25000000 -lCN
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\
#        -o
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC199B-100\Library\Project\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\AES\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Config\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Port\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\OS\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Config\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Protocol\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Iap\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Driver\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\uCOS-III\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\CoreSupport\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\STM32F10x_StdPeriph_Driver\inc\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\ARM-Cortex-M3\IAR\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-LIB\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\OSAL\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\OSAL\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Source\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\option\ -Om
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\app_comm_mtr.lst
#    Object file  =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\app_comm_mtr.o
#
###############################################################################

F:\iar\NC199B-200 主板\Software\APP\comm\app_comm_mtr.c
      1          /*******************************************************************************
      2           *   Revised:        All copyrights reserved to wumingshen.
      3           *   Revision:       v1.0
      4           *   Writer:	     redmorningcn.
      5           *
      6           *   Description:    双击选中 comm 按 Ctrl + H, 钩选 Match the case, Replace with
      7           *                   输入您要的名字，点击 Replace All
      8           *                   双击选中 Comm 按 Ctrl + H, 钩选 Match the case, Replace with
      9           *                   输入您要的名字，点击 Replace All
     10           *                   双击选中 COMM 按 Ctrl + H, 钩选 Match the case, Replace with
     11           *                   输入您要的名字，点击 Replace All
     12           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_COMM_PRIO     ）
     13           *                                            和 任务堆栈（ APP_TASK_COMM_STK_SIZE ）大小
     14           *
     15           *   Notes:
     16           *     				E-mail: redmorningcn@qq.com
     17           *
     18           *******************************************************************************/
     19          
     20          /*******************************************************************************
     21           * INCLUDES
     22           */
     23          #define  SNL_APP_SOURCE
     24          #include <includes.h>
     25          #include <app_comm_protocol.h>
     26          #include <app_ctrl.h>
     27          #include <app.h>
     28          #include <cpu.h>
     29          #include <MB.h>
     30          
     31          
     32          #include <os_cfg_app.h>
     33          
     34          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     35          const  CPU_CHAR  *app_comm_mtr__c = "$Id: $";
     36          #endif
     37          
     38          #define APP_TASK_COMM_EN     DEF_ENABLED
     39          #if APP_TASK_COMM_EN == DEF_ENABLED
     40          /*******************************************************************************
     41           * CONSTANTS
     42           */
     43          
     44          /*******************************************************************************
     45           * MACROS
     46           */
     47          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 1)
     48          
     49          /*******************************************************************************
     50           * TYPEDEFS
     51           */
     52          
     53          #define     GOOD_GRADE      0
     54          #define     NORMAL_GRADE    1
     55          #define     BAD_GRADE       2
     56          
     57          /*******************************************************************************
     58           * LOCAL VARIABLES
     59           */
     60          
     61          /*******************************************************************************
     62           * GLOBAL VARIABLES
     63           */
     64          
     65          /***********************************************
     66          * 描述： 软定时器声明
     67          */
     68          
     69          /***********************************************
     70          * 描述： 软定时器回调函数
     71          */
     72          
     73          
     74          /*******************************************************************************
     75           * LOCAL FUNCTIONS
     76           */
     77          #define     SLAVE_ADDR      1
     78          
     79          
     80          /*******************************************************************************
     81           * GLOBAL FUNCTIONS
     82           */
     83          
     84          /*******************************************************************************
     85           * EXTERN VARIABLES
     86           */
     87          
     88           /*******************************************************************************
     89           * EXTERN FUNCTIONS
     90           */
     91          
     92          /*******************************************************************************/
     93          
     94          
     95          /*******************************************************************************
     96           * 名    称： app_comm_mtr
     97           * 入口参数： 无
     98           * 出口参数： 无
     99           * 作　 　者： redmorningcn.
    100           * 创建日期： 2017-05-18
    101           * 修    改：
    102           * 修改日期：
    103           * 备    注： 任务创建函数需要在app.h文件中声明,
    104           *******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    105          void    app_comm_mtr(void)
    106          {
   \                     app_comm_mtr: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    107              uint16      renum = 0;
    108              //static      
    109              renum = MBM_FC03_HoldingRegRd(  Ctrl.Mtr.pch,
    110                                              ModbusNode,
    111                                              SLAVE_ADDR,
    112                                              (CPU_INT16U  *)&Ctrl.sRec.sAir,
    113                                              sizeof(Ctrl.sRec.sAir)/2 );    
    114              
    115              if( renum )                 //接收到modbus协议数据
   \   00000002   0x4C1F             LDR.N    R4,??app_comm_mtr_0
   \   00000004   0x2010             MOVS     R0,#+16
   \   00000006   0x9000             STR      R0,[SP, #+0]
   \   00000008   0xF504 0x7385      ADD      R3,R4,#+266
   \   0000000C   0x2201             MOVS     R2,#+1
   \   0000000E   0x4611             MOV      R1,R2
   \   00000010   0xF8D4 0x02DC      LDR      R0,[R4, #+732]
   \   00000014   0x.... 0x....      BL       MBM_FC03_HoldingRegRd
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD02F             BEQ.N    ??app_comm_mtr_1
    116              {
    117                  //湿度等级判断
    118                  Ctrl.sRec.Air_Hum_Grade = GOOD_GRADE;
   \   0000001C   0xF204 0x1035      ADDW     R0,R4,#+309
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x7001             STRB     R1,[R0, #+0]
    119          
    120                  if(Ctrl.sRec.sAir.Humidity > Ctrl.Para.dat.sAirPara.sStandard_Hum.NormalLimit)
   \   00000024   0xF504 0x7186      ADD      R1,R4,#+268
   \   00000028   0x880B             LDRH     R3,[R1, #+0]
   \   0000002A   0xF104 0x0220      ADD      R2,R4,#+32
   \   0000002E   0x8854             LDRH     R4,[R2, #+2]
   \   00000030   0x429C             CMP      R4,R3
   \   00000032   0xD202             BCS.N    ??app_comm_mtr_2
    121                  {
    122                      Ctrl.sRec.Air_Hum_Grade = BAD_GRADE;
   \   00000034   0x2402             MOVS     R4,#+2
   \   00000036   0x7004             STRB     R4,[R0, #+0]
   \   00000038   0xE004             B.N      ??app_comm_mtr_3
    123                  }
    124                  else if(Ctrl.sRec.sAir.Humidity > Ctrl.Para.dat.sAirPara.sStandard_Hum.GoodLimit)
   \                     ??app_comm_mtr_2: (+1)
   \   0000003A   0x8814             LDRH     R4,[R2, #+0]
   \   0000003C   0x429C             CMP      R4,R3
   \   0000003E   0xD201             BCS.N    ??app_comm_mtr_3
    125                  {
    126                      Ctrl.sRec.Air_Hum_Grade = NORMAL_GRADE;
   \   00000040   0x2401             MOVS     R4,#+1
   \   00000042   0x7004             STRB     R4,[R0, #+0]
    127                  }
    128            
    129                  //油气等级判断
    130                  Ctrl.sRec.Air_Voc_Grade = GOOD_GRADE;
   \                     ??app_comm_mtr_3: (+1)
   \   00000044   0x2400             MOVS     R4,#+0
   \   00000046   0x7044             STRB     R4,[R0, #+1]
    131          
    132                  if(Ctrl.sRec.sAir.VOCs > Ctrl.Para.dat.sAirPara.sStandard_VOC.NormalLimit)
   \   00000048   0x88D4             LDRH     R4,[R2, #+6]
   \   0000004A   0x884D             LDRH     R5,[R1, #+2]
   \   0000004C   0x42AC             CMP      R4,R5
   \   0000004E   0xD202             BCS.N    ??app_comm_mtr_4
    133                  {
    134                      Ctrl.sRec.Air_Voc_Grade = BAD_GRADE;
   \   00000050   0x2302             MOVS     R3,#+2
   \   00000052   0x7043             STRB     R3,[R0, #+1]
   \   00000054   0xE004             B.N      ??app_comm_mtr_5
    135                  }
    136                  else if(Ctrl.sRec.sAir.Humidity > Ctrl.Para.dat.sAirPara.sStandard_VOC.GoodLimit)
   \                     ??app_comm_mtr_4: (+1)
   \   00000056   0x8894             LDRH     R4,[R2, #+4]
   \   00000058   0x429C             CMP      R4,R3
   \   0000005A   0xD201             BCS.N    ??app_comm_mtr_5
    137                  {
    138                      Ctrl.sRec.Air_Voc_Grade = NORMAL_GRADE;
   \   0000005C   0x2301             MOVS     R3,#+1
   \   0000005E   0x7043             STRB     R3,[R0, #+1]
    139                  }
    140          
    141                  //粉尘等级判断
    142                  Ctrl.sRec.Air_Dust_Grade = GOOD_GRADE;
   \                     ??app_comm_mtr_5: (+1)
   \   00000060   0x2300             MOVS     R3,#+0
   \   00000062   0x7083             STRB     R3,[R0, #+2]
    143          
    144                  if(Ctrl.sRec.sAir.Dusts_2D5 > Ctrl.Para.dat.sAirPara.sStandard_Dust.NormalLimit)
   \   00000064   0x8B89             LDRH     R1,[R1, #+28]
   \   00000066   0x8953             LDRH     R3,[R2, #+10]
   \   00000068   0x428B             CMP      R3,R1
   \   0000006A   0xD202             BCS.N    ??app_comm_mtr_6
    145                  {
    146                      Ctrl.sRec.Air_Dust_Grade = BAD_GRADE;
   \   0000006C   0x2102             MOVS     R1,#+2
   \   0000006E   0x7081             STRB     R1,[R0, #+2]
   \   00000070   0xBD31             POP      {R0,R4,R5,PC}
    147                  }
    148                  else if(Ctrl.sRec.sAir.Dusts_2D5 > Ctrl.Para.dat.sAirPara.sStandard_Dust.GoodLimit)
   \                     ??app_comm_mtr_6: (+1)
   \   00000072   0x8912             LDRH     R2,[R2, #+8]
   \   00000074   0x428A             CMP      R2,R1
   \   00000076   0xD201             BCS.N    ??app_comm_mtr_1
    149                  {
    150                      Ctrl.sRec.Air_Dust_Grade = NORMAL_GRADE;
   \   00000078   0x2101             MOVS     R1,#+1
   \   0000007A   0x7081             STRB     R1,[R0, #+2]
    151                  }  
    152              }
    153          }
   \                     ??app_comm_mtr_1: (+1)
   \   0000007C   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   \   0000007E   0xBF00             Nop      
   \                     ??app_comm_mtr_0:
   \   00000080   0x........         DC32     Ctrl
    154          
    155          
    156          /*******************************************************************************
    157           * 				end of file
    158           *******************************************************************************/
    159          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   app_comm_mtr
        16   -> MBM_FC03_HoldingRegRd


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     132  app_comm_mtr

 
 132 bytes in section .text
 
 132 bytes of CODE memory

Errors: none
Warnings: none
