###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       26/Dec/2017  15:21:33
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC199B-100\Library\Source\APP\main.c
#    Command line =  
#        F:\iar\NC199B-100\Library\Source\APP\main.c -D USE_STDPERIPH_DRIVER -D
#        _STM32F10X_HD -D STM32F10X_CL -D DEBUG -D STM32F103RC -D
#        STM32_FLASH_SIZE=256 -D HSE_VALUE=25000000 -lCN
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\
#        -o
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC199B-100\Library\Project\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\AES\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Config\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Port\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\OS\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Config\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Protocol\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Iap\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Driver\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\uCOS-III\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\CoreSupport\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\STM32F10x_StdPeriph_Driver\inc\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\ARM-Cortex-M3\IAR\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-LIB\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\OSAL\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\OSAL\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Source\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\option\ -Om
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\main.lst
#    Object file  =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\main.o
#
###############################################################################

F:\iar\NC199B-100\Library\Source\APP\main.c
      1          /*******************************************************************************
      2           *   Filename:      app.c
      3           *   Revised:       $Date: 2013-06-30$
      4           *   Revision:      $
      5           *	 Writer:		Wuming Shen.
      6           *
      7           *   Description:
      8           *   Notes:
      9           *					QQ:276193028
     10           *     				E-mail:shenchangwei945@163.com
     11           *
     12           *   All copyrights reserved to Wuming Shen.
     13           *
     14           *******************************************************************************/
     15          
     16          /*******************************************************************************
     17           * INCLUDES
     18           */
     19          #define  SNL_APP_SOURCE
     20          #include <app.h>
     21          #include <iap.h>
     22          #include <bsp_FRAM.h>
     23          
     24          
     25          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     26          const  CPU_CHAR  *main__c = "$Id: $";
     27          #endif
     28          
     29          /*******************************************************************************
     30           * CONSTANTS
     31           */
     32          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 2)
     33          
     34          /*******************************************************************************
     35           * MACROS
     36           */
     37          
     38          /*******************************************************************************
     39           * TYPEDEFS
     40           */
     41          
     42          /*******************************************************************************
     43           * LOCAL VARIABLES
     44           */
     45          
     46          /*******************************************************************************
     47           * GLOBAL VARIABLES
     48           */
     49          
     50          /*******************************************************************************
     51           * LOCAL FUNCTIONS
     52           *
     53           * 返回类型         函数名称                入口参数
     54           */
     55          
     56          /*******************************************************************************
     57           * GLOBAL FUNCTIONS
     58           */
     59          
     60          /*******************************************************************************
     61           * EXTERN VARIABLES
     62           */
     63          
     64          /*******************************************************************************
     65           * EXTERN FUNCTIONS
     66           */
     67          
     68          
     69          

   \                                 In section .text, align 2, keep-with-next
     70          void    app_init_sctrl(void)
     71          {
   \                     app_init_sctrl: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     72              Ctrl.Para.dat.Password      =   6237;
   \   00000002   0x....             LDR.N    R4,??DataTable1
   \   00000004   0xF641 0x005D      MOVW     R0,#+6237
   \   00000008   0x8020             STRH     R0,[R4, #+0]
     73              Ctrl.Para.dat.SoftWareID    =   0101;   //年月，版本
   \   0000000A   0x2041             MOVS     R0,#+65
   \   0000000C   0x8060             STRH     R0,[R4, #+2]
     74              
     75          
     76          //   	FRAM_StoreRunPara((stcRunPara *) &Ctrl.sRunPara);
     77              FRAM_ReadRunPara((stcRunPara *) &Ctrl.Para.dat.sRunPara);   //读取运行参数
   \   0000000E   0xF104 0x0548      ADD      R5,R4,#+72
   \   00000012   0x4628             MOV      R0,R5
   \   00000014   0x.... 0x....      BL       FRAM_ReadRunPara
     78           
     79          //开始标示    //存储时间间隔
     80              Ctrl.Para.dat.sRunPara.StartFlg = 1;  
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x70E8             STRB     R0,[R5, #+3]
     81              //Ctrl.Para.dat.sRunPara.SysSta   = 0;        
     82                  
     83              Ctrl.Para.dat.sRunPara.RecClear = 0;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x7068             STRB     R0,[R5, #+1]
     84              Ctrl.Para.dat.sRunPara.StoreCycle= 60;       
   \   00000020   0x203C             MOVS     R0,#+60
   \   00000022   0x7028             STRB     R0,[R5, #+0]
     85              Ctrl.Para.dat.sRunPara.SysReset = 0;
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x70A8             STRB     R0,[R5, #+2]
     86              
     87              Ctrl.Para.dat.sAirPara.sStandard_Dust.GoodLimit     = 200;
   \   00000028   0x20C8             MOVS     R0,#+200
   \   0000002A   0x8520             STRH     R0,[R4, #+40]
     88              Ctrl.Para.dat.sAirPara.sStandard_Dust.NormalLimit   = 500;
   \   0000002C   0xF44F 0x70FA      MOV      R0,#+500
   \   00000030   0x8560             STRH     R0,[R4, #+42]
     89              
     90              Ctrl.Para.dat.sAirPara.sStandard_VOC.GoodLimit      = 500;
   \   00000032   0x84A0             STRH     R0,[R4, #+36]
     91              Ctrl.Para.dat.sAirPara.sStandard_VOC.NormalLimit    = 2000;
   \   00000034   0xF44F 0x60FA      MOV      R0,#+2000
   \   00000038   0x84E0             STRH     R0,[R4, #+38]
     92              
     93              Ctrl.Para.dat.sAirPara.sStandard_Hum.GoodLimit      = 60;
   \   0000003A   0x203C             MOVS     R0,#+60
   \   0000003C   0x8420             STRH     R0,[R4, #+32]
     94              Ctrl.Para.dat.sAirPara.sStandard_Hum.NormalLimit    = 85;
   \   0000003E   0x2055             MOVS     R0,#+85
   \   00000040   0x8460             STRH     R0,[R4, #+34]
     95              
     96              Ctrl.Para.dat.sAirPara.Dust_modefy  = 0;
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x8620             STRH     R0,[R4, #+48]
     97              Ctrl.Para.dat.sAirPara.Hum_modefy   = 0;
   \   00000046   0x85E0             STRH     R0,[R4, #+46]
     98              Ctrl.Para.dat.sAirPara.Voc_modefy   = 0;
   \   00000048   0x8660             STRH     R0,[R4, #+50]
     99              
    100              FRAM_StoreRunPara((stcRunPara *) &Ctrl.Para.dat.sRunPara);   //读取运行参数
   \   0000004A   0x4628             MOV      R0,R5
   \   0000004C   0x.... 0x....      BL       FRAM_StoreRunPara
    101              
    102              
    103          //测量装置1 初始化    
    104              Ctrl.Mtr.ConnCtrl[0].ConnFlg   = 1;
   \   00000050   0xF504 0x7033      ADD      R0,R4,#+716
   \   00000054   0x2101             MOVS     R1,#+1
   \   00000056   0x7001             STRB     R1,[R0, #+0]
    105              Ctrl.Mtr.ConnCtrl[0].ErrFlg    = 0;
   \   00000058   0x2100             MOVS     R1,#+0
   \   0000005A   0x70C1             STRB     R1,[R0, #+3]
    106              Ctrl.Mtr.ConnCtrl[0].MasterAddr= MASTE_ADDR_HOST;
   \   0000005C   0x2182             MOVS     R1,#+130
   \   0000005E   0x7141             STRB     R1,[R0, #+5]
    107          //    Ctrl.Mtr.ConnCtrl[0].SlaveAddr = MASTE_ADDR_HOST+0x10;
    108              Ctrl.Mtr.ConnCtrl[0].SlaveAddr = SLAVE_ADDR_DIP1;
   \   00000060   0x21A1             MOVS     R1,#+161
   \   00000062   0x7101             STRB     R1,[R0, #+4]
    109              Ctrl.Mtr.ConnCtrl[0].SendFlg   = 0;
   \   00000064   0x2100             MOVS     R1,#+0
   \   00000066   0x71C1             STRB     R1,[R0, #+7]
    110              Ctrl.Mtr.ConnCtrl[0].SendFramNum=1;
   \   00000068   0x2101             MOVS     R1,#+1
   \   0000006A   0x7181             STRB     R1,[R0, #+6]
    111              Ctrl.Mtr.ConnCtrl[0].TimeOut   = 10;
   \   0000006C   0x210A             MOVS     R1,#+10
   \   0000006E   0x7081             STRB     R1,[R0, #+2]
    112              
    113          //测量装置2 初始化    
    114              Ctrl.Mtr.ConnCtrl[1].ConnFlg   = 1;
   \   00000070   0x2101             MOVS     R1,#+1
   \   00000072   0x7201             STRB     R1,[R0, #+8]
    115              Ctrl.Mtr.ConnCtrl[1].ErrFlg    = 0;
   \   00000074   0x2100             MOVS     R1,#+0
   \   00000076   0x72C1             STRB     R1,[R0, #+11]
    116              Ctrl.Mtr.ConnCtrl[1].MasterAddr= MASTE_ADDR_HOST;
   \   00000078   0x2182             MOVS     R1,#+130
   \   0000007A   0x7341             STRB     R1,[R0, #+13]
    117              Ctrl.Mtr.ConnCtrl[1].SlaveAddr = SLAVE_ADDR_DIP2;
   \   0000007C   0x21A2             MOVS     R1,#+162
   \   0000007E   0x7301             STRB     R1,[R0, #+12]
    118              Ctrl.Mtr.ConnCtrl[1].RecvEndFlg= 0;
   \   00000080   0x2100             MOVS     R1,#+0
   \   00000082   0x7241             STRB     R1,[R0, #+9]
    119              Ctrl.Mtr.ConnCtrl[1].SendFlg   = 0;
   \   00000084   0x73C1             STRB     R1,[R0, #+15]
    120              Ctrl.Mtr.ConnCtrl[1].SendFramNum=1;
   \   00000086   0x2101             MOVS     R1,#+1
   \   00000088   0x7381             STRB     R1,[R0, #+14]
    121              Ctrl.Mtr.ConnCtrl[1].TimeOut   = 10;    
   \   0000008A   0x210A             MOVS     R1,#+10
   \   0000008C   0x7281             STRB     R1,[R0, #+10]
    122              
    123          //无线模块 数据 初始化    
    124              Ctrl.Dtu.ConnCtrl[0].ConnFlg   = 1;
   \   0000008E   0xF204 0x402D      ADDW     R0,R4,#+1069
   \   00000092   0x2101             MOVS     R1,#+1
   \   00000094   0x7001             STRB     R1,[R0, #+0]
    125              Ctrl.Dtu.ConnCtrl[0].ErrFlg    = 0;
   \   00000096   0x2100             MOVS     R1,#+0
   \   00000098   0x70C1             STRB     R1,[R0, #+3]
    126              Ctrl.Dtu.ConnCtrl[0].MasterAddr= MASTE_ADDR_HOST;
   \   0000009A   0x2182             MOVS     R1,#+130
   \   0000009C   0x7141             STRB     R1,[R0, #+5]
    127              Ctrl.Dtu.ConnCtrl[0].SlaveAddr = SLAVE_ADDR_DTU;
   \   0000009E   0x21CA             MOVS     R1,#+202
   \   000000A0   0x7101             STRB     R1,[R0, #+4]
    128              Ctrl.Dtu.ConnCtrl[0].RecvEndFlg= 0;
   \   000000A2   0x2100             MOVS     R1,#+0
   \   000000A4   0x7041             STRB     R1,[R0, #+1]
    129              Ctrl.Dtu.ConnCtrl[0].SendFlg   = 0;
   \   000000A6   0x71C1             STRB     R1,[R0, #+7]
    130              Ctrl.Dtu.ConnCtrl[0].SendFramNum=1;
   \   000000A8   0x2101             MOVS     R1,#+1
   \   000000AA   0x7181             STRB     R1,[R0, #+6]
    131              Ctrl.Dtu.ConnCtrl[0].TimeOut   = 10;    
   \   000000AC   0x210A             MOVS     R1,#+10
   \   000000AE   0x7081             STRB     R1,[R0, #+2]
    132              
    133          //无线模块 参数 初始化    
    134              Ctrl.Dtu.ConnCtrl[1].ConnFlg   = 1;
   \   000000B0   0x2101             MOVS     R1,#+1
   \   000000B2   0x7201             STRB     R1,[R0, #+8]
    135              Ctrl.Dtu.ConnCtrl[1].ErrFlg    = 0;
   \   000000B4   0x2100             MOVS     R1,#+0
   \   000000B6   0x72C1             STRB     R1,[R0, #+11]
    136              Ctrl.Dtu.ConnCtrl[1].MasterAddr= MASTE_ADDR_HOST;
   \   000000B8   0x2182             MOVS     R1,#+130
   \   000000BA   0x7341             STRB     R1,[R0, #+13]
    137              Ctrl.Dtu.ConnCtrl[1].SlaveAddr = SLAVE_ADDR_SET;
   \   000000BC   0x21C2             MOVS     R1,#+194
   \   000000BE   0x7301             STRB     R1,[R0, #+12]
    138              Ctrl.Dtu.ConnCtrl[1].RecvEndFlg= 0;
   \   000000C0   0x2100             MOVS     R1,#+0
   \   000000C2   0x7241             STRB     R1,[R0, #+9]
    139              Ctrl.Dtu.ConnCtrl[1].SendFlg   = 0;
   \   000000C4   0x73C1             STRB     R1,[R0, #+15]
    140              Ctrl.Dtu.ConnCtrl[1].SendFramNum=1;
   \   000000C6   0x2101             MOVS     R1,#+1
   \   000000C8   0x7381             STRB     R1,[R0, #+14]
    141              Ctrl.Dtu.ConnCtrl[1].TimeOut   = 10;   
   \   000000CA   0x210A             MOVS     R1,#+10
   \   000000CC   0x7281             STRB     R1,[R0, #+10]
    142          }
   \   000000CE   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    143          
    144          
    145          /*******************************************************************************
    146           * 名    称： App_Main
    147           * 功    能： 系统初开始前调用此函数
    148           * 入口参数： 无
    149           * 出口参数： 无
    150           * 作　 　者： 无名沈
    151           * 创建日期： 2014-08-08
    152           * 修    改：
    153           * 修改日期：
    154           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    155           void App_Main(void)
    156           {
   \                     App_Main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    157              /***********************************************
    158              * 描述： Disable all interrupts.
    159              */
    160              BSP_IntDisAll();
   \   00000002   0x.... 0x....      BL       BSP_IntDisAll
    161              /***********************************************
    162              * 描述： 重新设置应用程序中断向量表，如果没有BOOTLOADER
    163              *        NVIC_VectTab_FLASH_OFFSET = 0
    164              */
    165          //#if defined     (IMAGE_A)
    166          //    /***********************************************
    167          //    * 描述： 程序A
    168          //    */
    169          //    NVIC_SetVectorTable(NVIC_VectTab_FLASH, FLASH_APP_ADDR_A-FLASH_BOOT_ADDR);
    170          //    IAP_SetStatus(IAP_STS_SUCCEED); 
    171          //#elif defined   (IMAGE_B)
    172          //    /***********************************************
    173          //    * 描述： 程序B
    174          //    */
    175          //    NVIC_SetVectorTable(NVIC_VectTab_FLASH, FLASH_APP_ADDR_B-FLASH_BOOT_ADDR);
    176          //    IAP_SetStatus(IAP_STS_SUCCEED); 
    177          //#else
    178          //    /***********************************************
    179          //    * 描述： 程序
    180          //    */
    181          //    NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0X0000);
    182          //#endif
    183          // 
    184              
    185              //iap  
    186              NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0X10000);
   \   00000006   0xF44F 0x3180      MOV      R1,#+65536
   \   0000000A   0xF04F 0x6000      MOV      R0,#+134217728
   \   0000000E   0x.... 0x....      BL       NVIC_SetVectorTable
    187          
    188              
    189              //CPU_IntEn();
    190              //BSP_IntEn();
    191              //init  ctrl
    192              app_init_sctrl();
   \   00000012   0xE8BD 0x4001      POP      {R0,LR}
   \   00000016   0x....             B.N      app_init_sctrl
    193           }
    194          
    195          /*******************************************************************************
    196           * 名    称： App_InitStartHook
    197           * 功    能： 系统初始化开始前调用此函数
    198           * 入口参数： 无
    199           * 出口参数： 无
    200           * 作　 　者： 无名沈
    201           * 创建日期： 2014-08-08
    202           * 修    改：
    203           * 修改日期：
    204           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    205           void App_InitStartHook(void)
    206           {
    207           
    208           }
   \                     App_InitStartHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    209           
    210          /*******************************************************************************
    211           * 名    称： App_InitEndHook
    212           * 功    能： 系统初始化结速后调用此函数
    213           * 入口参数： 无
    214           * 出口参数： 无
    215           * 作　 　者： 无名沈
    216           * 创建日期： 2014-08-08
    217           * 修    改：
    218           * 修改日期：
    219           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    220           void App_InitEndHook(void)
    221           {
    222           
    223           }
   \                     App_InitEndHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    224           
    225           /*******************************************************************************
    226           * 名    称： OS_TaskCreateHook
    227           * 功    能： OS创建任务回调函数
    228           * 入口参数： 无
    229           * 出口参数： 无
    230           * 作  　者： 无名沈
    231           * 创建日期： 2014-08-08
    232           * 修    改：
    233           * 修改日期：
    234           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    235           void OS_TaskCreateHook(void)
    236           {     
    237          //    App_TaskMaterCreate();
    238          //    App_TaskDtuCreate();
    239              //App_TaskKeyCreate();
    240              //App_TaskBeepCreate();
    241           }
   \                     OS_TaskCreateHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    242           
    243           /*******************************************************************************
    244           * 名    称： OSAL_TaskCreateHook
    245           * 功    能： OSAL创建任务回调函数
    246           * 入口参数： 无
    247           * 出口参数： 无
    248           * 作　 　者： 无名沈
    249           * 创建日期： 2014-08-08
    250           * 修    改：
    251           * 修改日期：
    252           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    253           void OSAL_TaskCreateHook(void)
    254           {
   \                     OSAL_TaskCreateHook: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    255          
    256              osal_add_Task(TaskInitDisp,                     // 任务初始化函数指针
    257                            TaskDispEvtProcess,               // 任务事件处理函数指针
    258                            OS_TASK_PRO_DISP,                 // 任务优先级
    259                            OS_TASK_ID_DISP);                 // 任务ID 
   \   00000002   0x2302             MOVS     R3,#+2
   \   00000004   0x2207             MOVS     R2,#+7
   \   00000006   0x....             LDR.N    R1,??DataTable1_1
   \   00000008   0x....             LDR.N    R0,??DataTable1_2
   \   0000000A   0x.... 0x....      BL       osal_add_Task
    260              
    261              osal_add_Task(TaskInitLed,                      // 任务初始化函数指针
    262                            TaskLedEvtProcess,                // 任务事件处理函数指针
    263                            OS_TASK_PRO_LED,                  // 任务优先级
    264                            OS_TASK_ID_LED);                  // 任务ID    
   \   0000000E   0x2303             MOVS     R3,#+3
   \   00000010   0x2206             MOVS     R2,#+6
   \   00000012   0x....             LDR.N    R1,??DataTable1_3
   \   00000014   0x....             LDR.N    R0,??DataTable1_4
   \   00000016   0x.... 0x....      BL       osal_add_Task
    265              
    266              osal_add_Task(TaskInitStore,                    // 任务初始化函数指针
    267                            TaskStoreEvtProcess,              // 任务事件处理函数指针
    268                            OS_TASK_PRO_STORE,                // 任务优先级
    269                            OS_TASK_ID_STORE);                // 任务ID
   \   0000001A   0x2304             MOVS     R3,#+4
   \   0000001C   0x2205             MOVS     R2,#+5
   \   0000001E   0x....             LDR.N    R1,??DataTable1_5
   \   00000020   0x....             LDR.N    R0,??DataTable1_6
   \   00000022   0x.... 0x....      BL       osal_add_Task
    270              
    271              osal_add_Task(TaskInitTmr,                      // 任务初始化函数指针
    272                            TaskTmrEvtProcess,                // 任务事件处理函数指针
    273                            OS_TASK_PRO_TMR,                  // 任务优先级
    274                            OS_TASK_ID_TMR);                  // 任务ID
   \   00000026   0x2301             MOVS     R3,#+1
   \   00000028   0x2208             MOVS     R2,#+8
   \   0000002A   0x....             LDR.N    R1,??DataTable1_7
   \   0000002C   0x....             LDR.N    R0,??DataTable1_8
   \   0000002E   0x.... 0x....      BL       osal_add_Task
    275              
    276              osal_add_Task(TaskInitMtrSend,                  // 任务初始化函数指针
    277                            TaskMtrSendEvtProcess,            // 任务事件处理函数指针
    278                            OS_TASK_PRO_MTRSEND,                  // 任务优先级
    279                            OS_TASK_ID_MTRSNED);                  // 任务ID    
   \   00000032   0x2305             MOVS     R3,#+5
   \   00000034   0x2204             MOVS     R2,#+4
   \   00000036   0x....             LDR.N    R1,??DataTable1_9
   \   00000038   0x....             LDR.N    R0,??DataTable1_10
   \   0000003A   0xE8BD 0x5000      POP      {R12,LR}
   \   0000003E   0x.... 0x....      B.W      osal_add_Task
    280              
    281           }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     Ctrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     TaskDispEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     TaskInitDisp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     TaskLedEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     TaskInitLed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     TaskStoreEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     TaskInitStore

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     TaskTmrEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     TaskInitTmr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     TaskMtrSendEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     TaskInitMtrSend
    282          /*******************************************************************************
    283           *              end of file                                                    *
    284           *******************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   App_InitEndHook
       0   App_InitStartHook
       8   App_Main
         8   -> BSP_IntDisAll
         8   -> NVIC_SetVectorTable
         0   -> app_init_sctrl
       8   OSAL_TaskCreateHook
         0   -> osal_add_Task
         8   -> osal_add_Task
       0   OS_TaskCreateHook
      16   app_init_sctrl
        16   -> FRAM_ReadRunPara
        16   -> FRAM_StoreRunPara


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       2  App_InitEndHook
       2  App_InitStartHook
      24  App_Main
      66  OSAL_TaskCreateHook
       2  OS_TaskCreateHook
     208  app_init_sctrl

 
 348 bytes in section .text
 
 348 bytes of CODE memory

Errors: none
Warnings: none
