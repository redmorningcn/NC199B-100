###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       13/Dec/2017  10:41:15
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC199B-100\Library\Source\APP\Tasks\app_task_osal_led.c
#    Command line =  
#        F:\iar\NC199B-100\Library\Source\APP\Tasks\app_task_osal_led.c -D
#        USE_STDPERIPH_DRIVER -D _STM32F10X_HD -D STM32F10X_CL -D DEBUG -D
#        STM32F103RC -D STM32_FLASH_SIZE=256 -D HSE_VALUE=25000000 -lCN
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\
#        -o
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC199B-100\Library\Project\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\AES\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Config\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Port\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\OS\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Config\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Protocol\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Iap\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Driver\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\uCOS-III\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\CoreSupport\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\STM32F10x_StdPeriph_Driver\inc\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\ARM-Cortex-M3\IAR\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-LIB\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\OSAL\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\OSAL\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Source\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\option\ -Om
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\app_task_osal_led.lst
#    Object file  =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\app_task_osal_led.o
#
###############################################################################

F:\iar\NC199B-100\Library\Source\APP\Tasks\app_task_osal_led.c
      1          /*******************************************************************************
      2           *   Filename:       app_task_led.c
      3           *   Revised:        All copyrights reserved to redmorningcn.
      4           *   Revision:       v1.0
      5           *   Writer:	     redmoringcn.
      6           *
      7           *   Description:    双击选中 led 按 Ctrl + H, 钩选 Match the case, Replace with
      8           *                   输入您要的名字，点击 Replace All
      9           *                   双击选中 Led 按 Ctrl + H, 钩选 Match the case, Replace with
     10           *                   输入您要的名字，点击 Replace All
     11           *                   双击选中 LED 按 Ctrl + H, 钩选 Match the case, Replace with
     12           *                   输入您要的名字，点击 Replace All
     13           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_LED_PRIO ）
     14           *                                            和 任务堆栈（ APP_TASK_LED_STK_SIZE ）大小
     15           *                   在 app.h 中声明本任务的     创建函数（ void  App_TaskLedCreate(void) ）
     16           *                                            和 看门狗标志位 （ WDTFLAG_Led ）
     17           *
     18           *   Notes:
     19           *     				E-mail: redmorningcn@qq.com
     20           *
     21           *******************************************************************************/
     22          
     23          /*******************************************************************************
     24           * INCLUDES
     25           */
     26          #define  SNL_APP_SOURCE
     27          #include <includes.h>
     28          #include <global.h>
     29          #include <app_ctrl.h>
     30          #include <bsp_DM412.h>
     31          
     32          //#include <iap.h>
     33          
     34          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     35          const  CPU_CHAR  *app_task_led__c = "$Id: $";
     36          #endif
     37          
     38          #define APP_TASK_LED_EN     DEF_ENABLED
     39          #if APP_TASK_LED_EN == DEF_ENABLED
     40          /*******************************************************************************
     41           * CONSTANTS
     42           */
     43          //#define CYCLE_TIME_TICKS     (OS_CFG_TICK_RATE_HZ * 2u)
     44          
     45          /*******************************************************************************
     46           * MACROS
     47           */
     48          //#define     BSP_LED_NUM         8
     49          ////LED点亮次数 
     50          //#define     LED_TOGGLE_CNT      15
     51          
     52          
     53          /*******************************************************************************
     54           * TYPEDEFS
     55           */
     56          
     57          /*******************************************************************************
     58           * LOCAL VARIABLES
     59           */
     60          //
     61          //uint8   LedWorkTimes[BSP_LED_NUM + 1] = 0;
     62          
     63          #if ( OSAL_EN == DEF_ENABLED )
     64          #else
     65          /***********************************************
     66          * 描述： 任务控制块（TCB）
     67          */
     68          static  OS_TCB   AppTaskLedTCB;
     69          
     70          /***********************************************
     71          * 描述： 任务堆栈（STACKS）
     72          */
     73          //static  CPU_STK  AppTaskLedStk[ APP_TASK_LED_STK_SIZE ];
     74          
     75          #endif
     76          /*******************************************************************************
     77           * GLOBAL VARIABLES
     78           */
     79          
     80          /*******************************************************************************
     81           * LOCAL FUNCTIONS
     82           */
     83          #if ( OSAL_EN == DEF_ENABLED )
     84          #else
     85          static  void    AppTaskLed           (void *p_arg);
     86          #endif
     87          
     88          /*******************************************************************************
     89           * GLOBAL FUNCTIONS
     90           */
     91          
     92          /*******************************************************************************
     93           * EXTERN VARIABLES
     94           */
     95          
     96          /*******************************************************************************/
     97          //red
     98          #define     RGB_LED_COLOR_RED       0xffff,0x0000,0x0000
     99          #define     RGB_LED_COLOR_GREEN     0x0000,0xffff,0x0000
    100          #define     RGB_LED_COLOR_BLUE      0x0000,0x0000,0xffff
    101          #define     RGB_LED_COLOR_WHITE     0xffff,0xffff,0xffff
    102          
    103          //led
    104          #define     HUM_LED         0
    105          #define     DUST_LED        1
    106          #define     OIL_LED         2
    107          
    108          #define     GOOD_GRADE      0
    109          #define     NORMAL_GRADE    1
    110          #define     BAD_GRADE       2
    111          
    112          /*******************************************************************************
    113           * 名    称： AppTaskLed
    114           * 功    能： 控制任务
    115           * 入口参数： p_arg - 由任务创建函数传入
    116           * 出口参数： 无
    117           * 作　 　者： wumingshen.
    118           * 创建日期： 2015-02-05
    119           * 修    改：
    120           * 修改日期：
    121           *******************************************************************************/
    122          
    123          //#if ( OSAL_EN == DEF_ENABLED )

   \                                 In section .text, align 4, keep-with-next
    124          osalEvt  TaskLedEvtProcess(osalTid task_id, osalEvt task_event)
    125          //#else
    126          //static  void  AppTaskLed (void *p_arg)
    127          //#endif
    128          {
   \                     TaskLedEvtProcess: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x460C             MOV      R4,R1
    129          //    OS_ERR      err;
    130          //    INT32U      ticks;
    131          //    INT32S      dly;
    132          //    CPU_SR_ALLOC();
    133          //    
    134          //    /***********************************************
    135          //    * 描述：Task body, always written as an infinite loop.
    136          //    */
    137          //#if ( OSAL_EN == DEF_ENABLED )
    138          //#else
    139          //    TaskInitLed();
    140          //    
    141          //    while (DEF_TRUE) {
    142          //#endif
    143          //        /***********************************************
    144          //        * 描述： 本任务看门狗标志置位
    145          //        */
    146          //        OS_FlagPost ((OS_FLAG_GRP *)&WdtFlagGRP,
    147          //                     (OS_FLAGS     ) WDT_FLAG_LED,
    148          //                     (OS_OPT       ) OS_OPT_POST_FLAG_SET,
    149          //                     (CPU_TS       ) 0,
    150          //                     (OS_ERR      *) &err);
    151          //        /***********************************************
    152          //        * 描述： 得到系统当前时间
    153          //        */
    154          //        ticks = OSTimeGet(&err);
    155          //        
    156          //#if ( OSAL_EN == DEF_ENABLED )
    157                  if( task_event & OS_EVT_LED_TICKS ) {
   \   00000004   0x07E0             LSLS     R0,R4,#+31
   \   00000006   0xF140 0x80A1      BPL.W    ??TaskLedEvtProcess_1
    158          //#else
    159          //#endif
    160                      static  uint8   mode = 0;
    161                      /***********************************************
    162                      * 描述： 开机显示.red /green /blue
    163                      */
    164                      while(mode < 12)
   \   0000000A   0x....             LDR.N    R0,??DataTable0
   \   0000000C   0x7801             LDRB     R1,[R0, #+0]
   \   0000000E   0x290C             CMP      R1,#+12
   \   00000010   0xDA43             BGE.N    ??TaskLedEvtProcess_2
    165                      {
    166                          mode++;
   \   00000012   0x1C49             ADDS     R1,R1,#+1
   \   00000014   0x7001             STRB     R1,[R0, #+0]
    167                          switch(mode %4)
   \   00000016   0xF001 0x0003      AND      R0,R1,#0x3
   \   0000001A   0x2803             CMP      R0,#+3
   \   0000001C   0xD834             BHI.N    ??TaskLedEvtProcess_3
   \   0000001E   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??TaskLedEvtProcess_0:
   \   00000022   0x02 0x0E          DC8      0x2,0xE,0x1A,0x26
   \              0x1A 0x26    
    168                          {
    169                              case 0:
    170                                      for(uint8 i= 0;i < 3;i++)
   \                     ??TaskLedEvtProcess_4: (+1)
   \   00000026   0x2500             MOVS     R5,#+0
   \                     ??TaskLedEvtProcess_5: (+1)
   \   00000028   0x2D03             CMP      R5,#+3
   \   0000002A   0xDA2D             BGE.N    ??TaskLedEvtProcess_3
    171                                          SetLedColor(i,RGB_LED_COLOR_RED);   break;
   \   0000002C   0x2300             MOVS     R3,#+0
   \   0000002E   0x461A             MOV      R2,R3
   \   00000030   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000034   0x4628             MOV      R0,R5
   \   00000036   0x.... 0x....      BL       SetLedColor
   \   0000003A   0x1C6D             ADDS     R5,R5,#+1
   \   0000003C   0xE7F4             B.N      ??TaskLedEvtProcess_5
    172                              case 1:
    173                                      for(uint8 i= 0;i < 3;i++)
   \                     ??TaskLedEvtProcess_6: (+1)
   \   0000003E   0x2500             MOVS     R5,#+0
   \                     ??TaskLedEvtProcess_7: (+1)
   \   00000040   0x2D03             CMP      R5,#+3
   \   00000042   0xDA21             BGE.N    ??TaskLedEvtProcess_3
    174                                          SetLedColor(i,RGB_LED_COLOR_GREEN); break;
   \   00000044   0x2300             MOVS     R3,#+0
   \   00000046   0xF64F 0x72FF      MOVW     R2,#+65535
   \   0000004A   0x4619             MOV      R1,R3
   \   0000004C   0x4628             MOV      R0,R5
   \   0000004E   0x.... 0x....      BL       SetLedColor
   \   00000052   0x1C6D             ADDS     R5,R5,#+1
   \   00000054   0xE7F4             B.N      ??TaskLedEvtProcess_7
    175                              case 2:
    176                                      for(uint8 i= 0;i < 3;i++)
   \                     ??TaskLedEvtProcess_8: (+1)
   \   00000056   0x2500             MOVS     R5,#+0
   \                     ??TaskLedEvtProcess_9: (+1)
   \   00000058   0x2D03             CMP      R5,#+3
   \   0000005A   0xDA15             BGE.N    ??TaskLedEvtProcess_3
    177                                          SetLedColor(i,RGB_LED_COLOR_BLUE);  break;
   \   0000005C   0xF64F 0x73FF      MOVW     R3,#+65535
   \   00000060   0x2200             MOVS     R2,#+0
   \   00000062   0x4611             MOV      R1,R2
   \   00000064   0x4628             MOV      R0,R5
   \   00000066   0x.... 0x....      BL       SetLedColor
   \   0000006A   0x1C6D             ADDS     R5,R5,#+1
   \   0000006C   0xE7F4             B.N      ??TaskLedEvtProcess_9
    178                              case 3:
    179                                      for(uint8 i= 0;i < 3;i++)
   \                     ??TaskLedEvtProcess_10: (+1)
   \   0000006E   0x2500             MOVS     R5,#+0
   \   00000070   0xF64F 0x76FF      MOVW     R6,#+65535
   \   00000074   0xE006             B.N      ??TaskLedEvtProcess_11
    180                                          SetLedColor(i,RGB_LED_COLOR_WHITE); break;
   \                     ??TaskLedEvtProcess_12: (+1)
   \   00000076   0x4633             MOV      R3,R6
   \   00000078   0x4632             MOV      R2,R6
   \   0000007A   0x4631             MOV      R1,R6
   \   0000007C   0x4628             MOV      R0,R5
   \   0000007E   0x.... 0x....      BL       SetLedColor
   \   00000082   0x1C6D             ADDS     R5,R5,#+1
   \                     ??TaskLedEvtProcess_11: (+1)
   \   00000084   0x2D03             CMP      R5,#+3
   \   00000086   0xDBF6             BLT.N    ??TaskLedEvtProcess_12
    181                          }
    182                              
    183                          osal_start_timerEx( OS_TASK_ID_LED,
    184                                              OS_EVT_LED_TICKS,
    185                                              600);
   \                     ??TaskLedEvtProcess_3: (+1)
   \   00000088   0xF44F 0x7216      MOV      R2,#+600
   \   0000008C   0x2101             MOVS     R1,#+1
   \   0000008E   0x2003             MOVS     R0,#+3
   \   00000090   0x.... 0x....      BL       osal_start_timerEx
    186                          return ( task_event ^ OS_EVT_LED_TICKS );
   \   00000094   0xF084 0x0001      EOR      R0,R4,#0x1
   \   00000098   0xBD70             POP      {R4-R6,PC}
    187                      }
    188          
    189                      /***********************************************
    190                      * 描述： 湿度显示
    191                      */
    192                      switch(Ctrl.sRec.Air_Hum_Grade)
   \                     ??TaskLedEvtProcess_2: (+1)
   \   0000009A   0x....             LDR.N    R5,??DataTable0_1
   \   0000009C   0xF64F 0x76FF      MOVW     R6,#+65535
   \   000000A0   0x7828             LDRB     R0,[R5, #+0]
   \   000000A2   0x2801             CMP      R0,#+1
   \   000000A4   0xD002             BEQ.N    ??TaskLedEvtProcess_13
   \   000000A6   0x2802             CMP      R0,#+2
   \   000000A8   0xD007             BEQ.N    ??TaskLedEvtProcess_14
   \   000000AA   0xE00D             B.N      ??TaskLedEvtProcess_15
    193                      {
    194                          case GOOD_GRADE:
    195                              SetLedColor(HUM_LED,RGB_LED_COLOR_BLUE);    break;
    196                          case NORMAL_GRADE:
    197                              SetLedColor(HUM_LED,RGB_LED_COLOR_GREEN);   break;
   \                     ??TaskLedEvtProcess_13: (+1)
   \   000000AC   0x2300             MOVS     R3,#+0
   \   000000AE   0x4632             MOV      R2,R6
   \   000000B0   0x4619             MOV      R1,R3
   \   000000B2   0x4608             MOV      R0,R1
   \   000000B4   0x.... 0x....      BL       SetLedColor
   \   000000B8   0xE00C             B.N      ??TaskLedEvtProcess_16
    198                          case BAD_GRADE:
    199                              SetLedColor(HUM_LED,RGB_LED_COLOR_RED);     break;
   \                     ??TaskLedEvtProcess_14: (+1)
   \   000000BA   0x2300             MOVS     R3,#+0
   \   000000BC   0x461A             MOV      R2,R3
   \   000000BE   0x4631             MOV      R1,R6
   \   000000C0   0x4610             MOV      R0,R2
   \   000000C2   0x.... 0x....      BL       SetLedColor
   \   000000C6   0xE005             B.N      ??TaskLedEvtProcess_16
    200                          default:       
    201                              SetLedColor(HUM_LED,RGB_LED_COLOR_BLUE);    break;
   \                     ??TaskLedEvtProcess_15: (+1)
   \   000000C8   0x4633             MOV      R3,R6
   \   000000CA   0x2200             MOVS     R2,#+0
   \   000000CC   0x4611             MOV      R1,R2
   \   000000CE   0x4608             MOV      R0,R1
   \   000000D0   0x.... 0x....      BL       SetLedColor
    202                      }
    203                      
    204                      /***********************************************
    205                      * 描述： 油显示
    206                      */
    207                      switch(Ctrl.sRec.Air_Voc_Grade)
   \                     ??TaskLedEvtProcess_16: (+1)
   \   000000D4   0x7868             LDRB     R0,[R5, #+1]
   \   000000D6   0x2801             CMP      R0,#+1
   \   000000D8   0xD002             BEQ.N    ??TaskLedEvtProcess_17
   \   000000DA   0x2802             CMP      R0,#+2
   \   000000DC   0xD007             BEQ.N    ??TaskLedEvtProcess_18
   \   000000DE   0xE00D             B.N      ??TaskLedEvtProcess_19
    208                      {
    209                          case GOOD_GRADE:
    210                              SetLedColor(OIL_LED,RGB_LED_COLOR_BLUE);    break;
    211                          case NORMAL_GRADE:
    212                              SetLedColor(OIL_LED,RGB_LED_COLOR_GREEN);   break;
   \                     ??TaskLedEvtProcess_17: (+1)
   \   000000E0   0x2300             MOVS     R3,#+0
   \   000000E2   0x4632             MOV      R2,R6
   \   000000E4   0x4619             MOV      R1,R3
   \   000000E6   0x2002             MOVS     R0,#+2
   \   000000E8   0x.... 0x....      BL       SetLedColor
   \   000000EC   0xE00C             B.N      ??TaskLedEvtProcess_20
    213                          case BAD_GRADE:
    214                              SetLedColor(OIL_LED,RGB_LED_COLOR_RED);     break;
   \                     ??TaskLedEvtProcess_18: (+1)
   \   000000EE   0x2300             MOVS     R3,#+0
   \   000000F0   0x461A             MOV      R2,R3
   \   000000F2   0x4631             MOV      R1,R6
   \   000000F4   0x2002             MOVS     R0,#+2
   \   000000F6   0x.... 0x....      BL       SetLedColor
   \   000000FA   0xE005             B.N      ??TaskLedEvtProcess_20
    215                          default:       
    216                              SetLedColor(OIL_LED,RGB_LED_COLOR_BLUE);    break;
   \                     ??TaskLedEvtProcess_19: (+1)
   \   000000FC   0x4633             MOV      R3,R6
   \   000000FE   0x2200             MOVS     R2,#+0
   \   00000100   0x4611             MOV      R1,R2
   \   00000102   0x2002             MOVS     R0,#+2
   \   00000104   0x.... 0x....      BL       SetLedColor
    217                      }
    218                         
    219                      /***********************************************
    220                      * 描述： 粉尘显示
    221                      */
    222                      switch(Ctrl.sRec.Air_Dust_Grade)
   \                     ??TaskLedEvtProcess_20: (+1)
   \   00000108   0x78A8             LDRB     R0,[R5, #+2]
   \   0000010A   0x2801             CMP      R0,#+1
   \   0000010C   0xD002             BEQ.N    ??TaskLedEvtProcess_21
   \   0000010E   0x2802             CMP      R0,#+2
   \   00000110   0xD007             BEQ.N    ??TaskLedEvtProcess_22
   \   00000112   0xE00D             B.N      ??TaskLedEvtProcess_23
    223                      {
    224                          case GOOD_GRADE:
    225                              SetLedColor(DUST_LED,RGB_LED_COLOR_BLUE);    break;
    226                          case NORMAL_GRADE:
    227                              SetLedColor(DUST_LED,RGB_LED_COLOR_GREEN);   break;
   \                     ??TaskLedEvtProcess_21: (+1)
   \   00000114   0x2300             MOVS     R3,#+0
   \   00000116   0x4632             MOV      R2,R6
   \   00000118   0x4619             MOV      R1,R3
   \   0000011A   0x2001             MOVS     R0,#+1
   \   0000011C   0x.... 0x....      BL       SetLedColor
   \   00000120   0xE00C             B.N      ??TaskLedEvtProcess_24
    228                          case BAD_GRADE:
    229                              SetLedColor(DUST_LED,RGB_LED_COLOR_RED);     break;
   \                     ??TaskLedEvtProcess_22: (+1)
   \   00000122   0x2300             MOVS     R3,#+0
   \   00000124   0x461A             MOV      R2,R3
   \   00000126   0x4631             MOV      R1,R6
   \   00000128   0x2001             MOVS     R0,#+1
   \   0000012A   0x.... 0x....      BL       SetLedColor
   \   0000012E   0xE005             B.N      ??TaskLedEvtProcess_24
    230                          default:       
    231                              SetLedColor(DUST_LED,RGB_LED_COLOR_BLUE);    break;
   \                     ??TaskLedEvtProcess_23: (+1)
   \   00000130   0x4633             MOV      R3,R6
   \   00000132   0x2200             MOVS     R2,#+0
   \   00000134   0x4611             MOV      R1,R2
   \   00000136   0x2001             MOVS     R0,#+1
   \   00000138   0x.... 0x....      BL       SetLedColor
    232                      }            
    233                      
    234                      /***********************************************
    235                      * 描述： 定时器重启
    236                      */
    237                      osal_start_timerEx( OS_TASK_ID_LED,
    238                                          OS_EVT_LED_TICKS,
    239                                          100);
   \                     ??TaskLedEvtProcess_24: (+1)
   \   0000013C   0x2264             MOVS     R2,#+100
   \   0000013E   0x2101             MOVS     R1,#+1
   \   00000140   0x2003             MOVS     R0,#+3
   \   00000142   0x.... 0x....      BL       osal_start_timerEx
    240                      return ( task_event ^ OS_EVT_LED_TICKS );
   \   00000146   0xF084 0x0001      EOR      R0,R4,#0x1
   \   0000014A   0xBD70             POP      {R4-R6,PC}
    241                  }
    242                  
    243                  
    244                  
    245                  return  task_event;
   \                     ??TaskLedEvtProcess_1: (+1)
   \   0000014C   0x4620             MOV      R0,R4
   \   0000014E   0xBD70             POP      {R4-R6,PC}       ;; return
    246          }

   \                                 In section .bss, align 1
   \                     ??mode:
   \   00000000                      DS8 1
    247          
    248          
    249          /*******************************************************************************
    250           * 名    称：APP_LedInit
    251           * 功    能：任务初始化
    252           * 入口参数：无
    253           * 出口参数：无
    254           * 作　 　者：redmorningcn.
    255           * 创建日期：2017-05-15
    256           * 修    改：
    257           * 修改日期：
    258           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    259          void TaskInitLed(void)
    260          {    
   \                     TaskInitLed: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    261              /***********************************************
    262              * 描述： 初始化本任务用到的相关硬件
    263              */
    264              bsp_DM412Init();            //DM412初始化
   \   00000002   0x.... 0x....      BL       bsp_DM412Init
    265                  
    266              /***********************************************
    267              * 描述： 在看门狗标志组注册本任务的看门狗标志
    268              */
    269              //WdtFlags |= WDT_FLAG_LED;
    270              /*************************************************
    271              * 描述：启动事件查询
    272              */
    273          
    274              osal_start_timerEx( OS_TASK_ID_LED,
    275                                  OS_EVT_LED_TICKS,
    276                                  1000);
   \   00000006   0xF44F 0x727A      MOV      R2,#+1000
   \   0000000A   0x2101             MOVS     R1,#+1
   \   0000000C   0x2003             MOVS     R0,#+3
   \   0000000E   0xE8BD 0x4008      POP      {R3,LR}
   \   00000012   0x.... 0x....      B.W      osal_start_timerEx
    277          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     ??mode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     Ctrl+0x135
    278          
    279          /*******************************************************************************
    280           * 				                    end of file                                *
    281           *******************************************************************************/
    282          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   TaskInitLed
         8   -> bsp_DM412Init
         0   -> osal_start_timerEx
      16   TaskLedEvtProcess
        16   -> SetLedColor
        16   -> osal_start_timerEx


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
      22  TaskInitLed
     336  TaskLedEvtProcess
       1  mode

 
   1 byte  in section .bss
 366 bytes in section .text
 
 366 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: none
