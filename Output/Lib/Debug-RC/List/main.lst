###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       23/Nov/2017  13:36:22
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC199B-100\Library\Source\APP\main.c
#    Command line =  
#        F:\iar\NC199B-100\Library\Source\APP\main.c -D USE_STDPERIPH_DRIVER -D
#        _STM32F10X_HD -D STM32F10X_CL -D DEBUG -D STM32F103RC -D
#        STM32_FLASH_SIZE=256 -D HSE_VALUE=25000000 -lCN
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\
#        -o
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC199B-100\Library\Project\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\AES\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Config\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Port\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\OS\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Config\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Protocol\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Iap\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Driver\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\uCOS-III\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\CoreSupport\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\STM32F10x_StdPeriph_Driver\inc\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\ARM-Cortex-M3\IAR\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-LIB\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\OSAL\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\OSAL\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Source\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\option\ -Om
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\main.lst
#    Object file  =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\main.o
#
###############################################################################

F:\iar\NC199B-100\Library\Source\APP\main.c
      1          /*******************************************************************************
      2           *   Filename:      app.c
      3           *   Revised:       $Date: 2013-06-30$
      4           *   Revision:      $
      5           *	 Writer:		Wuming Shen.
      6           *
      7           *   Description:
      8           *   Notes:
      9           *					QQ:276193028
     10           *     				E-mail:shenchangwei945@163.com
     11           *
     12           *   All copyrights reserved to Wuming Shen.
     13           *
     14           *******************************************************************************/
     15          
     16          /*******************************************************************************
     17           * INCLUDES
     18           */
     19          #define  SNL_APP_SOURCE
     20          #include <app.h>
     21          #include <iap.h>
     22          
     23          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     24          const  CPU_CHAR  *main__c = "$Id: $";
     25          #endif
     26          
     27          /*******************************************************************************
     28           * CONSTANTS
     29           */
     30          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 2)
     31          
     32          /*******************************************************************************
     33           * MACROS
     34           */
     35          
     36          /*******************************************************************************
     37           * TYPEDEFS
     38           */
     39          
     40          /*******************************************************************************
     41           * LOCAL VARIABLES
     42           */
     43          
     44          /*******************************************************************************
     45           * GLOBAL VARIABLES
     46           */
     47          
     48          /*******************************************************************************
     49           * LOCAL FUNCTIONS
     50           *
     51           * 返回类型         函数名称                入口参数
     52           */
     53          
     54          /*******************************************************************************
     55           * GLOBAL FUNCTIONS
     56           */
     57          
     58          /*******************************************************************************
     59           * EXTERN VARIABLES
     60           */
     61          
     62          /*******************************************************************************
     63           * EXTERN FUNCTIONS
     64           */
     65          
     66          
     67          

   \                                 In section .text, align 2, keep-with-next
     68          void    app_init_sctrl(void)
     69          {
   \                     app_init_sctrl: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     70              Ctrl.Para.dat.Password      =   6237;
   \   00000002   0x....             LDR.N    R4,??DataTable1
   \   00000004   0xF641 0x005D      MOVW     R0,#+6237
   \   00000008   0x8020             STRH     R0,[R4, #+0]
     71          //    Ctrl.Para.dat.SoftWareID    =   1705;   //年月，版本
     72              
     73          
     74          //   	FRAM_StoreRunPara((stcRunPara *) &Ctrl.sRunPara);
     75              FRAM_ReadRunPara((stcRunPara *) &Ctrl.Para.dat.sRunPara);   //读取运行参数
   \   0000000A   0xF104 0x0544      ADD      R5,R4,#+68
   \   0000000E   0x4628             MOV      R0,R5
   \   00000010   0x.... 0x....      BL       FRAM_ReadRunPara
     76           
     77          //开始标示    //存储时间间隔
     78              Ctrl.Para.dat.sRunPara.StartFlg = 1;  
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x70E8             STRB     R0,[R5, #+3]
     79              //Ctrl.Para.dat.sRunPara.SysSta   = 0;        
     80                  
     81              Ctrl.Para.dat.sRunPara.RecClear = 0;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x7068             STRB     R0,[R5, #+1]
     82              Ctrl.Para.dat.sRunPara.StoreTime= 60;       
   \   0000001C   0x203C             MOVS     R0,#+60
   \   0000001E   0x7028             STRB     R0,[R5, #+0]
     83              Ctrl.Para.dat.sRunPara.SysReset = 0;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x70A8             STRB     R0,[R5, #+2]
     84              
     85              Ctrl.Para.dat.sAirPara.sStandard_Dust.GoodLimit     = 150;
   \   00000024   0x2096             MOVS     R0,#+150
   \   00000026   0x8520             STRH     R0,[R4, #+40]
     86              Ctrl.Para.dat.sAirPara.sStandard_Dust.NormalLimit   = 500;
   \   00000028   0xF44F 0x70FA      MOV      R0,#+500
   \   0000002C   0x8560             STRH     R0,[R4, #+42]
     87              
     88              Ctrl.Para.dat.sAirPara.sStandard_VOC.GoodLimit      = 300;
   \   0000002E   0xF44F 0x7096      MOV      R0,#+300
   \   00000032   0x84A0             STRH     R0,[R4, #+36]
     89              Ctrl.Para.dat.sAirPara.sStandard_VOC.NormalLimit    = 1000;
   \   00000034   0xF44F 0x707A      MOV      R0,#+1000
   \   00000038   0x84E0             STRH     R0,[R4, #+38]
     90              
     91              Ctrl.Para.dat.sAirPara.sStandard_Hum.GoodLimit      = 50;
   \   0000003A   0x2032             MOVS     R0,#+50
   \   0000003C   0x8420             STRH     R0,[R4, #+32]
     92              Ctrl.Para.dat.sAirPara.sStandard_Hum.NormalLimit    = 70;
   \   0000003E   0x2046             MOVS     R0,#+70
   \   00000040   0x8460             STRH     R0,[R4, #+34]
     93              
     94              Ctrl.Para.dat.sAirPara.Dust_modefy  = 0;
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x8620             STRH     R0,[R4, #+48]
     95              Ctrl.Para.dat.sAirPara.Hum_modefy   = 0;
   \   00000046   0x85E0             STRH     R0,[R4, #+46]
     96              Ctrl.Para.dat.sAirPara.Voc_modefy   = 0;
   \   00000048   0x8660             STRH     R0,[R4, #+50]
     97              
     98              FRAM_StoreRunPara((stcRunPara *) &Ctrl.Para.dat.sRunPara);   //读取运行参数
   \   0000004A   0x4628             MOV      R0,R5
   \   0000004C   0x.... 0x....      BL       FRAM_StoreRunPara
     99              
    100              
    101          //测量装置1 初始化    
    102              Ctrl.Mtr.ConnCtrl[0].ConnFlg   = 1;
   \   00000050   0xF504 0x7033      ADD      R0,R4,#+716
   \   00000054   0x2101             MOVS     R1,#+1
   \   00000056   0x7001             STRB     R1,[R0, #+0]
    103              Ctrl.Mtr.ConnCtrl[0].ErrFlg    = 0;
   \   00000058   0x2100             MOVS     R1,#+0
   \   0000005A   0x70C1             STRB     R1,[R0, #+3]
    104              Ctrl.Mtr.ConnCtrl[0].MasterAddr= 0x80;
   \   0000005C   0x2180             MOVS     R1,#+128
   \   0000005E   0x7141             STRB     R1,[R0, #+5]
    105              Ctrl.Mtr.ConnCtrl[0].SlaveAddr = 0x80+0x10;
   \   00000060   0x2190             MOVS     R1,#+144
   \   00000062   0x7101             STRB     R1,[R0, #+4]
    106              Ctrl.Mtr.ConnCtrl[0].SlaveAddr = SLAVE_ADDR_DIP1;
   \   00000064   0x21A1             MOVS     R1,#+161
   \   00000066   0x7101             STRB     R1,[R0, #+4]
    107              Ctrl.Mtr.ConnCtrl[0].SendFlg   = 0;
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x71C1             STRB     R1,[R0, #+7]
    108              Ctrl.Mtr.ConnCtrl[0].SendFramNum=1;
   \   0000006C   0x2101             MOVS     R1,#+1
   \   0000006E   0x7181             STRB     R1,[R0, #+6]
    109              Ctrl.Mtr.ConnCtrl[0].TimeOut   = 10;
   \   00000070   0x210A             MOVS     R1,#+10
   \   00000072   0x7081             STRB     R1,[R0, #+2]
    110              
    111          //测量装置2 初始化    
    112              Ctrl.Mtr.ConnCtrl[1].ConnFlg   = 1;
   \   00000074   0x2101             MOVS     R1,#+1
   \   00000076   0x7201             STRB     R1,[R0, #+8]
    113              Ctrl.Mtr.ConnCtrl[1].ErrFlg    = 0;
   \   00000078   0x2100             MOVS     R1,#+0
   \   0000007A   0x72C1             STRB     R1,[R0, #+11]
    114              Ctrl.Mtr.ConnCtrl[1].MasterAddr= 0x80;
   \   0000007C   0x2180             MOVS     R1,#+128
   \   0000007E   0x7341             STRB     R1,[R0, #+13]
    115              Ctrl.Mtr.ConnCtrl[1].SlaveAddr = SLAVE_ADDR_DIP2;
   \   00000080   0x21A2             MOVS     R1,#+162
   \   00000082   0x7301             STRB     R1,[R0, #+12]
    116              Ctrl.Mtr.ConnCtrl[1].RecvEndFlg= 0;
   \   00000084   0x2100             MOVS     R1,#+0
   \   00000086   0x7241             STRB     R1,[R0, #+9]
    117              Ctrl.Mtr.ConnCtrl[1].SendFlg   = 0;
   \   00000088   0x73C1             STRB     R1,[R0, #+15]
    118              Ctrl.Mtr.ConnCtrl[1].SendFramNum=1;
   \   0000008A   0x2101             MOVS     R1,#+1
   \   0000008C   0x7381             STRB     R1,[R0, #+14]
    119              Ctrl.Mtr.ConnCtrl[1].TimeOut   = 10;    
   \   0000008E   0x210A             MOVS     R1,#+10
   \   00000090   0x7281             STRB     R1,[R0, #+10]
    120              
    121          //无线模块 数据 初始化    
    122              Ctrl.Dtu.ConnCtrl[0].ConnFlg   = 1;
   \   00000092   0xF204 0x402D      ADDW     R0,R4,#+1069
   \   00000096   0x2101             MOVS     R1,#+1
   \   00000098   0x7001             STRB     R1,[R0, #+0]
    123              Ctrl.Dtu.ConnCtrl[0].ErrFlg    = 0;
   \   0000009A   0x2100             MOVS     R1,#+0
   \   0000009C   0x70C1             STRB     R1,[R0, #+3]
    124              Ctrl.Dtu.ConnCtrl[0].MasterAddr= 0x80;
   \   0000009E   0x2180             MOVS     R1,#+128
   \   000000A0   0x7141             STRB     R1,[R0, #+5]
    125              Ctrl.Dtu.ConnCtrl[0].SlaveAddr = SLAVE_ADDR_DTU;
   \   000000A2   0x21CA             MOVS     R1,#+202
   \   000000A4   0x7101             STRB     R1,[R0, #+4]
    126              Ctrl.Dtu.ConnCtrl[0].RecvEndFlg= 0;
   \   000000A6   0x2100             MOVS     R1,#+0
   \   000000A8   0x7041             STRB     R1,[R0, #+1]
    127              Ctrl.Dtu.ConnCtrl[0].SendFlg   = 0;
   \   000000AA   0x71C1             STRB     R1,[R0, #+7]
    128              Ctrl.Dtu.ConnCtrl[0].SendFramNum=1;
   \   000000AC   0x2101             MOVS     R1,#+1
   \   000000AE   0x7181             STRB     R1,[R0, #+6]
    129              Ctrl.Dtu.ConnCtrl[0].TimeOut   = 10;    
   \   000000B0   0x210A             MOVS     R1,#+10
   \   000000B2   0x7081             STRB     R1,[R0, #+2]
    130              
    131          //无线模块 参数 初始化    
    132              Ctrl.Dtu.ConnCtrl[1].ConnFlg   = 1;
   \   000000B4   0x2101             MOVS     R1,#+1
   \   000000B6   0x7201             STRB     R1,[R0, #+8]
    133              Ctrl.Dtu.ConnCtrl[1].ErrFlg    = 0;
   \   000000B8   0x2100             MOVS     R1,#+0
   \   000000BA   0x72C1             STRB     R1,[R0, #+11]
    134              Ctrl.Dtu.ConnCtrl[1].MasterAddr= 0x80;
   \   000000BC   0x2180             MOVS     R1,#+128
   \   000000BE   0x7341             STRB     R1,[R0, #+13]
    135              Ctrl.Dtu.ConnCtrl[1].SlaveAddr = SLAVE_ADDR_SET;
   \   000000C0   0x21C2             MOVS     R1,#+194
   \   000000C2   0x7301             STRB     R1,[R0, #+12]
    136              Ctrl.Dtu.ConnCtrl[1].RecvEndFlg= 0;
   \   000000C4   0x2100             MOVS     R1,#+0
   \   000000C6   0x7241             STRB     R1,[R0, #+9]
    137              Ctrl.Dtu.ConnCtrl[1].SendFlg   = 0;
   \   000000C8   0x73C1             STRB     R1,[R0, #+15]
    138              Ctrl.Dtu.ConnCtrl[1].SendFramNum=1;
   \   000000CA   0x2101             MOVS     R1,#+1
   \   000000CC   0x7381             STRB     R1,[R0, #+14]
    139              Ctrl.Dtu.ConnCtrl[1].TimeOut   = 10;   
   \   000000CE   0x210A             MOVS     R1,#+10
   \   000000D0   0x7281             STRB     R1,[R0, #+10]
    140          }
   \   000000D2   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    141          
    142          
    143          /*******************************************************************************
    144           * 名    称： App_Main
    145           * 功    能： 系统初开始前调用此函数
    146           * 入口参数： 无
    147           * 出口参数： 无
    148           * 作　 　者： 无名沈
    149           * 创建日期： 2014-08-08
    150           * 修    改：
    151           * 修改日期：
    152           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    153           void App_Main(void)
    154           {
   \                     App_Main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    155              /***********************************************
    156              * 描述： Disable all interrupts.
    157              */
    158              BSP_IntDisAll();
   \   00000002   0x.... 0x....      BL       BSP_IntDisAll
    159              /***********************************************
    160              * 描述： 重新设置应用程序中断向量表，如果没有BOOTLOADER
    161              *        NVIC_VectTab_FLASH_OFFSET = 0
    162              */
    163          #if defined     (IMAGE_A)
    164              /***********************************************
    165              * 描述： 程序A
    166              */
    167              NVIC_SetVectorTable(NVIC_VectTab_FLASH, FLASH_APP_ADDR_A-FLASH_BOOT_ADDR);
    168              IAP_SetStatus(IAP_STS_SUCCEED); 
    169          #elif defined   (IMAGE_B)
    170              /***********************************************
    171              * 描述： 程序B
    172              */
    173              NVIC_SetVectorTable(NVIC_VectTab_FLASH, FLASH_APP_ADDR_B-FLASH_BOOT_ADDR);
    174              IAP_SetStatus(IAP_STS_SUCCEED); 
    175          #else
    176              /***********************************************
    177              * 描述： 程序
    178              */
    179              NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0X0000);
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0xF04F 0x6000      MOV      R0,#+134217728
   \   0000000C   0x.... 0x....      BL       NVIC_SetVectorTable
    180          #endif
    181           
    182              
    183              //iap  
    184              NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0X10000);
   \   00000010   0xF44F 0x3180      MOV      R1,#+65536
   \   00000014   0xF04F 0x6000      MOV      R0,#+134217728
   \   00000018   0x.... 0x....      BL       NVIC_SetVectorTable
    185          
    186              //init  ctrl
    187              app_init_sctrl();
   \   0000001C   0xE8BD 0x4001      POP      {R0,LR}
   \   00000020   0x....             B.N      app_init_sctrl
    188           }
    189          
    190          /*******************************************************************************
    191           * 名    称： App_InitStartHook
    192           * 功    能： 系统初始化开始前调用此函数
    193           * 入口参数： 无
    194           * 出口参数： 无
    195           * 作　 　者： 无名沈
    196           * 创建日期： 2014-08-08
    197           * 修    改：
    198           * 修改日期：
    199           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    200           void App_InitStartHook(void)
    201           {
    202           
    203           }
   \                     App_InitStartHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    204           
    205          /*******************************************************************************
    206           * 名    称： App_InitEndHook
    207           * 功    能： 系统初始化结速后调用此函数
    208           * 入口参数： 无
    209           * 出口参数： 无
    210           * 作　 　者： 无名沈
    211           * 创建日期： 2014-08-08
    212           * 修    改：
    213           * 修改日期：
    214           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    215           void App_InitEndHook(void)
    216           {
    217           
    218           }
   \                     App_InitEndHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    219           
    220           /*******************************************************************************
    221           * 名    称： OS_TaskCreateHook
    222           * 功    能： OS创建任务回调函数
    223           * 入口参数： 无
    224           * 出口参数： 无
    225           * 作  　者： 无名沈
    226           * 创建日期： 2014-08-08
    227           * 修    改：
    228           * 修改日期：
    229           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    230           void OS_TaskCreateHook(void)
    231           {     
    232          //    App_TaskMaterCreate();
    233          //    App_TaskDtuCreate();
    234              //App_TaskKeyCreate();
    235              //App_TaskBeepCreate();
    236           }
   \                     OS_TaskCreateHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    237           
    238           /*******************************************************************************
    239           * 名    称： OSAL_TaskCreateHook
    240           * 功    能： OSAL创建任务回调函数
    241           * 入口参数： 无
    242           * 出口参数： 无
    243           * 作　 　者： 无名沈
    244           * 创建日期： 2014-08-08
    245           * 修    改：
    246           * 修改日期：
    247           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    248           void OSAL_TaskCreateHook(void)
    249           {
   \                     OSAL_TaskCreateHook: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    250              osal_add_Task(TaskInitTmr,                      // 任务初始化函数指针
    251                            TaskTmrEvtProcess,                // 任务事件处理函数指针
    252                            OS_TASK_PRO_TMR,                  // 任务优先级
    253                            OS_TASK_ID_TMR);                  // 任务ID
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2209             MOVS     R2,#+9
   \   00000006   0x....             LDR.N    R1,??DataTable1_1
   \   00000008   0x....             LDR.N    R0,??DataTable1_2
   \   0000000A   0x.... 0x....      BL       osal_add_Task
    254              
    255              osal_add_Task(TaskInitDisp,                     // 任务初始化函数指针
    256                            TaskDispEvtProcess,               // 任务事件处理函数指针
    257                            OS_TASK_PRO_DISP,                 // 任务优先级
    258                            OS_TASK_ID_DISP);                 // 任务ID 
   \   0000000E   0x2301             MOVS     R3,#+1
   \   00000010   0x2208             MOVS     R2,#+8
   \   00000012   0x....             LDR.N    R1,??DataTable1_3
   \   00000014   0x....             LDR.N    R0,??DataTable1_4
   \   00000016   0x.... 0x....      BL       osal_add_Task
    259              
    260              osal_add_Task(TaskInitLed,                      // 任务初始化函数指针
    261                            TaskLedEvtProcess,                // 任务事件处理函数指针
    262                            OS_TASK_PRO_LED,                  // 任务优先级
    263                            OS_TASK_ID_LED);                  // 任务ID    
   \   0000001A   0x2306             MOVS     R3,#+6
   \   0000001C   0x2203             MOVS     R2,#+3
   \   0000001E   0x....             LDR.N    R1,??DataTable1_5
   \   00000020   0x....             LDR.N    R0,??DataTable1_6
   \   00000022   0x.... 0x....      BL       osal_add_Task
    264              
    265              osal_add_Task(TaskInitStore,                    // 任务初始化函数指针
    266                            TaskStoreEvtProcess,              // 任务事件处理函数指针
    267                            OS_TASK_PRO_STORE,                // 任务优先级
    268                            OS_TASK_ID_STORE);                // 任务ID
   \   00000026   0x2304             MOVS     R3,#+4
   \   00000028   0x2205             MOVS     R2,#+5
   \   0000002A   0x....             LDR.N    R1,??DataTable1_7
   \   0000002C   0x....             LDR.N    R0,??DataTable1_8
   \   0000002E   0xE8BD 0x5000      POP      {R12,LR}
   \   00000032   0x.... 0x....      B.W      osal_add_Task
    269           }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     Ctrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     TaskTmrEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     TaskInitTmr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     TaskDispEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     TaskInitDisp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     TaskLedEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     TaskInitLed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     TaskStoreEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     TaskInitStore
    270          /*******************************************************************************
    271           *              end of file                                                    *
    272           *******************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   App_InitEndHook
       0   App_InitStartHook
       8   App_Main
         8   -> BSP_IntDisAll
         8   -> NVIC_SetVectorTable
         0   -> app_init_sctrl
       8   OSAL_TaskCreateHook
         0   -> osal_add_Task
         8   -> osal_add_Task
       0   OS_TaskCreateHook
      16   app_init_sctrl
        16   -> FRAM_ReadRunPara
        16   -> FRAM_StoreRunPara


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       2  App_InitEndHook
       2  App_InitStartHook
      34  App_Main
      54  OSAL_TaskCreateHook
       2  OS_TaskCreateHook
     212  app_init_sctrl

 
 342 bytes in section .text
 
 342 bytes of CODE memory

Errors: none
Warnings: 2
