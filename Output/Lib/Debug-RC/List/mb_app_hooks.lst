###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       23/Nov/2017  13:36:22
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC199B-100\Library\Source\Micrium\uC-MB\Cfg\Template\mb_app_hooks.c
#    Command line =  
#        F:\iar\NC199B-100\Library\Source\Micrium\uC-MB\Cfg\Template\mb_app_hooks.c
#        -D USE_STDPERIPH_DRIVER -D _STM32F10X_HD -D STM32F10X_CL -D DEBUG -D
#        STM32F103RC -D STM32_FLASH_SIZE=256 -D HSE_VALUE=25000000 -lCN
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\
#        -o
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC199B-100\Library\Project\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\AES\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Config\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Port\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\OS\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Config\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Protocol\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Iap\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Driver\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\uCOS-III\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\CoreSupport\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\STM32F10x_StdPeriph_Driver\inc\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\ARM-Cortex-M3\IAR\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-LIB\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\OSAL\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\OSAL\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Source\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\option\ -Om
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\mb_app_hooks.lst
#    Object file  =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\mb_app_hooks.o
#
###############################################################################

F:\iar\NC199B-100\Library\Source\Micrium\uC-MB\Cfg\Template\mb_app_hooks.c
      1          /*
      2          ************************************************************************************************************************
      3          *                                                     uC/MB-III
      4          *                                                The Real-Time Kernel
      5          *
      6          *                                  (c) Copyright 2009-2010; Micrium, Inc.; Weston, FL
      7          *                          All rights reserved.  Protected by international copyright laws.
      8          *
      9          *                                                  APPLICATION HOOKS
     10          *
     11          * File    : MB_APP_HOOKS.C
     12          * By      : JJL
     13          * Version : V3.01.2
     14          *
     15          * LICENSING TERMS:
     16          * ---------------
     17          *               uC/MB-III is provided in source form to reg_baseistered licensees ONLY.  It is
     18          *               illegal to distribute this source code to any third party unless you receive
     19          *               written permission by an authorized Micrium representative.  Knowledge of
     20          *               the source code may NOT be used to develop a similar product.
     21          *
     22          *               Please help us continue to provide the Embedded community with the finest
     23          *               software available.  Your honesty is greatly appreciated.
     24          *
     25          *               You can contact us at www.micrium.com.
     26          ************************************************************************************************************************
     27          */
     28          
     29          #include <app.h>
     30          #include <includes.h>
     31          #include <global.h>
     32          
     33          extern BOOL App_SetParaToSensor(INT08U dev, INT32U addr, INT08U *dat, INT16U len);
     34          
     35          /*$PAGE*/
     36          /*
     37          ************************************************************************************************************************
     38          *                                              SET ALL APPLICATION HOOKS
     39          *
     40          * Description: Set ALL application hooks.
     41          *
     42          * Arguments  : none.
     43          *
     44          * Note(s)    : none
     45          ************************************************************************************************************************
     46          */
     47          

   \                                 In section .text, align 2, keep-with-next
     48          void  App_MB_SetAllHooks (void)
     49          {
     50          #if MB_CFG_APP_HOOKS_EN > 0u
     51          
     52          #endif
     53          }
   \                     App_MB_SetAllHooks: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     54          
     55          /*$PAGE*/
     56          /*
     57          ************************************************************************************************************************
     58          *                                             CLEAR ALL APPLICATION HOOKS
     59          *
     60          * Description: Clear ALL application hooks.
     61          *
     62          * Arguments  : none.
     63          *
     64          * Note(s)    : none
     65          ************************************************************************************************************************
     66          */

   \                                 In section .text, align 2, keep-with-next
     67          CPU_INT08U  App_MB_RdNRegsHook    ( CPU_INT16U  reg_base,
     68                                              CPU_INT16U *prx_data,
     69                                              CPU_INT16U  reg_nbr,
     70                                              CPU_INT16U *perr)
     71          {
   \                     App_MB_RdNRegsHook: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x460C             MOV      R4,R1
   \   00000006   0x4615             MOV      R5,R2
   \   00000008   0x461E             MOV      R6,R3
     72              /***********************************************
     73              * 描述： 密码确认，通讯前先将MB_DATA_ACC_PASSWORD写入reg0
     74              */
     75              if ( Ctrl.Para.dat.Password != MB_DATA_ACC_PASSWORD ) {
   \   0000000A   0x....             LDR.N    R1,??DataTable0
   \   0000000C   0x880A             LDRH     R2,[R1, #+0]
   \   0000000E   0xF641 0x035D      MOVW     R3,#+6237
   \   00000012   0x429A             CMP      R2,R3
   \   00000014   0xD003             BEQ.N    ??App_MB_RdNRegsHook_0
     76                  *perr = MODBUS_ERR_ILLEGAL_DATA_ADDR;
   \   00000016   0x2002             MOVS     R0,#+2
   \   00000018   0x8030             STRH     R0,[R6, #+0]
     77                  return 1;
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0xE027             B.N      ??App_MB_RdNRegsHook_1
     78              }
     79              
     80              /***********************************************
     81              * 描述： 非浮点寄存器
     82              */
     83              if (reg_base < MODBUS_CFG_FP_START_IX) { 
   \                     ??App_MB_RdNRegsHook_0: (+1)
   \   0000001E   0x4602             MOV      R2,R0
   \   00000020   0xF64F 0x73DC      MOVW     R3,#+65500
   \   00000024   0x429A             CMP      R2,R3
   \   00000026   0xDA21             BGE.N    ??App_MB_RdNRegsHook_2
     84                  CPU_INT16U *preg        = (CPU_INT16U *)&Ctrl.Para.buf2[0];
     85                  CPU_INT16U  reg         = reg_base + reg_nbr;
     86                  CPU_INT16U  reg_max     = sizeof(Ctrl) / 2;
     87                  /***********************************************
     88                  * 描述： 获取值
     89                  */
     90                  if ( reg < reg_max ) {
   \   00000028   0x1828             ADDS     R0,R5,R0
   \   0000002A   0xB280             UXTH     R0,R0
   \   0000002C   0xF5B0 0x7F18      CMP      R0,#+608
   \   00000030   0xDC1C             BGT.N    ??App_MB_RdNRegsHook_2
     91                      preg    += reg_base;
   \   00000032   0xEB01 0x0742      ADD      R7,R1,R2, LSL #+1
     92                      
     93                      CPU_SR_ALLOC();
     94                      CPU_CRITICAL_ENTER();
   \   00000036   0x.... 0x....      BL       CPU_SR_Save
   \   0000003A   0x4680             MOV      R8,R0
   \   0000003C   0x.... 0x....      BL       CPU_IntDisMeasStart
     95                      
     96                      for ( int i = 0; i < reg_nbr; i++,preg++ ) {
   \   00000040   0x2100             MOVS     R1,#+0
   \   00000042   0xE008             B.N      ??App_MB_RdNRegsHook_3
     97                          prx_data[i]   = SW_INT16U(*preg);
   \                     ??App_MB_RdNRegsHook_4: (+1)
   \   00000044   0x883A             LDRH     R2,[R7, #+0]
   \   00000046   0x4610             MOV      R0,R2
   \   00000048   0x0A00             LSRS     R0,R0,#+8
   \   0000004A   0xEB00 0x2002      ADD      R0,R0,R2, LSL #+8
   \   0000004E   0xF824 0x0011      STRH     R0,[R4, R1, LSL #+1]
     98                      }
   \   00000052   0x1C49             ADDS     R1,R1,#+1
   \   00000054   0x1CBF             ADDS     R7,R7,#+2
   \                     ??App_MB_RdNRegsHook_3: (+1)
   \   00000056   0x42A9             CMP      R1,R5
   \   00000058   0xDBF4             BLT.N    ??App_MB_RdNRegsHook_4
     99                      CPU_CRITICAL_EXIT();
   \   0000005A   0x.... 0x....      BL       CPU_IntDisMeasStop
   \   0000005E   0x4640             MOV      R0,R8
   \   00000060   0x.... 0x....      BL       CPU_SR_Restore
    100                      *perr = MODBUS_ERR_NONE;
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0x8030             STRH     R0,[R6, #+0]
    101                      return TRUE;
   \   00000068   0x2001             MOVS     R0,#+1
   \   0000006A   0xE000             B.N      ??App_MB_RdNRegsHook_1
    102                  } else {
    103                  }
    104              /***********************************************
    105              * 描述： 浮点寄存器
    106              */
    107              } else {
    108                  CPU_INT16U  *preg       = (CPU_INT16U *)&Ctrl.Para.buf2[0];
    109                  CPU_INT16U  reg         = reg_base + reg_nbr - MODBUS_CFG_FP_START_IX;
    110          //        CPU_INT16U  reg_max     = sizeof(UnionSenPara) / 2;
    111                  /***********************************************
    112                  * 描述： 获取值
    113                  */
    114          //        if ( reg < reg_max ) {
    115          //            preg    += reg_base - MODBUS_CFG_FP_START_IX;
    116          //            CPU_SR_ALLOC();
    117          //            CPU_CRITICAL_ENTER();
    118          //            
    119          //            for ( int i = 0; i < reg_nbr; i++,preg++ ) {
    120          //                prx_data[i]   = SW_INT16U(*preg);
    121          //            }
    122          //            
    123          //            CPU_CRITICAL_EXIT();
    124          //            *perr = MODBUS_ERR_NONE;
    125          //            return TRUE;
    126          //        } else {
    127          //        }
    128              }
    129              
    130              return 0;
   \                     ??App_MB_RdNRegsHook_2: (+1)
   \   0000006C   0x2000             MOVS     R0,#+0
   \                     ??App_MB_RdNRegsHook_1: (+1)
   \   0000006E   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    131          }
    132          
    133          /*$PAGE*/
    134          /*
    135          ************************************************************************************************************************
    136          *                                             CLEAR ALL APPLICATION HOOKS
    137          *
    138          * Description: Clear ALL application hooks.
    139          *
    140          * Arguments  : none.
    141          *
    142          * Note(s)    : none
    143          ************************************************************************************************************************
    144          */

   \                                 In section .text, align 2, keep-with-next
    145          CPU_INT08U  App_MB_WrNRegsHook    ( CPU_INT16U reg_base,
    146                                              CPU_INT16U *prx_data,
    147                                              CPU_INT16U reg_nbr,
    148                                              CPU_INT16U  *perr)
    149          {
    150          //    /***********************************************
    151          //    * 描述： 密码确认，通讯前先将MB_DATA_ACC_PASSWORD写入reg0
    152          //    */
    153          //    if ( ( Ctrl.Para.dat.Password == MB_DATA_ACC_PASSWORD ) ||
    154          //         ( ( reg_base == 0 ) && ( *prx_data == MB_DATA_ACC_PASSWORD ) ) ) {
    155          //    } else {
    156          //        *perr = MODBUS_ERR_ILLEGAL_DATA_ADDR;
    157          //        return 1;
    158          //    }
    159          //    
    160          //    /***********************************************
    161          //    * 描述： 非浮点寄存器
    162          //    */
    163          //    if (reg_base < MODBUS_CFG_FP_START_IX) { 
    164          //        CPU_INT16U *preg        = (CPU_INT16U *)&Ctrl.Para.buf2[0];
    165          //        CPU_INT16U  reg         = reg_base + reg_nbr;
    166          //        /***********************************************
    167          //        * 描述： 写入值
    168          //        */
    169          //        if ( reg < sizeof(Ctrl) / 2 ) {
    170          //            preg    += reg_base;
    171          //            CPU_SR_ALLOC();
    172          //            CPU_CRITICAL_ENTER();
    173          //            for ( int i = 0; i < reg_nbr; i++,preg++ ) {
    174          //                *preg = SW_INT16U(prx_data[i]);
    175          //            }
    176          //            CPU_CRITICAL_EXIT();
    177          //            
    178                      /***********************************************
    179                      * 描述： 写入显示模块校准参数
    180                      */
    181          //            CPU_INT16U __packed *pe     = &Ctrl.Para.buf2[127];
    182          //            CPU_INT16U __packed *pe2    = &Ctrl.Sen.Para.buf2[127];
    183          //            //CPU_INT16U __packed *pe3    = (INT16U *)&Ctrl.Tab.buf2;
    184          //            
    185          //            // 传感器模块参数
    186          //            if ( ( preg >= Ctrl.Sen.Para.buf2 ) &&
    187          //               ( ( preg <= ( pe2 - reg_nbr * 2 ) ) ) ) {
    188          //                INT16U addr = 2 * ( preg - Ctrl.Sen.Para.buf2 );
    189          //                //INT08U *pb  = (INT08U *)&Ctrl.Sen.Para.buf2 + addr;
    190          //                
    191          //                //if ( !App_SetParaToSensor(1, 0, NULL, 256) ) {
    192          //                if ( !App_SetParaToSensor(1, addr, NULL, addr + reg_nbr<<1) ) {
    193          //                    *perr = MODBUS_ERR_ILLEGAL_DATA_VAL;
    194          //                    return TRUE;
    195          //                }
    196          //            // 测量模块参数
    197          //            } else 
    198          //                if ( ( preg >= Ctrl.Para.buf2 ) &&
    199          //               ( ( preg <= ( pe - reg_nbr * 2 ) ) ) ) {
    200          //                INT16U addr = 2 * ( preg - Ctrl.Para.buf2 );
    201          //                //INT08U *pb  = (INT08U *)&Ctrl.Para.buf2 + addr;
    202          //                //if ( !App_SetParaToSensor(2, 0, NULL, 256) ) {
    203          //                if ( !App_SetParaToSensor(2, addr, NULL, addr + reg_nbr<<1) ) {
    204          //                    *perr = MODBUS_ERR_ILLEGAL_DATA_VAL;
    205          //                    return TRUE;
    206          //                }
    207          //            // 容积表
    208          //            }// else if ( ( preg > (INT16U *)&Ctrl.Tab ) &&
    209                      //    ( ( preg <= ( pe3 - reg_nbr * 2 ) ) ) ) {
    210                      //    
    211                      //    INT16U addr = (preg - (INT16U *)&Ctrl.Tab)*2;
    212                      //    INT08U *pb  = (INT08U *)&Ctrl.Tab + addr;
    213                      //    //addr    += 256;
    214                      //    
    215                      //    if ( !App_SetParaToSensor(2, 256 + addr, NULL, addr + reg_nbr<<1) ) {
    216                      //        *perr = MODBUS_ERR_ILLEGAL_DATA_VAL;
    217                      //        return TRUE;
    218                      //    }
    219                      //}
    220          //            
    221          //            /***********************************************
    222          //            * 描述： 
    223          //            */
    224          //            *perr = MODBUS_ERR_NONE;
    225          //            return TRUE;
    226          //        } else {
    227          //            //reg_val = 0;
    228          //            //*perr = MODBUS_ERR_ILLEGAL_DATA_ADDR;
    229          //        }
    230          //    /***********************************************
    231          //    * 描述： 浮点寄存器
    232          //    */
    233          //    } else {
    234          //        CPU_INT16U  *preg       = (CPU_INT16U *)&Ctrl.Para.buf2[0];
    235          //        CPU_INT16U  reg         = reg_base + reg_nbr - MODBUS_CFG_FP_START_IX;
    236          //        
    237          //        /***********************************************
    238          //        * 描述： 获取值
    239          //        */
    240          //        if ( reg < sizeof(UnionSenPara) / 2 ) {
    241          //            preg    += reg_base - MODBUS_CFG_FP_START_IX;
    242          //            CPU_SR_ALLOC();
    243          //            CPU_CRITICAL_ENTER();
    244          //            memcpy((CPU_INT16U *)&preg[reg_base], (CPU_INT16U *)&prx_data[0], reg_nbr);
    245          //            CPU_CRITICAL_EXIT();
    246          //            *perr = MODBUS_ERR_NONE;
    247          //            return TRUE;
    248          //        } else {
    249          //            //reg_val = 0;
    250          //            //*perr = MODBUS_ERR_ILLEGAL_DATA_ADDR;
    251          //        }
    252          //    }
    253          //    
    254          //    return 0;
    255          }
   \                     App_MB_WrNRegsHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    256          
    257          /*$PAGE*/
    258          /*
    259          ************************************************************************************************************************
    260          *                                                APPLICATION TICK HOOK
    261          *
    262          * Description: This function is called every tick.
    263          *
    264          * Arguments  : none
    265          *
    266          * Note(s)    : 1) This function is assumed to be called from the Tick ISR.
    267          ************************************************************************************************************************
    268          */
    269          

   \                                 In section .text, align 2, keep-with-next
    270          void  App_MB_TimeTickHook (void)
    271          {
    272          
    273          }
   \                     App_MB_TimeTickHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     Ctrl

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   App_MB_RdNRegsHook
        24   -> CPU_IntDisMeasStart
        24   -> CPU_IntDisMeasStop
        24   -> CPU_SR_Restore
        24   -> CPU_SR_Save
       0   App_MB_SetAllHooks
       0   App_MB_TimeTickHook
       0   App_MB_WrNRegsHook


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
     114  App_MB_RdNRegsHook
       2  App_MB_SetAllHooks
       2  App_MB_TimeTickHook
       2  App_MB_WrNRegsHook

 
 124 bytes in section .text
 
 124 bytes of CODE memory

Errors: none
Warnings: 3
