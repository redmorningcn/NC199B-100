###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       26/Dec/2017  16:56:40
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC199B-100\Library\Source\APP\main.c
#    Command line =  
#        F:\iar\NC199B-100\Library\Source\APP\main.c -D USE_STDPERIPH_DRIVER -D
#        _STM32F10X_HD -D STM32F10X_CL -D DEBUG -D STM32F103RC -D
#        STM32_FLASH_SIZE=256 -D HSE_VALUE=25000000 -lCN
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\
#        -o
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC199B-100\Library\Project\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\AES\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Config\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Port\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\OS\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Config\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Protocol\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Iap\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Driver\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\uCOS-III\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\CoreSupport\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\STM32F10x_StdPeriph_Driver\inc\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\ARM-Cortex-M3\IAR\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-LIB\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\OSAL\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\OSAL\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Source\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\option\ -Om
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\main.lst
#    Object file  =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\main.o
#
###############################################################################

F:\iar\NC199B-100\Library\Source\APP\main.c
      1          /*******************************************************************************
      2           *   Filename:      app.c
      3           *   Revised:       $Date: 2013-06-30$
      4           *   Revision:      $
      5           *	 Writer:		Wuming Shen.
      6           *
      7           *   Description:
      8           *   Notes:
      9           *					QQ:276193028
     10           *     				E-mail:shenchangwei945@163.com
     11           *
     12           *   All copyrights reserved to Wuming Shen.
     13           *
     14           *******************************************************************************/
     15          
     16          /*******************************************************************************
     17           * INCLUDES
     18           */
     19          #define  SNL_APP_SOURCE
     20          #include <app.h>
     21          #include <iap.h>
     22          #include <bsp_FRAM.h>
     23          
     24          
     25          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     26          const  CPU_CHAR  *main__c = "$Id: $";
     27          #endif
     28          
     29          /*******************************************************************************
     30           * CONSTANTS
     31           */
     32          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 2)
     33          
     34          /*******************************************************************************
     35           * MACROS
     36           */
     37          
     38          /*******************************************************************************
     39           * TYPEDEFS
     40           */
     41          
     42          /*******************************************************************************
     43           * LOCAL VARIABLES
     44           */
     45          
     46          /*******************************************************************************
     47           * GLOBAL VARIABLES
     48           */
     49          
     50          /*******************************************************************************
     51           * LOCAL FUNCTIONS
     52           *
     53           * 返回类型         函数名称                入口参数
     54           */
     55          
     56          /*******************************************************************************
     57           * GLOBAL FUNCTIONS
     58           */
     59          
     60          /*******************************************************************************
     61           * EXTERN VARIABLES
     62           */
     63          
     64          /*******************************************************************************
     65           * EXTERN FUNCTIONS
     66           */
     67          
     68          
     69          

   \                                 In section .text, align 2, keep-with-next
     70          void    app_init_sctrl(void)
     71          {
     72              Ctrl.Para.dat.Password      =   6237;
   \                     app_init_sctrl: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable1
   \   00000002   0xF641 0x015D      MOVW     R1,#+6237
   \   00000006   0x8001             STRH     R1,[R0, #+0]
     73             
     74              
     75              
     76          //测量装置1 初始化    
     77              Ctrl.Mtr.ConnCtrl[0].ConnFlg   = 1;
   \   00000008   0xF500 0x7133      ADD      R1,R0,#+716
   \   0000000C   0x2201             MOVS     R2,#+1
   \   0000000E   0x700A             STRB     R2,[R1, #+0]
     78              Ctrl.Mtr.ConnCtrl[0].ErrFlg    = 0;
   \   00000010   0x2200             MOVS     R2,#+0
   \   00000012   0x70CA             STRB     R2,[R1, #+3]
     79              Ctrl.Mtr.ConnCtrl[0].MasterAddr= MASTE_ADDR_HOST;
   \   00000014   0x2282             MOVS     R2,#+130
   \   00000016   0x714A             STRB     R2,[R1, #+5]
     80          //    Ctrl.Mtr.ConnCtrl[0].SlaveAddr = MASTE_ADDR_HOST+0x10;
     81              Ctrl.Mtr.ConnCtrl[0].SlaveAddr = SLAVE_ADDR_DIP1;
   \   00000018   0x22A1             MOVS     R2,#+161
   \   0000001A   0x710A             STRB     R2,[R1, #+4]
     82              Ctrl.Mtr.ConnCtrl[0].SendFlg   = 0;
   \   0000001C   0x2200             MOVS     R2,#+0
   \   0000001E   0x71CA             STRB     R2,[R1, #+7]
     83              Ctrl.Mtr.ConnCtrl[0].SendFramNum=1;
   \   00000020   0x2201             MOVS     R2,#+1
   \   00000022   0x718A             STRB     R2,[R1, #+6]
     84              Ctrl.Mtr.ConnCtrl[0].TimeOut   = 10;
   \   00000024   0x220A             MOVS     R2,#+10
   \   00000026   0x708A             STRB     R2,[R1, #+2]
     85              
     86          //测量装置2 初始化    
     87              Ctrl.Mtr.ConnCtrl[1].ConnFlg   = 1;
   \   00000028   0x2201             MOVS     R2,#+1
   \   0000002A   0x720A             STRB     R2,[R1, #+8]
     88              Ctrl.Mtr.ConnCtrl[1].ErrFlg    = 0;
   \   0000002C   0x2200             MOVS     R2,#+0
   \   0000002E   0x72CA             STRB     R2,[R1, #+11]
     89              Ctrl.Mtr.ConnCtrl[1].MasterAddr= MASTE_ADDR_HOST;
   \   00000030   0x2282             MOVS     R2,#+130
   \   00000032   0x734A             STRB     R2,[R1, #+13]
     90              Ctrl.Mtr.ConnCtrl[1].SlaveAddr = SLAVE_ADDR_DIP2;
   \   00000034   0x22A2             MOVS     R2,#+162
   \   00000036   0x730A             STRB     R2,[R1, #+12]
     91              Ctrl.Mtr.ConnCtrl[1].RecvEndFlg= 0;
   \   00000038   0x2200             MOVS     R2,#+0
   \   0000003A   0x724A             STRB     R2,[R1, #+9]
     92              Ctrl.Mtr.ConnCtrl[1].SendFlg   = 0;
   \   0000003C   0x73CA             STRB     R2,[R1, #+15]
     93              Ctrl.Mtr.ConnCtrl[1].SendFramNum=1;
   \   0000003E   0x2201             MOVS     R2,#+1
   \   00000040   0x738A             STRB     R2,[R1, #+14]
     94              Ctrl.Mtr.ConnCtrl[1].TimeOut   = 10;    
   \   00000042   0x220A             MOVS     R2,#+10
   \   00000044   0x728A             STRB     R2,[R1, #+10]
     95              
     96          //无线模块 数据 初始化    
     97              Ctrl.Dtu.ConnCtrl[0].ConnFlg   = 1;
   \   00000046   0xF200 0x402D      ADDW     R0,R0,#+1069
   \   0000004A   0x2101             MOVS     R1,#+1
   \   0000004C   0x7001             STRB     R1,[R0, #+0]
     98              Ctrl.Dtu.ConnCtrl[0].ErrFlg    = 0;
   \   0000004E   0x2100             MOVS     R1,#+0
   \   00000050   0x70C1             STRB     R1,[R0, #+3]
     99              Ctrl.Dtu.ConnCtrl[0].MasterAddr= MASTE_ADDR_HOST;
   \   00000052   0x2182             MOVS     R1,#+130
   \   00000054   0x7141             STRB     R1,[R0, #+5]
    100              Ctrl.Dtu.ConnCtrl[0].SlaveAddr = SLAVE_ADDR_DTU;
   \   00000056   0x21CA             MOVS     R1,#+202
   \   00000058   0x7101             STRB     R1,[R0, #+4]
    101              Ctrl.Dtu.ConnCtrl[0].RecvEndFlg= 0;
   \   0000005A   0x2100             MOVS     R1,#+0
   \   0000005C   0x7041             STRB     R1,[R0, #+1]
    102              Ctrl.Dtu.ConnCtrl[0].SendFlg   = 0;
   \   0000005E   0x71C1             STRB     R1,[R0, #+7]
    103              Ctrl.Dtu.ConnCtrl[0].SendFramNum=1;
   \   00000060   0x2101             MOVS     R1,#+1
   \   00000062   0x7181             STRB     R1,[R0, #+6]
    104              Ctrl.Dtu.ConnCtrl[0].TimeOut   = 10;    
   \   00000064   0x4611             MOV      R1,R2
   \   00000066   0x7081             STRB     R1,[R0, #+2]
    105              
    106          //无线模块 参数 初始化    
    107              Ctrl.Dtu.ConnCtrl[1].ConnFlg   = 1;
   \   00000068   0x2101             MOVS     R1,#+1
   \   0000006A   0x7201             STRB     R1,[R0, #+8]
    108              Ctrl.Dtu.ConnCtrl[1].ErrFlg    = 0;
   \   0000006C   0x2100             MOVS     R1,#+0
   \   0000006E   0x72C1             STRB     R1,[R0, #+11]
    109              Ctrl.Dtu.ConnCtrl[1].MasterAddr= MASTE_ADDR_HOST;
   \   00000070   0x2182             MOVS     R1,#+130
   \   00000072   0x7341             STRB     R1,[R0, #+13]
    110              Ctrl.Dtu.ConnCtrl[1].SlaveAddr = SLAVE_ADDR_SET;
   \   00000074   0x21C2             MOVS     R1,#+194
   \   00000076   0x7301             STRB     R1,[R0, #+12]
    111              Ctrl.Dtu.ConnCtrl[1].RecvEndFlg= 0;
   \   00000078   0x2100             MOVS     R1,#+0
   \   0000007A   0x7241             STRB     R1,[R0, #+9]
    112              Ctrl.Dtu.ConnCtrl[1].SendFlg   = 0;
   \   0000007C   0x73C1             STRB     R1,[R0, #+15]
    113              Ctrl.Dtu.ConnCtrl[1].SendFramNum=1;
   \   0000007E   0x2101             MOVS     R1,#+1
   \   00000080   0x7381             STRB     R1,[R0, #+14]
    114              Ctrl.Dtu.ConnCtrl[1].TimeOut   = 10;   
   \   00000082   0x4611             MOV      R1,R2
   \   00000084   0x7281             STRB     R1,[R0, #+10]
    115          }
   \   00000086   0x4770             BX       LR               ;; return
    116          
    117          
    118          /*******************************************************************************
    119           * 名    称： App_Main
    120           * 功    能： 系统初开始前调用此函数
    121           * 入口参数： 无
    122           * 出口参数： 无
    123           * 作　 　者： 无名沈
    124           * 创建日期： 2014-08-08
    125           * 修    改：
    126           * 修改日期：
    127           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    128           void App_Main(void)
    129           {
   \                     App_Main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    130              /***********************************************
    131              * 描述： Disable all interrupts.
    132              */
    133              BSP_IntDisAll();
   \   00000002   0x.... 0x....      BL       BSP_IntDisAll
    134              /***********************************************
    135              * 描述： 重新设置应用程序中断向量表，如果没有BOOTLOADER
    136              *        NVIC_VectTab_FLASH_OFFSET = 0
    137              */
    138          //#if defined     (IMAGE_A)
    139          //    /***********************************************
    140          //    * 描述： 程序A
    141          //    */
    142          //    NVIC_SetVectorTable(NVIC_VectTab_FLASH, FLASH_APP_ADDR_A-FLASH_BOOT_ADDR);
    143          //    IAP_SetStatus(IAP_STS_SUCCEED); 
    144          //#elif defined   (IMAGE_B)
    145          //    /***********************************************
    146          //    * 描述： 程序B
    147          //    */
    148          //    NVIC_SetVectorTable(NVIC_VectTab_FLASH, FLASH_APP_ADDR_B-FLASH_BOOT_ADDR);
    149          //    IAP_SetStatus(IAP_STS_SUCCEED); 
    150          //#else
    151          //    /***********************************************
    152          //    * 描述： 程序
    153          //    */
    154          //    NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0X0000);
    155          //#endif
    156          // 
    157              
    158              //iap  
    159              NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0X10000);
   \   00000006   0xF44F 0x3180      MOV      R1,#+65536
   \   0000000A   0xF04F 0x6000      MOV      R0,#+134217728
   \   0000000E   0x.... 0x....      BL       NVIC_SetVectorTable
    160          
    161              
    162              //CPU_IntEn();
    163              //BSP_IntEn();
    164              //init  ctrl
    165              app_init_sctrl();
   \   00000012   0xE8BD 0x4001      POP      {R0,LR}
   \   00000016   0x....             B.N      app_init_sctrl
    166           }
    167          
    168          /*******************************************************************************
    169           * 名    称： App_InitStartHook
    170           * 功    能： 系统初始化开始前调用此函数
    171           * 入口参数： 无
    172           * 出口参数： 无
    173           * 作　 　者： 无名沈
    174           * 创建日期： 2014-08-08
    175           * 修    改：
    176           * 修改日期：
    177           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    178           void App_InitStartHook(void)
    179           {
    180           
    181           }
   \                     App_InitStartHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    182           
    183          /*******************************************************************************
    184           * 名    称： App_InitEndHook
    185           * 功    能： 系统初始化结速后调用此函数
    186           * 入口参数： 无
    187           * 出口参数： 无
    188           * 作　 　者： 无名沈
    189           * 创建日期： 2014-08-08
    190           * 修    改：
    191           * 修改日期：
    192           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    193           void App_InitEndHook(void)
    194           {
    195           
    196           }
   \                     App_InitEndHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    197           
    198           /*******************************************************************************
    199           * 名    称： OS_TaskCreateHook
    200           * 功    能： OS创建任务回调函数
    201           * 入口参数： 无
    202           * 出口参数： 无
    203           * 作  　者： 无名沈
    204           * 创建日期： 2014-08-08
    205           * 修    改：
    206           * 修改日期：
    207           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    208           void OS_TaskCreateHook(void)
    209           {     
    210          //    App_TaskMaterCreate();
    211          //    App_TaskDtuCreate();
    212              //App_TaskKeyCreate();
    213              //App_TaskBeepCreate();
    214           }
   \                     OS_TaskCreateHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    215           
    216           /*******************************************************************************
    217           * 名    称： OSAL_TaskCreateHook
    218           * 功    能： OSAL创建任务回调函数
    219           * 入口参数： 无
    220           * 出口参数： 无
    221           * 作　 　者： 无名沈
    222           * 创建日期： 2014-08-08
    223           * 修    改：
    224           * 修改日期：
    225           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    226           void OSAL_TaskCreateHook(void)
    227           {
   \                     OSAL_TaskCreateHook: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    228          
    229              osal_add_Task(TaskInitDisp,                     // 任务初始化函数指针
    230                            TaskDispEvtProcess,               // 任务事件处理函数指针
    231                            OS_TASK_PRO_DISP,                 // 任务优先级
    232                            OS_TASK_ID_DISP);                 // 任务ID 
   \   00000002   0x2302             MOVS     R3,#+2
   \   00000004   0x2207             MOVS     R2,#+7
   \   00000006   0x....             LDR.N    R1,??DataTable1_1
   \   00000008   0x....             LDR.N    R0,??DataTable1_2
   \   0000000A   0x.... 0x....      BL       osal_add_Task
    233              
    234              osal_add_Task(TaskInitLed,                      // 任务初始化函数指针
    235                            TaskLedEvtProcess,                // 任务事件处理函数指针
    236                            OS_TASK_PRO_LED,                  // 任务优先级
    237                            OS_TASK_ID_LED);                  // 任务ID    
   \   0000000E   0x2303             MOVS     R3,#+3
   \   00000010   0x2206             MOVS     R2,#+6
   \   00000012   0x....             LDR.N    R1,??DataTable1_3
   \   00000014   0x....             LDR.N    R0,??DataTable1_4
   \   00000016   0x.... 0x....      BL       osal_add_Task
    238              
    239              osal_add_Task(TaskInitStore,                    // 任务初始化函数指针
    240                            TaskStoreEvtProcess,              // 任务事件处理函数指针
    241                            OS_TASK_PRO_STORE,                // 任务优先级
    242                            OS_TASK_ID_STORE);                // 任务ID
   \   0000001A   0x2304             MOVS     R3,#+4
   \   0000001C   0x2205             MOVS     R2,#+5
   \   0000001E   0x....             LDR.N    R1,??DataTable1_5
   \   00000020   0x....             LDR.N    R0,??DataTable1_6
   \   00000022   0x.... 0x....      BL       osal_add_Task
    243              
    244              osal_add_Task(TaskInitTmr,                      // 任务初始化函数指针
    245                            TaskTmrEvtProcess,                // 任务事件处理函数指针
    246                            OS_TASK_PRO_TMR,                  // 任务优先级
    247                            OS_TASK_ID_TMR);                  // 任务ID
   \   00000026   0x2301             MOVS     R3,#+1
   \   00000028   0x2208             MOVS     R2,#+8
   \   0000002A   0x....             LDR.N    R1,??DataTable1_7
   \   0000002C   0x....             LDR.N    R0,??DataTable1_8
   \   0000002E   0x.... 0x....      BL       osal_add_Task
    248              
    249              osal_add_Task(TaskInitMtrSend,                  // 任务初始化函数指针
    250                            TaskMtrSendEvtProcess,            // 任务事件处理函数指针
    251                            OS_TASK_PRO_MTRSEND,                  // 任务优先级
    252                            OS_TASK_ID_MTRSNED);                  // 任务ID    
   \   00000032   0x2305             MOVS     R3,#+5
   \   00000034   0x2204             MOVS     R2,#+4
   \   00000036   0x....             LDR.N    R1,??DataTable1_9
   \   00000038   0x....             LDR.N    R0,??DataTable1_10
   \   0000003A   0xE8BD 0x5000      POP      {R12,LR}
   \   0000003E   0x.... 0x....      B.W      osal_add_Task
    253              
    254           }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     Ctrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     TaskDispEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     TaskInitDisp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     TaskLedEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     TaskInitLed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     TaskStoreEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     TaskInitStore

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     TaskTmrEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     TaskInitTmr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     TaskMtrSendEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     TaskInitMtrSend
    255          /*******************************************************************************
    256           *              end of file                                                    *
    257           *******************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   App_InitEndHook
       0   App_InitStartHook
       8   App_Main
         8   -> BSP_IntDisAll
         8   -> NVIC_SetVectorTable
         0   -> app_init_sctrl
       8   OSAL_TaskCreateHook
         0   -> osal_add_Task
         8   -> osal_add_Task
       0   OS_TaskCreateHook
       0   app_init_sctrl


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       2  App_InitEndHook
       2  App_InitStartHook
      24  App_Main
      66  OSAL_TaskCreateHook
       2  OS_TaskCreateHook
     136  app_init_sctrl

 
 276 bytes in section .text
 
 276 bytes of CODE memory

Errors: none
Warnings: none
