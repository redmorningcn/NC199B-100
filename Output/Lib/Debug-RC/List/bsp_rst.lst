###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       13/Dec/2017  10:41:19
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC199B-100\Library\Source\BSP\Driver\bsp_rst.c
#    Command line =  
#        F:\iar\NC199B-100\Library\Source\BSP\Driver\bsp_rst.c -D
#        USE_STDPERIPH_DRIVER -D _STM32F10X_HD -D STM32F10X_CL -D DEBUG -D
#        STM32F103RC -D STM32_FLASH_SIZE=256 -D HSE_VALUE=25000000 -lCN
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\
#        -o
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC199B-100\Library\Project\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\AES\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Config\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Port\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\OS\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Config\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Protocol\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Iap\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Driver\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\uCOS-III\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\CoreSupport\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\STM32F10x_StdPeriph_Driver\inc\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\ARM-Cortex-M3\IAR\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-LIB\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\OSAL\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\OSAL\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Source\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\option\ -Om
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\bsp_rst.lst
#    Object file  =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\bsp_rst.o
#
###############################################################################

F:\iar\NC199B-100\Library\Source\BSP\Driver\bsp_rst.c
      1          /*******************************************************************************
      2           *   Filename:      bsp_rst.c
      3           *   Revised:       $Date: 2013-06-30
      4           *   Revision:      $V1.0
      5           *   Writer:        wumingshen.
      6           *
      7           *   Description:
      8           *
      9           *   Notes:         系统重启驱动模块
     10           *
     11           *
     12           *   All copyrights reserved to wumingshen.
     13           *
     14           *******************************************************************************/
     15          
     16          /*******************************************************************************
     17           * INCLUDES
     18           */
     19          #include <includes.h>

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_SystemReset(void)
   \                     NVIC_SystemReset: (+1)
   \   00000000   0xF3BF 0x8F4F      DSB      
   \   00000004   0x....             LDR.N    R0,??DataTable0  ;; 0xe000ed0c
   \   00000006   0x6801             LDR      R1,[R0, #+0]
   \   00000008   0xF401 0x61E0      AND      R1,R1,#0x700
   \   0000000C   0x....             LDR.N    R2,??DataTable0_1  ;; 0x5fa0004
   \   0000000E   0x4311             ORRS     R1,R2,R1
   \   00000010   0x6001             STR      R1,[R0, #+0]
   \   00000012   0xF3BF 0x8F4F      DSB      
   \                     ??NVIC_SystemReset_0: (+1)
   \   00000016   0xBF00             Nop      
   \   00000018   0xE7FD             B.N      ??NVIC_SystemReset_0
     20          
     21          #define BSP_RST_MODULE_EN 1
     22          #if BSP_RST_MODULE_EN > 0
     23          
     24          /*******************************************************************************
     25           * 描述： 该模块是否搭载uCOS系统使用
     26           */
     27          #define  UCOS_EN        DEF_ENABLED
     28          
     29          //============================================================================//
     30          
     31          /*******************************************************************************
     32          * 名    称： BSP_SystemSoftReset
     33          * 功    能： 系统软件重启
     34          * 入口参数： 无
     35          * 出口参数： 无
     36          * 作　 　者： 无名沈
     37          * 创建日期： 2014-08-18
     38          * 修    改：
     39          * 修改日期：
     40          * 备    注： 在Cortex-M3权威指南中指出：从SYSRESETREQ 被置为有效，到复位发生器执行复位命令，
     41          *       往往会有一个延时。在此延时期间，处理器仍然可以响应中断请求。但我们的本意往往是要
     42          *       让此次执行到此为止，不要再做任何其它事情了。所以，最好在发出复位请求前，先把
     43          *       FAULTMASK 置位 。
     44          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     45          void  BSP_RST_SystemRst(void)
     46          {
   \                     BSP_RST_SystemRst: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     47          #if (UCOS_EN == ENABLE)
     48              #if OS_CRITICAL_METHOD == 3u               /* Allocate storage for CPU status register */
     49                  OS_CPU_SR  cpu_sr = 0u;
     50                  cpu_sr  = cpu_sr;
     51                  cpu_sr  = 0u;
     52              #endif
     53              CPU_CRITICAL_ENTER();                      //关闭所有中断(cpu.h文件提供该函数)
     54          #else
     55              __set_FAULTMASK(1);                        //关闭所有中断(core_cm3.h文件提供该函数)
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0xF380 0x8813      MSR      FAULTMASK,R0
     56          #endif
     57          
     58              NVIC_SystemReset();                        // 重启（core_cm3.h文件提供该函数）
   \   00000008   0x.... 0x....      BL       NVIC_SystemReset
     59          
     60              /***************************************************
     61              * 描述： 防止系统软件重启出错，打开看门狗，死等待系统复位
     62              */
     63              BSP_WDT_Init(BSP_WDT_MODE_ALL);
   \   0000000C   0x2003             MOVS     R0,#+3
   \   0000000E   0x.... 0x....      BL       BSP_WDT_Init
     64              while(1);
   \                     ??BSP_RST_SystemRst_0: (+1)
   \   00000012   0xE7FE             B.N      ??BSP_RST_SystemRst_0
     65          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0xE000ED0C         DC32     0xe000ed0c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x05FA0004         DC32     0x5fa0004
     66          
     67          /*******************************************************************************
     68           *              end of file                                                    *
     69           *******************************************************************************/
     70          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   BSP_RST_SystemRst
         8   -> BSP_WDT_Init
         8   -> NVIC_SystemReset
       0   NVIC_SystemReset


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
      20  BSP_RST_SystemRst
      26  NVIC_SystemReset

 
 54 bytes in section .text
 
 54 bytes of CODE memory

Errors: none
Warnings: none
