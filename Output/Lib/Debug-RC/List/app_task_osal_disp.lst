###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       23/Nov/2017  13:36:19
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC199B-100\Library\Source\APP\Tasks\app_task_osal_disp.c
#    Command line =  
#        F:\iar\NC199B-100\Library\Source\APP\Tasks\app_task_osal_disp.c -D
#        USE_STDPERIPH_DRIVER -D _STM32F10X_HD -D STM32F10X_CL -D DEBUG -D
#        STM32F103RC -D STM32_FLASH_SIZE=256 -D HSE_VALUE=25000000 -lCN
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\
#        -o
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC199B-100\Library\Project\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\AES\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Config\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Port\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\OS\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Config\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Protocol\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Iap\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Driver\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\uCOS-III\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\CoreSupport\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\STM32F10x_StdPeriph_Driver\inc\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\ARM-Cortex-M3\IAR\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-LIB\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\OSAL\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\OSAL\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Source\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\option\ -Om
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\app_task_osal_disp.lst
#    Object file  =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\app_task_osal_disp.o
#
###############################################################################

F:\iar\NC199B-100\Library\Source\APP\Tasks\app_task_osal_disp.c
      1          /*******************************************************************************
      2           *   Filename:       app_task_disp.c
      3           *   Revised:        All copyrights reserved to wumingshen.
      4           *   Revision:       v1.0
      5           *   Writer:	     wumingshen.
      6           *
      7           *   Description:    双击选中 disp 按 Ctrl + H, 钩选 Match the case, Replace with
      8           *                   输入您要的名字，点击 Replace All
      9           *                   双击选中 Disp 按 Ctrl + H, 钩选 Match the case, Replace with
     10           *                   输入您要的名字，点击 Replace All
     11           *                   双击选中 DISP 按 Ctrl + H, 钩选 Match the case, Replace with
     12           *                   输入您要的名字，点击 Replace All
     13           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_DISP_PRIO ）
     14           *                                            和 任务堆栈（ APP_TASK_DISP_STK_SIZE ）大小
     15           *                   在 app.h 中声明本任务的     创建函数（ void  App_TaskDispCreate(void) ）
     16           *                                            和 看门狗标志位 （ WDTFLAG_Disp ）
     17           *
     18           *   Notes:
     19           *     				E-mail: shenchangwei945@163.com
     20           *
     21           *******************************************************************************/
     22          
     23          /*******************************************************************************
     24           * INCLUDES
     25           */
     26          #define  SNL_APP_SOURCE
     27          #include <includes.h>
     28          #include <global.h>
     29          #include <app_ctrl.h>
     30          #include <bsp_max7219.h>
     31          #include <osal_timer.h>
     32          
     33          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     34          const  CPU_CHAR  *app_task_disp__c = "$Id: $";
     35          #endif
     36          
     37          #define APP_TASK_DISP_EN     DEF_ENABLED
     38          #if APP_TASK_DISP_EN == DEF_ENABLED
     39          /*******************************************************************************
     40           * CONSTANTS
     41           */
     42          //#define CYCLE_TIME_TICKS     (OS_CFG_TICK_RATE_HZ * 2u)
     43          
     44          /*******************************************************************************
     45           * MACROS
     46           */
     47          
     48          /*******************************************************************************
     49           * TYPEDEFS
     50           */
     51          
     52          /*******************************************************************************
     53           * LOCAL VARIABLES
     54           */
     55          
     56          #if ( OSAL_EN == DEF_ENABLED )
     57          #else
     58          /***********************************************
     59          * 描述： 任务控制块（TCB）
     60          */
     61          static  OS_TCB   AppTaskDispTCB;
     62          
     63          /***********************************************
     64          * 描述： 任务堆栈（STACKS）
     65          */
     66          //static  CPU_STK  AppTaskDispStk[ APP_TASK_DISP_STK_SIZE ];
     67          
     68          #endif
     69          /*******************************************************************************
     70           * GLOBAL VARIABLES
     71           */
     72          /*******************************************************************************
     73           * LOCAL FUNCTIONS
     74           */
     75          void    comm_mtr_err_judye(void);
     76          
     77               
     78          #if ( OSAL_EN == DEF_ENABLED )
     79          #else
     80          static  void    AppTaskDisp           (void *p_arg);
     81          #endif
     82          
     83          /*******************************************************************************
     84           * GLOBAL FUNCTIONS
     85           */
     86          uint8 JudgeFlashIDErrFlg(void) ;  
     87          
     88          /*******************************************************************************
     89           * EXTERN VARIABLES
     90           */
     91          extern stcCtrlDCB           Ctrl;
     92          
     93          
     94          /*******************************************************************************/
     95          static  uint8   dis_mode    = 0;
     96          

   \                                 In section .text, align 2, keep-with-next
     97          void    SetDispNow(void)
     98          {
   \                     SetDispNow: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     99              BSP_DispEvtProcess();
   \   00000002   0x.... 0x....      BL       BSP_DispEvtProcess
    100              dis_mode = 13*2;
   \   00000006   0x201A             MOVS     R0,#+26
   \   00000008   0x....             LDR.N    R1,??DataTable11_4
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
    101          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    102          
    103          
    104          /*******************************************************************************
    105           * 名    称： AppTaskDisp
    106           * 功    能： 控制任务
    107           * 入口参数： p_arg - 由任务创建函数传入
    108           * 出口参数： 无
    109           * 作　 　者： wumingshen.
    110           * 创建日期： 2015-02-05
    111           * 修    改：
    112           * 修改日期：
    113           *******************************************************************************/
    114          extern  MODBUS_CH   *g_pch; 
    115          
    116          //#if ( OSAL_EN == DEF_ENABLED )

   \                                 In section .text, align 4, keep-with-next
    117          osalEvt  TaskDispEvtProcess(osalTid task_id, osalEvt task_event)
    118          //#else
    119          //static  void  AppTaskDisp (void *p_arg)
    120          //#endif
    121          {
   \                     TaskDispEvtProcess: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x460C             MOV      R4,R1
    122          //    OS_ERR      err;
    123          //    INT32U      ticks;
    124          //    INT32S      dly;
    125          //    CPU_SR_ALLOC();
    126          //    
    127          //    /***********************************************
    128          //    * 描述：Task body, always written as an infinite loop.
    129          //    */
    130          //#if ( OSAL_EN == DEF_ENABLED )
    131          //#else
    132          //    TaskInitDisp();
    133          //    
    134          //    while (DEF_TRUE) {
    135          //#endif
    136          //        /***********************************************
    137          //        * 描述： 本任务看门狗标志置位
    138          //        */
    139          //        OS_FlagPost ((OS_FLAG_GRP *)&WdtFlagGRP,
    140          //                     (OS_FLAGS     ) WDT_FLAG_DISP,
    141          //                     (OS_OPT       ) OS_OPT_POST_FLAG_SET,
    142          //                     (CPU_TS       ) 0,
    143          //                     (OS_ERR      *) &err);
    144          //        /***********************************************
    145          //        * 描述： 得到系统当前时间
    146          //        */
    147          //        ticks = OSTimeGet(&err);
    148          //        
    149          //#if ( OSAL_EN == DEF_ENABLED )
    150          
    151                  if( task_event & OS_EVT_DISP_TICKS ) {
   \   00000004   0x07E0             LSLS     R0,R4,#+31
   \   00000006   0xF140 0x809F      BPL.W    ??TaskDispEvtProcess_2
    152          //#else
    153          //#endif
    154                      static  uint32   times   = 0;
    155                      static  uint8   disflg  = 0;
    156          
    157                      stcTime         sTime;
    158          
    159                      /***********************************************
    160                      * 描述： 根据显示模式显示
    161                      */
    162                      switch(dis_mode/2) {
   \   0000000A   0x....             LDR.N    R5,??DataTable11_4
   \   0000000C   0x7829             LDRB     R1,[R5, #+0]
   \   0000000E   0x4608             MOV      R0,R1
   \   00000010   0x0840             LSRS     R0,R0,#+1
   \   00000012   0x280D             CMP      R0,#+13
   \   00000014   0xD85A             BHI.N    ??TaskDispEvtProcess_3
   \   00000016   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??TaskDispEvtProcess_0:
   \   0000001A   0x07 0x0F          DC8      0x7,0xF,0x17,0x23
   \              0x17 0x23    
   \   0000001E   0x2A 0x33          DC8      0x2A,0x33,0x3C,0x45
   \              0x3C 0x45    
   \   00000022   0x4C 0x53          DC8      0x4C,0x53,0x59,0x59
   \              0x59 0x59    
   \   00000026   0x59 0x55          DC8      0x59,0x55
    163                      /*******************************************************************
    164                      * 描述： 显示装置时间
    165                      */
    166                      case 0:         //车型
    167                          dis_mode++;
   \                     ??TaskDispEvtProcess_4: (+1)
   \   00000028   0x1C48             ADDS     R0,R1,#+1
   \   0000002A   0x7028             STRB     R0,[R5, #+0]
    168                          uprintf("%d",Ctrl.Para.dat.sProductInfo.sLocoId.Type);  
   \   0000002C   0x....             LDR.N    R0,??DataTable11_5
   \   0000002E   0x8B41             LDRH     R1,[R0, #+26]
   \   00000030   0x....             ADR.N    R0,??DataTable11  ;; 0x25, 0x64, 0x00, 0x00
   \   00000032   0x.... 0x....      BL       uprintf
    169                              break;
   \   00000036   0xE07B             B.N      ??TaskDispEvtProcess_5
    170                      case 1:         //车号
    171                          dis_mode++;
   \                     ??TaskDispEvtProcess_6: (+1)
   \   00000038   0x1C48             ADDS     R0,R1,#+1
   \   0000003A   0x7028             STRB     R0,[R5, #+0]
    172                          uprintf("%d",Ctrl.Para.dat.sProductInfo.sLocoId.Num);  
   \   0000003C   0x....             LDR.N    R0,??DataTable11_5
   \   0000003E   0x8B81             LDRH     R1,[R0, #+28]
   \   00000040   0x....             ADR.N    R0,??DataTable11  ;; 0x25, 0x64, 0x00, 0x00
   \   00000042   0x.... 0x....      BL       uprintf
    173                              break;
   \   00000046   0xE073             B.N      ??TaskDispEvtProcess_5
    174          
    175                      /*******************************************************************
    176                      * 描述： 显示软件版本
    177                      *        时间：开机显示一次，显示2s；
    178                      */
    179                      case 2: 
    180                          dis_mode++;
   \                     ??TaskDispEvtProcess_7: (+1)
   \   00000048   0x1C48             ADDS     R0,R1,#+1
   \   0000004A   0x7028             STRB     R0,[R5, #+0]
    181                          Ctrl.Para.dat.SoftWareID = 0x0101;
   \   0000004C   0xF240 0x1001      MOVW     R0,#+257
   \   00000050   0x....             LDR.N    R1,??DataTable11_6
   \   00000052   0x8048             STRH     R0,[R1, #+2]
    182                          uprintf("SV.%02X",(uint8)(Ctrl.Para.dat.SoftWareID>>8));
   \   00000054   0x2101             MOVS     R1,#+1
   \   00000056   0x.... 0x....      ADR.W    R0,?_1
   \   0000005A   0x.... 0x....      BL       uprintf
    183                          
    184                          break;
   \   0000005E   0xE067             B.N      ??TaskDispEvtProcess_5
    185                      /*******************************************************************
    186                      * 描述： 显示硬件版本
    187                      *        第三版硬件    
    188                      */
    189                      case 3: 
    190                          dis_mode++;
   \                     ??TaskDispEvtProcess_8: (+1)
   \   00000060   0x1C48             ADDS     R0,R1,#+1
   \   00000062   0x7028             STRB     R0,[R5, #+0]
    191                          uprintf("HV1.0");
   \   00000064   0x.... 0x....      ADR.W    R0,?_2
   \   00000068   0x.... 0x....      BL       uprintf
    192                          
    193                          break;
   \   0000006C   0xE060             B.N      ??TaskDispEvtProcess_5
    194                      /*******************************************************************
    195                      * 描述： 粉尘修正值
    196                      */
    197                      case 4: 
    198                          dis_mode++;
   \                     ??TaskDispEvtProcess_9: (+1)
   \   0000006E   0x1C48             ADDS     R0,R1,#+1
   \   00000070   0x7028             STRB     R0,[R5, #+0]
    199                          uprintf("%d",Ctrl.Para.dat.sAirPara.Dust_modefy);  
   \   00000072   0x....             LDR.N    R0,??DataTable11_5
   \   00000074   0xF9B0 0x102E      LDRSH    R1,[R0, #+46]
   \   00000078   0x....             ADR.N    R0,??DataTable11  ;; 0x25, 0x64, 0x00, 0x00
   \   0000007A   0x.... 0x....      BL       uprintf
    200                          break;
   \   0000007E   0xE057             B.N      ??TaskDispEvtProcess_5
    201                      /*******************************************************************
    202                      * 描述： 湿度修正值
    203                      */
    204                      case 5:  
    205                          dis_mode++;
   \                     ??TaskDispEvtProcess_10: (+1)
   \   00000080   0x1C48             ADDS     R0,R1,#+1
   \   00000082   0x7028             STRB     R0,[R5, #+0]
    206                          uprintf("%d",Ctrl.Para.dat.sAirPara.Hum_modefy);  
   \   00000084   0x....             LDR.N    R0,??DataTable11_5
   \   00000086   0xF9B0 0x102C      LDRSH    R1,[R0, #+44]
   \   0000008A   0x....             ADR.N    R0,??DataTable11  ;; 0x25, 0x64, 0x00, 0x00
   \   0000008C   0x.... 0x....      BL       uprintf
    207                          break;  
   \   00000090   0xE04E             B.N      ??TaskDispEvtProcess_5
    208                      /*******************************************************************
    209                      * 描述： Voc修正值
    210                      */
    211                      case 6:  
    212                          dis_mode++;
   \                     ??TaskDispEvtProcess_11: (+1)
   \   00000092   0x1C48             ADDS     R0,R1,#+1
   \   00000094   0x7028             STRB     R0,[R5, #+0]
    213                          uprintf("%d",Ctrl.Para.dat.sAirPara.Voc_modefy);  
   \   00000096   0x....             LDR.N    R0,??DataTable11_5
   \   00000098   0xF9B0 0x1030      LDRSH    R1,[R0, #+48]
   \   0000009C   0x....             ADR.N    R0,??DataTable11  ;; 0x25, 0x64, 0x00, 0x00
   \   0000009E   0x.... 0x....      BL       uprintf
    214                          break; 
   \   000000A2   0xE045             B.N      ??TaskDispEvtProcess_5
    215                      /*******************************************************************
    216                      * 描述： 车型车号
    217                      */
    218                      case 7:  
    219                          dis_mode++;
   \                     ??TaskDispEvtProcess_12: (+1)
   \   000000A4   0x1C48             ADDS     R0,R1,#+1
   \   000000A6   0x7028             STRB     R0,[R5, #+0]
    220                          uprintf("      ");
   \   000000A8   0x.... 0x....      ADR.W    R0,?_3
   \   000000AC   0x.... 0x....      BL       uprintf
    221          
    222                          break; 
   \   000000B0   0xE03E             B.N      ??TaskDispEvtProcess_5
    223                      /*******************************************************************
    224                      * 描述： 全灭
    225                      */
    226                      case 8:  
    227                          dis_mode++;
   \                     ??TaskDispEvtProcess_13: (+1)
   \   000000B2   0x1C48             ADDS     R0,R1,#+1
   \   000000B4   0x7028             STRB     R0,[R5, #+0]
    228                          uprintf("88888888");
   \   000000B6   0x.... 0x....      ADR.W    R0,?_4
   \   000000BA   0x.... 0x....      BL       uprintf
    229                          
    230                          break;   
   \   000000BE   0xE037             B.N      ??TaskDispEvtProcess_5
    231                      /*******************************************************************
    232                      * 描述： 高度值
    233                      */
    234                      case 9:    
    235                          dis_mode++;
   \                     ??TaskDispEvtProcess_14: (+1)
   \   000000C0   0x1C48             ADDS     R0,R1,#+1
   \   000000C2   0x7028             STRB     R0,[R5, #+0]
    236                          
    237                      case 13:  
    238                          dis_mode++;
   \                     ??TaskDispEvtProcess_15: (+1)
   \   000000C4   0x7828             LDRB     R0,[R5, #+0]
   \   000000C6   0x1C40             ADDS     R0,R0,#+1
   \   000000C8   0x7028             STRB     R0,[R5, #+0]
    239                          //不赋值，只显示
    240                          //disflg = BSP_DispEvtProcess();  //执行显示操作，有内容显示，不赋值。否者油量赋值
    241          
    242                          break;   
   \   000000CA   0xE031             B.N      ??TaskDispEvtProcess_5
    243          //            case 14:  
    244          //               dis_mode++;
    245          //                //不赋值，只显示
    246          //                //disflg = BSP_DispEvtProcess();  //执行显示操作，有内容显示，不赋值。否者油量赋值
    247          //                break;   
    248          //            case 15:  
    249          //                dis_mode++;
    250          //                //disflg = BSP_DispEvtProcess();  //执行显示操作，有内容显示，不赋值。否者油量赋值
    251          //                //不赋值，只显示
    252          //                times = 0;
    253          //                break;   
    254                      /*******************************************************************
    255                      * 描述： 开机后，显示油量，通讯故障判断及故障代码
    256                      */
    257                      default:
    258                        
    259                          if(disflg != 0)                                 //如果有其他内容，先显示其他内容
   \                     ??TaskDispEvtProcess_3: (+1)
   \   000000CC   0x7868             LDRB     R0,[R5, #+1]
   \   000000CE   0x2800             CMP      R0,#+0
   \   000000D0   0xD12E             BNE.N    ??TaskDispEvtProcess_5
    260                              break;
    261                              
    262                          switch(times++%7)                               //循环显示油水
   \   000000D2   0x6868             LDR      R0,[R5, #+4]
   \   000000D4   0x1C41             ADDS     R1,R0,#+1
   \   000000D6   0x6069             STR      R1,[R5, #+4]
   \   000000D8   0x2107             MOVS     R1,#+7
   \   000000DA   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000000DE   0xEBC1 0x01C1      RSB      R1,R1,R1, LSL #+3
   \   000000E2   0x1A40             SUBS     R0,R0,R1
   \   000000E4   0x2805             CMP      R0,#+5
   \   000000E6   0xD823             BHI.N    ??TaskDispEvtProcess_5
   \   000000E8   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??TaskDispEvtProcess_1:
   \   000000EC   0x03 0x07          DC8      0x3,0x7,0xE,0x12
   \              0x0E 0x12    
   \   000000F0   0x18 0x1D          DC8      0x18,0x1D
    263                          {
    264                              case 0:uprintf("H2o");   
   \                     ??TaskDispEvtProcess_16: (+1)
   \   000000F2   0x....             ADR.N    R0,??DataTable11_1  ;; "H2o"
   \   000000F4   0x.... 0x....      BL       uprintf
    265                                      break;                              //显示湿度提示
   \   000000F8   0xE01A             B.N      ??TaskDispEvtProcess_5
    266                              case 1:uprintf("%4d",Ctrl.sRec.sAir.Humidity);   
   \                     ??TaskDispEvtProcess_17: (+1)
   \   000000FA   0x....             LDR.N    R0,??DataTable11_6
   \   000000FC   0xF8B0 0x110C      LDRH     R1,[R0, #+268]
   \   00000100   0x....             ADR.N    R0,??DataTable11_2  ;; "%4d"
   \   00000102   0x.... 0x....      BL       uprintf
    267                                      break;                              //显示湿度值
   \   00000106   0xE013             B.N      ??TaskDispEvtProcess_5
    268                              
    269                              case 2:uprintf("o1L");   
   \                     ??TaskDispEvtProcess_18: (+1)
   \   00000108   0x....             ADR.N    R0,??DataTable11_3  ;; "o1L"
   \   0000010A   0x.... 0x....      BL       uprintf
    270                                      break;                              //显示油含量
   \   0000010E   0xE00F             B.N      ??TaskDispEvtProcess_5
    271                              case 3:uprintf("%4d",Ctrl.sRec.sAir.VOCs);     
   \                     ??TaskDispEvtProcess_19: (+1)
   \   00000110   0x....             LDR.N    R0,??DataTable11_7
   \   00000112   0x8841             LDRH     R1,[R0, #+2]
   \   00000114   0x....             ADR.N    R0,??DataTable11_2  ;; "%4d"
   \   00000116   0x.... 0x....      BL       uprintf
    272                                      break;                              //显示湿度值
   \   0000011A   0xE009             B.N      ??TaskDispEvtProcess_5
    273          
    274                              case 4:uprintf("dust");                            
   \                     ??TaskDispEvtProcess_20: (+1)
   \   0000011C   0x.... 0x....      ADR.W    R0,?_8
   \   00000120   0x.... 0x....      BL       uprintf
    275                                      break;                              //显示粉尘提示
   \   00000124   0xE004             B.N      ??TaskDispEvtProcess_5
    276                              case 5: uprintf("%4d",Ctrl.sRec.sAir.Dusts_2D5);   
   \                     ??TaskDispEvtProcess_21: (+1)
   \   00000126   0x....             LDR.N    R0,??DataTable11_7
   \   00000128   0x8B81             LDRH     R1,[R0, #+28]
   \   0000012A   0x....             ADR.N    R0,??DataTable11_2  ;; "%4d"
   \   0000012C   0x.... 0x....      BL       uprintf
    277                                      break;                              //显示粉尘值  
    278                              
    279                              case 6:                                 
    280                                      break;                              //有故障显示故障代码
    281                          }
    282                          
    283                          break;
    284                      }
    285                      
    286                      disflg = BSP_DispEvtProcess();                      //执行显示操作，有内容显示，不赋值。否者油量赋值
   \                     ??TaskDispEvtProcess_5: (+1)
   \   00000130   0x.... 0x....      BL       BSP_DispEvtProcess
   \   00000134   0x7068             STRB     R0,[R5, #+1]
    287                      
    288                      osal_start_timerEx( OS_TASK_ID_DISP,
    289                                          OS_EVT_DISP_TICKS,
    290                                          500);
   \   00000136   0xF44F 0x72FA      MOV      R2,#+500
   \   0000013A   0x2101             MOVS     R1,#+1
   \   0000013C   0x4608             MOV      R0,R1
   \   0000013E   0x.... 0x....      BL       osal_start_timerEx
    291                      return ( task_event ^ OS_EVT_DISP_TICKS );
   \   00000142   0xF084 0x0001      EOR      R0,R4,#0x1
   \   00000146   0xBD32             POP      {R1,R4,R5,PC}
    292                  }
    293              return  task_event;
   \                     ??TaskDispEvtProcess_2: (+1)
   \   00000148   0x4620             MOV      R0,R4
   \   0000014A   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    294          }

   \                                 In section .bss, align 4
   \                     dis_mode:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   \   00000002                      DS8 2
   \   00000004                      DS8 4
    295          
    296          
    297          /*******************************************************************************
    298           * 名    称： APP_DispInit
    299           * 功    能： 任务初始化
    300           * 入口参数： 无
    301           * 出口参数： 无
    302           * 作　 　者： wumingshen.
    303           * 创建日期： 2015-12-08
    304           * 修    改：
    305           * 修改日期：
    306           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    307          void TaskInitDisp(void)
    308          {    
   \                     TaskInitDisp: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    309          //    /***********************************************
    310          //    * 描述： 初始化本任务用到的相关硬件
    311          //    */
    312              BSP_DispInit();
   \   00000002   0x.... 0x....      BL       BSP_DispInit
    313          
    314              BSP_DispOff();
   \   00000006   0x.... 0x....      BL       BSP_DispOff
    315              
    316              BSP_DispSetBrightness(10);
   \   0000000A   0x200A             MOVS     R0,#+10
   \   0000000C   0x.... 0x....      BL       BSP_DispSetBrightness
    317              BSP_DispClrAll();
   \   00000010   0x.... 0x....      BL       BSP_DispClrAll
    318              uprintf("88888888");
   \   00000014   0x.... 0x....      ADR.W    R0,?_4
   \   00000018   0x.... 0x....      BL       uprintf
    319              BSP_DispEvtProcess();
   \   0000001C   0x.... 0x....      BL       BSP_DispEvtProcess
    320              
    321          
    322              /***********************************************
    323              * 描述： 在看门狗标志组注册本任务的看门狗标志
    324              */
    325              WdtFlags |= WDT_FLAG_DISP;
   \   00000020   0x....             LDR.N    R0,??DataTable11_8
   \   00000022   0x6801             LDR      R1,[R0, #+0]
   \   00000024   0xF041 0x0140      ORR      R1,R1,#0x40
   \   00000028   0x6001             STR      R1,[R0, #+0]
    326              /*************************************************
    327              * 描述：启动事件查询
    328              */
    329              osal_start_timerEx( OS_TASK_ID_DISP,
    330                                  OS_EVT_DISP_TICKS,
    331                                  100);
   \   0000002A   0x2264             MOVS     R2,#+100
   \   0000002C   0x2101             MOVS     R1,#+1
   \   0000002E   0x4608             MOV      R0,R1
   \   00000030   0xE8BD 0x4008      POP      {R3,LR}
   \   00000034   0x.... 0x....      B.W      osal_start_timerEx
    332          }
    333          

   \                                 In section .text, align 2, keep-with-next
    334          void    comm_mtr_err_judye(void)
    335          {
    336              /*******************************************************************
    337              * 描述：油尺串口通讯故障判断
    338              */
    339          //    static  uint32  comm_mtr_err_times = 0;
    340          //    
    341          //    if(         Ctrl.Mtr.ConnCtrl[0].ErrFlg == 1 
    342          //       &&       Ctrl.Mtr.ConnCtrl[1].ErrFlg == 1){
    343          //
    344          //        comm_mtr_err_times++;                   //错误次数
    345          //        
    346          //        if(comm_mtr_err_times > 4 && Ctrl.sRunPara.SysSta == 0 ){
    347          //            Ctrl.sRunPara.SysSta   = 83;       //测量装置1、测量装置2均有故障
    348          //            
    349          //            Ctrl.sRec.ErrorCode    = Ctrl.sRunPara.SysSta;    //错误代码赋值
    350          //        }
    351          //    }else if(   Ctrl.Mtr.ConnCtrl[0].ErrFlg == 1){
    352          //        comm_mtr_err_times++;                   //错误次数
    353          //        
    354          //        if(comm_mtr_err_times > 8 && Ctrl.sRunPara.SysSta == 0 ){
    355          //            Ctrl.sRunPara.SysSta   = 71;       //测量装置1故障
    356          //            
    357          //            Ctrl.sRec.ErrorCode    = Ctrl.sRunPara.SysSta;    //错误代码赋值
    358          //        }
    359          //        
    360          //    }else if(   Ctrl.Mtr.ConnCtrl[1].ErrFlg == 1){
    361          //        comm_mtr_err_times++;                   //错误次数
    362          //        
    363          //        if(comm_mtr_err_times > 8 && Ctrl.sRunPara.SysSta == 0 )
    364          //            Ctrl.sRunPara.SysSta   = 81;       //测量装置2故障
    365          //        
    366          //            Ctrl.sRec.ErrorCode    = Ctrl.sRunPara.SysSta;    //错误代码赋值
    367          //    }else {
    368          //        comm_mtr_err_times = 0;                 //错误次数
    369          //
    370          //        if(     Ctrl.sRunPara.SysSta == 81
    371          //            ||  Ctrl.sRunPara.SysSta == 71
    372          //            ||  Ctrl.sRunPara.SysSta == 83){
    373          //            uprintf("E-%d",Ctrl.sRunPara.SysSta+100);  //显示故障代码+100
    374          //            
    375          //            Ctrl.sRec.ErrorCode    = Ctrl.sRunPara.SysSta+100;//错误代码赋值
    376          //            Ctrl.sRunPara.SysSta   = 0;        //清除故障代码
    377          //        }
    378          //    }
    379          }
   \                     comm_mtr_err_judye: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x25 0x64          DC8      0x25, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x48 0x32          DC8      "H2o"
   \              0x6F 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x25 0x34          DC8      "%4d"
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x6F 0x31          DC8      "o1L"
   \              0x4C 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \   00000000   0x........         DC32     dis_mode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \   00000000   0x........         DC32     Ctrl+0x2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \   00000000   0x........         DC32     Ctrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \   00000000   0x........         DC32     Ctrl+0x10C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_8:
   \   00000000   0x........         DC32     WdtFlags

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x25 0x64          DC8 "%d"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x48 0x32          DC8 "H2o"
   \              0x6F 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x25 0x34          DC8 "%4d"
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x53 0x56          DC8 "SV.%02X"
   \              0x2E 0x25    
   \              0x30 0x32    
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x48 0x56          DC8 "HV1.0"
   \              0x31 0x2E    
   \              0x30 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x20 0x20          DC8 "      "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x38 0x38          DC8 "88888888"
   \              0x38 0x38    
   \              0x38 0x38    
   \              0x38 0x38    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x64 0x75          DC8 "dust"
   \              0x73 0x74    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x6F 0x31          DC8 "o1L"
   \              0x4C 0x00    
    380          /*******************************************************************************
    381           * 				                    end of file                                *
    382           *******************************************************************************/
    383          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   SetDispNow
         8   -> BSP_DispEvtProcess
      16   TaskDispEvtProcess
        16   -> BSP_DispEvtProcess
        16   -> osal_start_timerEx
        16   -> uprintf
       8   TaskInitDisp
         8   -> BSP_DispClrAll
         8   -> BSP_DispEvtProcess
         8   -> BSP_DispInit
         8   -> BSP_DispOff
         8   -> BSP_DispSetBrightness
         0   -> osal_start_timerEx
         8   -> uprintf
       0   comm_mtr_err_judye


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable11_7
       4  ??DataTable11_8
       4  ?_0
       8  ?_1
       8  ?_2
       8  ?_3
      12  ?_4
       4  ?_5
       4  ?_6
       4  ?_7
       8  ?_8
      14  SetDispNow
     332  TaskDispEvtProcess
      56  TaskInitDisp
       2  comm_mtr_err_judye
       8  dis_mode
          disflg
          times

 
   8 bytes in section .bss
  16 bytes in section .rodata
 484 bytes in section .text
 
 484 bytes of CODE  memory
  16 bytes of CONST memory
   8 bytes of DATA  memory

Errors: none
Warnings: 1
