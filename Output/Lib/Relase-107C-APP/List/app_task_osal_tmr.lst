###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       26/Dec/2017  20:53:42
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC199B-100\Library\Source\APP\Tasks\app_task_osal_tmr.c
#    Command line =  
#        F:\iar\NC199B-100\Library\Source\APP\Tasks\app_task_osal_tmr.c -D
#        USE_STDPERIPH_DRIVER -D STM32F10X_CL -D RELEASE -D IMAGE_A -D
#        STM32F103RC -D STM32_FLASH_SIZE=256 -D HSE_VALUE=25000000 -lCN
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Relase-107C-APP\List\
#        -o
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Relase-107C-APP\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC199B-100\Library\Project\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\AES\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Config\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Port\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\OS\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Config\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Protocol\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Iap\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Driver\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\uCOS-III\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\CoreSupport\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\STM32F10x_StdPeriph_Driver\inc\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\ARM-Cortex-M3\IAR\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-LIB\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\OSAL\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\OSAL\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Source\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\option\ -Om
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Relase-107C-APP\List\app_task_osal_tmr.lst
#    Object file  =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Relase-107C-APP\Obj\app_task_osal_tmr.o
#
###############################################################################

F:\iar\NC199B-100\Library\Source\APP\Tasks\app_task_osal_tmr.c
      1          /*******************************************************************************
      2           *   Filename:       app_task_tmr.c
      3           *   Revised:        All copyrights reserved to wumingshen.
      4           *   Revision:       v1.0
      5           *   Writer:	     wumingshen.
      6           *
      7           *   Description:    双击选中 tmr 按 Ctrl + H, 钩选 Match the case, Replace with
      8           *                   输入您要的名字，点击 Replace All
      9           *                   双击选中 Tmr 按 Ctrl + H, 钩选 Match the case, Replace with
     10           *                   输入您要的名字，点击 Replace All
     11           *                   双击选中 TMR 按 Ctrl + H, 钩选 Match the case, Replace with
     12           *                   输入您要的名字，点击 Replace All
     13           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_TMR_PRIO ）
     14           *                                            和 任务堆栈（ APP_TASK_TMR_STK_SIZE ）大小
     15           *                   在 app.h 中声明本任务的     创建函数（ void  App_TaskTmrCreate(void) ）
     16           *                                            和 看门狗标志位 （ WDTFLAG_Tmr ）
     17           *
     18           *   Notes:
     19           *     				E-mail: shenchangwei945@163.com
     20           *
     21           *******************************************************************************/
     22          
     23          /*******************************************************************************
     24           * INCLUDES
     25           */
     26          #define  SNL_APP_SOURCE
     27          #include <includes.h>
     28          //#include "DS3231.h"
     29          #include "app.h"
     30          #include "bsp_timer.h"
     31          #include "os_cfg_app.h"
     32          #include <osal_timer.h>
     33          
     34          
     35          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     36          const  CPU_CHAR  *app_task_tmr__c = "$Id: $";
     37          #endif
     38          
     39          #define APP_TASK_TMR_EN     DEF_ENABLED
     40          #if APP_TASK_TMR_EN == DEF_ENABLED
     41          /*******************************************************************************
     42           * CONSTANTS
     43           */
     44          //#define CYCLE_TIME_TICKS            (OS_CFG_TICK_RATE_HZ * 1u)
     45          #define CYCLE_SAMPLE_MSEC_TICKS     (OS_CFG_TICK_RATE_HZ / 5)
     46          #define CYCLE_SAMPLE_SEC_TICKS      (OS_CFG_TICK_RATE_HZ * 5u)
     47          #define CYCLE_SAMPLE_MIN_TICKS      (OS_CFG_TICK_RATE_HZ * 60u)
     48          #define CYCLE_SAMPLE_TICKS          (OS_CFG_TICK_RATE_HZ * 2u)
     49               
     50          /*******************************************************************************
     51           * MACROS
     52           */
     53          
     54          /*******************************************************************************
     55           * TYPEDEFS
     56           */
     57          
     58          /*******************************************************************************
     59           * LOCAL VARIABLES
     60           */
     61          
     62          #if ( OSAL_EN == DEF_ENABLED )
     63          #else
     64          /***********************************************
     65          * 描述： 任务控制块（TCB）
     66          */
     67          static  OS_TCB   AppTaskTmrTCB;
     68          
     69          /***********************************************
     70          * 描述： 任务堆栈（STACKS）
     71          */
     72          static  CPU_STK  AppTaskTmrStk[ APP_TASK_TMR_STK_SIZE ];
     73          
     74          #endif
     75          /*******************************************************************************
     76           * GLOBAL VARIABLES
     77           */
     78          
     79          /*******************************************************************************
     80           * LOCAL FUNCTIONS
     81           */
     82          
     83          /*******************************************************************************
     84           * GLOBAL FUNCTIONS
     85           */
     86          
     87          /*******************************************************************************
     88           * EXTERN VARIABLES
     89           */
     90          
     91          /*******************************************************************************/
     92          
     93          /*******************************************************************************
     94           * 名    称： AppTaskTmr
     95           * 功    能： 控制任务
     96           * 入口参数： p_arg - 由任务创建函数传入
     97           * 出口参数： 无
     98           * 作　 　者： wumingshen.
     99           * 创建日期： 2015-02-05
    100           * 修    改：
    101           * 修改日期：
    102           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    103          osalEvt  TaskTmrEvtProcess(osalTid task_id, osalEvt task_event)
    104          {
   \                     TaskTmrEvtProcess: (+1)
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
   \   00000002   0x460C             MOV      R4,R1
    105              OS_ERR      err;
    106          //    static BOOL     chang_flag = FALSE;
    107              
    108              /***********************************************
    109              * 描述： 本任务看门狗标志置位
    110              */
    111                  OSSetWdtFlag( WDT_FLAG_TMR );
   \   00000004   0x2008             MOVS     R0,#+8
   \   00000006   0x.... 0x....      BL       OSSetWdtFlag
    112          
    113              
    114              
    115              /***************************************************************************
    116              * 描述： 统计模块和无线发送模块通讯定时器，
    117              COMM_EVT_FLAG_DTU_TIMEOUT 标示。
    118              */
    119              if( task_event & OS_EVT_TMR_DTU ) { 
   \   0000000A   0x07A0             LSLS     R0,R4,#+30
   \   0000000C   0xD510             BPL.N    ??TaskTmrEvtProcess_0
    120                  OS_FlagPost(( OS_FLAG_GRP *)&Ctrl.Os.CommEvtFlagGrp,
    121                              ( OS_FLAGS     ) COMM_EVT_FLAG_DTU_TIMEOUT,
    122                              ( OS_OPT       ) OS_OPT_POST_FLAG_SET,
    123                              ( CPU_TS       ) 0,
    124                              ( OS_ERR      *) &err);  
   \   0000000E   0xA801             ADD      R0,SP,#+4
   \   00000010   0x9000             STR      R0,[SP, #+0]
   \   00000012   0x2300             MOVS     R3,#+0
   \   00000014   0x461A             MOV      R2,R3
   \   00000016   0x2110             MOVS     R1,#+16
   \   00000018   0x....             LDR.N    R0,??DataTable0
   \   0000001A   0x.... 0x....      BL       OS_FlagPost
    125              
    126                   osal_start_timerEx(  OS_TASK_ID_TMR,     //计数器重新开始
    127                                        OS_EVT_TMR_DTU,
    128                                        OS_TICKS_PER_SEC*10); 
   \   0000001E   0xF242 0x7210      MOVW     R2,#+10000
   \   00000022   0x2102             MOVS     R1,#+2
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0x.... 0x....      BL       osal_start_timerEx
    129                  
    130                 return ( task_event ^ OS_EVT_TMR_DTU );
   \   0000002A   0xF084 0x0002      EOR      R0,R4,#0x2
   \   0000002E   0xBD16             POP      {R1,R2,R4,PC}
    131              }
    132              
    133              return  task_event;
   \                     ??TaskTmrEvtProcess_0: (+1)
   \   00000030   0x4620             MOV      R0,R4
   \   00000032   0xBD16             POP      {R1,R2,R4,PC}    ;; return
    134          }
    135          
    136          /*******************************************************************************
    137           * 名    称： APP_TmrInit
    138           * 功    能： 任务初始化
    139           * 入口参数： 无
    140           * 出口参数： 无
    141           * 作　　者： wumingshen.
    142           * 创建日期： 2015-03-28
    143           * 修    改：
    144           * 修改日期：
    145           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    146          void TaskInitTmr(void)
    147          {
   \                     TaskInitTmr: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    148              /***********************************************
    149              * 描述： 初始化
    150              */    
    151              /***********************************************
    152              * 描述： 在看门狗标志组注册本任务的看门狗标志
    153              */
    154              OSRegWdtFlag( WDT_FLAG_TMR );
   \   00000002   0x2008             MOVS     R0,#+8
   \   00000004   0x.... 0x....      BL       OSRegWdtFlag
    155          
    156              
    157              /*************************************************
    158              * 描述：启动事件查询
    159              */
    160              osal_start_timerEx( OS_TASK_ID_TMR, OS_EVT_TMR_DTU,OS_TICKS_PER_SEC*2 ); 
   \   00000008   0xF44F 0x62FA      MOV      R2,#+2000
   \   0000000C   0x2102             MOVS     R1,#+2
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0xE8BD 0x4008      POP      {R3,LR}
   \   00000014   0x.... 0x....      B.W      osal_start_timerEx
    161          
    162          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     Ctrl+0x462
    163          
    164          /*******************************************************************************
    165           * 				                    end of file                                *
    166           *******************************************************************************/
    167          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   TaskInitTmr
         8   -> OSRegWdtFlag
         0   -> osal_start_timerEx
      16   TaskTmrEvtProcess
        16   -> OSSetWdtFlag
        16   -> OS_FlagPost
        16   -> osal_start_timerEx


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
      24  TaskInitTmr
      52  TaskTmrEvtProcess

 
 80 bytes in section .text
 
 80 bytes of CODE memory

Errors: none
Warnings: none
