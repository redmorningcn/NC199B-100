###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       17/Nov/2017  09:39:12
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC199B-100\Library\Source\APP\Tasks\app_task_mater.c
#    Command line =  
#        F:\iar\NC199B-100\Library\Source\APP\Tasks\app_task_mater.c -D
#        USE_STDPERIPH_DRIVER -D _STM32F10X_HD -D STM32F10X_CL -D DEBUG -D
#        STM32F103RC -D STM32_FLASH_SIZE=256 -D HSE_VALUE=25000000 -lCN
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\
#        -o
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC199B-100\Library\Project\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\AES\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Config\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Port\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\OS\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Config\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Protocol\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Iap\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Driver\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\uCOS-III\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\CoreSupport\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\STM32F10x_StdPeriph_Driver\inc\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\ARM-Cortex-M3\IAR\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-LIB\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\OSAL\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\OSAL\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Source\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\option\ -Om
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\app_task_mater.lst
#    Object file  =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\app_task_mater.o
#
###############################################################################

F:\iar\NC199B-100\Library\Source\APP\Tasks\app_task_mater.c
      1          /*******************************************************************************
      2           *   Filename:       app_task_mater.c
      3           *   Revised:        All copyrights reserved to wumingshen.
      4           *   Revision:       v1.0
      5           *   Writer:	     wumingshen.
      6           *
      7           *   Description:    双击选中 mater 按 Ctrl + H, 钩选 Match the case, Replace with
      8           *                   输入您要的名字，点击 Replace All
      9           *                   双击选中 Mater 按 Ctrl + H, 钩选 Match the case, Replace with
     10           *                   输入您要的名字，点击 Replace All
     11           *                   双击选中 MATER 按 Ctrl + H, 钩选 Match the case, Replace with
     12           *                   输入您要的名字，点击 Replace All
     13           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_MATER_PRIO     ）
     14           *                                            和 任务堆栈（ APP_TASK_MATER_STK_SIZE ）大小
     15           *
     16           *   Notes:
     17           *     				 E-mail: shenchangwei945@163.com
     18           *
     19           *******************************************************************************/
     20          
     21          /*******************************************************************************
     22           * INCLUDES
     23           */
     24          #define  SNL_APP_SOURCE
     25          #include <includes.h>
     26          //#include <app_mater_protocol.h>
     27          #include <bsp_flash.h>
     28          #include <iap.h>
     29               
     30          #include "stm32f10x.h"
     31          #include <stdio.h>
     32          #include "SZ_STM32F107VC_LIB.h"
     33          #include "DS3231.h"
     34          #include "I2C_CLK.h"
     35          #include "Display.h"
     36          #include "DATA_STORAGE.h"
     37          #include "DELAY.h"
     38          #include "RS485.h"
     39          #include "POWER_MACRO.h"
     40          #include "MX25.h"
     41          #include "FM24CL64.h"
     42          #include "string.h"
     43          #include "xprintf.h"
     44          #include "WatchDog.h"
     45          #include <app_comm_protocol.h>
     46          #include <crccheck.h>
     47          
     48          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     49          const  CPU_CHAR  *app_task_mater__c = "$Id: $";
     50          #endif
     51          
     52          #define APP_TASK_MATER_EN     DEF_ENABLED
     53          #if APP_TASK_MATER_EN == DEF_ENABLED
     54          /*******************************************************************************
     55           * CONSTANTS
     56           */
     57          /***********************************************
     58          * 描述： 数据记录地址
     59          *
     60          地址	长度	类型	名称
     61          AC.PPpower_NUM
     62          0
     63          4
     64          8
     65          AC.NPpower_NUM
     66          12
     67          16
     68          20
     69          调试数据
     70          32	4		直流电压偏移
     71          36	4		直流电流偏移
     72          40	4		交流电压偏移
     73          44	4		交流电流偏移
     74          48	4	u32	交流电压增益
     75          52	4	u32	交流电流增益
     76          56	4	u32	脉冲速率
     77          //60	4	u32	数据地址
     78          64	4	u32	设备ID
     79          68	4	U8	车型车号
     80          72	4	u32	记录起始地址
     81          76	4	u32	记录结束地址
     82          80	4	u32	记录流水号
     83          84	4	u32	记录时间间隔
     84          88	4	f32	电压比例
     85          92	4	f32	电流比例
     86          96  4   u32 零压处理阀值
     87          AC.PQpower_NUM
     88          100
     89          104
     90          108
     91          AC.NQpower_NUM
     92          112	4		负有功电量数据
     93          116	4
     94          120	4
     95          
     96          //
     97          160 4   f32 电压调节系数
     98          164 4   f32 电流调节系数
     99          */
    100          /*******************************************************************************
    101           * MACROS
    102           */
    103          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 1)
    104          
    105          /*******************************************************************************
    106           * TYPEDEFS
    107           */
    108          
    109          /***********************************************
    110          * 描述： 任务控制块（TCB）
    111          */

   \                                 In section .bss, align 4
    112          static  OS_TCB      AppTaskMaterTCB;
   \                     AppTaskMaterTCB:
   \   00000000                      DS8 184
   \   000000B8                      DS8 1024

   \                                 In section .bss, align 4
    113          OS_Q                MTR_RxQ;
    114          
    115          /***********************************************
    116          * 描述： 任务堆栈（STACKS）
    117          */
    118          static  CPU_STK     AppTaskMaterStk[ APP_TASK_MATER_STK_SIZE ];
    119          
    120          /*******************************************************************************
    121           * LOCAL VARIABLES
    122           */
    123          ENERGY              AC;
   \                     AC:
   \   00000000                      DS8 108
   \                     MTR_RxQ:
   \   0000006C                      DS8 36

   \                                 In section .bss, align 4
    124          SDAT 	            recordsfr;	
   \                     recordsfr:
   \   00000000                      DS8 32
    125          StrMater            Mater;
    126          StrMater            History;
    127          
    128          static volatile uint32_t            SysTime = 0;
    129          
    130          uint8_t             g_DipDisVal[40];
    131          uint32_t            g_Flash_Adr;
   \                     g_Flash_Adr:
   \   00000020                      DS8 4

   \                                 In section .bss, align 4
   \                     Mater:
   \   00000000                      DS8 140

   \                                 In section .bss, align 4
   \                     History:
   \   00000000                      DS8 140

   \                                 In section .bss, align 4
   \                     g_DipDisVal:
   \   00000000                      DS8 40
    132          
    133          /*******************************************************************************
    134           * GLOBAL VARIABLES
    135           */
    136          
    137          /*******************************************************************************
    138           * LOCAL FUNCTIONS
    139           */
    140          static void     AppTaskMater                (void *p_arg);
    141          static void     APP_MaterInit               (void);
    142          
    143          void            DC_COUNTInit                (void);
    144          void            AC_COUNTInit                (void);
    145          INT08U          APP_SevrRxDataDealCB        (MODBUS_CH  *pch);
    146          void            APP_MaterSendMsgToServer    (void);
    147          void            EXTI0_ISRHandler            (void);
    148          void            EXTI9_5_ISRHandler          (void);
    149          
    150          CPU_BOOLEAN     APP_CSNC_CommHandler        (MODBUS_CH  *pch);
    151          CPU_BOOLEAN     APP_MaterCommHandler        (MODBUS_CH  *pch);
    152          
    153          void            SavePowerData               (void);
    154          
    155          /*******************************************************************************
    156           * GLOBAL FUNCTIONS
    157           */
    158          
    159          /*******************************************************************************
    160           * EXTERN VARIABLES
    161           */
    162          
    163          /*******************************************************************************
    164           * EXTERN FUNCTIONS
    165           */
    166          extern void     CS5463_AC_Adjust        (MODBUS_CH  *pch,uint8_t mode)	;
    167          extern void     uartprintf              (MODBUS_CH  *pch,const char *fmt, ...);
    168          /*******************************************************************************/
    169          
    170          /*******************************************************************************
    171           * 名    称： App_TaskMaterCreate
    172           * 功    能： 任务创建
    173           * 入口参数： 无
    174           * 出口参数： 无
    175           * 作　　者： wumingshen.
    176           * 创建日期： 2015-02-05
    177           * 修    改：
    178           * 修改日期：
    179           * 备    注： 任务创建函数需要在app.h文件中声明
    180           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    181          void  App_TaskMaterCreate(void)
    182          {
   \                     App_TaskMaterCreate: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    183              OS_ERR  err;
    184          
    185              /***********************************************
    186              * 描述： 任务创建
    187              */
    188              OSTaskCreate((OS_TCB     *)&AppTaskMaterTCB,                    // 任务控制块  （当前文件中定义）
    189                           (CPU_CHAR   *)"App Task Mater",                    // 任务名称
    190                           (OS_TASK_PTR ) AppTaskMater,                       // 任务函数指针（当前文件中定义）
    191                           (void       *) 0,                                  // 任务函数参数
    192                           (OS_PRIO     ) APP_TASK_MATER_PRIO,                // 任务优先级，不同任务优先级可以相同，0 < 优先级 < OS_CFG_PRIO_MAX - 2（app_cfg.h中定义）
    193                           (CPU_STK    *)&AppTaskMaterStk[0],                 // 任务栈顶
    194                           (CPU_STK_SIZE) APP_TASK_MATER_STK_SIZE / 10,       // 任务栈溢出报警值
    195                           (CPU_STK_SIZE) APP_TASK_MATER_STK_SIZE,            // 任务栈大小（CPU数据宽度 * 8 * size = 4 * 8 * size(字节)）（app_cfg.h中定义）
    196                           (OS_MSG_QTY  ) 0u,                                 // 可以发送给任务的最大消息队列数量
    197                           (OS_TICK     ) 0u,                                 // 相同优先级任务的轮循时间（ms），0为默认
    198                           (void       *) 0,                                  // 是一个指向它被用作一个TCB扩展用户提供的存储器位置
    199                           (OS_OPT      )(OS_OPT_TASK_STK_CHK |               // 允许堆栈检查该任务
    200                                          OS_OPT_TASK_STK_CLR),               // 创建任务时堆栈清零
    201                           (OS_ERR     *)&err);                               // 指向错误代码的指针，用于创建结果处理
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable54_1
   \   00000008   0xA909             ADD      R1,SP,#+36
   \   0000000A   0x9108             STR      R1,[SP, #+32]
   \   0000000C   0x2103             MOVS     R1,#+3
   \   0000000E   0x9107             STR      R1,[SP, #+28]
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x9106             STR      R1,[SP, #+24]
   \   00000014   0x9105             STR      R1,[SP, #+20]
   \   00000016   0x9104             STR      R1,[SP, #+16]
   \   00000018   0xF44F 0x7180      MOV      R1,#+256
   \   0000001C   0x9103             STR      R1,[SP, #+12]
   \   0000001E   0x2119             MOVS     R1,#+25
   \   00000020   0x9102             STR      R1,[SP, #+8]
   \   00000022   0xF100 0x01B8      ADD      R1,R0,#+184
   \   00000026   0x9101             STR      R1,[SP, #+4]
   \   00000028   0x2115             MOVS     R1,#+21
   \   0000002A   0x9100             STR      R1,[SP, #+0]
   \   0000002C   0x2300             MOVS     R3,#+0
   \   0000002E   0x.... 0x....      ADR.W    R2,AppTaskMater
   \   00000032   0x.... 0x....      ADR.W    R1,?_0
   \   00000036   0x.... 0x....      BL       OSTaskCreate
    202          }
   \   0000003A   0xB00B             ADD      SP,SP,#+44
   \   0000003C   0xBD00             POP      {PC}             ;; return
    203          
    204          /*******************************************************************************
    205           * 名    称： AppTaskMater
    206           * 功    能： 控制任务
    207           * 入口参数： p_arg - 由任务创建函数传入
    208           * 出口参数： 无
    209           * 作    者： wumingshen.
    210           * 创建日期： 2015-02-05
    211           * 修    改：
    212           * 修改日期：
    213           *******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    214          static  void  AppTaskMater (void *p_arg)
    215          {
   \                     AppTaskMater: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB09F             SUB      SP,SP,#+124
   \   00000006   0xF44F 0x747A      MOV      R4,#+1000
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable54_2
   \   0000000E   0x900B             STR      R0,[SP, #+44]
   \   00000010   0xAB09             ADD      R3,SP,#+36
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0x.... 0x....      ADR.W    R1,?_1
    216              OS_ERR      err;
    217          
    218              OS_TICK     dly     = CYCLE_TIME_TICKS;
    219              OS_TICK     ticks;
    220                  
    221              /***********************************************
    222              * 描述： 创建事件标志组
    223              */
    224              OSFlagCreate(( OS_FLAG_GRP  *)&Ctrl.Os.MaterEvtFlagGrp,
    225                           ( CPU_CHAR     *)"App_CommFlag",
    226                           ( OS_FLAGS      )0,
    227                           ( OS_ERR       *)&err);
   \   00000018   0x.... 0x....      BL       OSFlagCreate
    228              
    229              Ctrl.Os.MaterEvtFlag= COMM_EVT_FLAG_HEART       // 心跳包发送
    230                                  + COMM_EVT_FLAG_RESET       // COMM复位
    231                                  + COMM_EVT_FLAG_CONNECT     // COMM连接
    232                                  + COMM_EVT_FLAG_RECV        // 串口接收
    233                                  + COMM_EVT_FLAG_REPORT      // 串口发送
    234                                  + COMM_EVT_FLAG_CLOSE       // 断开
    235                                  + COMM_EVT_FLAG_TIMEOUT     // 超时
    236                                  + COMM_EVT_FLAG_CONFIG;     // 配置
   \   0000001C   0x20FF             MOVS     R0,#+255
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable54_3
   \   00000022   0xF8C1 0x05D6      STR      R0,[R1, #+1494]
    237              
    238              OSQCreate ( (OS_Q        *)&MTR_RxQ,
    239                          (CPU_CHAR    *)"RxQ",
    240                          (OS_MSG_QTY   ) OS_CFG_INT_Q_SIZE,
    241                          (OS_ERR      *)&err);
   \   00000026   0x.... 0x....      LDR.W    R6,??DataTable54_4
   \   0000002A   0xAB09             ADD      R3,SP,#+36
   \   0000002C   0x2264             MOVS     R2,#+100
   \   0000002E   0xA1CD             ADR.N    R1,??AppTaskMater_0  ;; "RxQ"
   \   00000030   0xF106 0x006C      ADD      R0,R6,#+108
   \   00000034   0x.... 0x....      BL       OSQCreate
    242              /***********************************************
    243              * 描述： 任务初始化    
    244              */ 
    245            	float   Vac_RMS_F           = 0;
    246            	float   Iac_RMS_F           = 0;
    247                  
    248           	uint32_t PP_Power_temp1     = 0;
    249          	uint32_t PP_Power_temp2     = 0;
    250          	uint32_t PP_Power_temp3     = 0;
    251              
    252          	uint32_t NP_Power_temp1     = 0;
    253          	uint32_t NP_Power_temp2     = 0;
    254          	uint32_t NP_Power_temp3     = 0;
    255              
    256          	uint8_t  PP_fram_temp[16]   = {0};
   \   00000038   0xA81A             ADD      R0,SP,#+104
   \   0000003A   0x2110             MOVS     R1,#+16
   \   0000003C   0x.... 0x....      BL       __aeabi_memclr4
    257          	uint8_t  NP_fram_temp[16]   = {0};
   \   00000040   0xA816             ADD      R0,SP,#+88
   \   00000042   0x2110             MOVS     R1,#+16
   \   00000044   0x.... 0x....      BL       __aeabi_memclr4
    258              
    259          	int32_t  PQ_Power_temp1     = 0;
    260          	uint32_t PQ_Power_temp2     = 0;
    261          	uint32_t PQ_Power_temp3     = 0;
    262              
    263          	uint32_t NQ_Power_temp1     = 0;
    264          	uint32_t NQ_Power_temp2     = 0;
    265          	uint32_t NQ_Power_temp3     = 0;
    266              
    267          	uint8_t  PQ_fram_temp[16]   = {0};
   \   00000048   0xA812             ADD      R0,SP,#+72
   \   0000004A   0x2110             MOVS     R1,#+16
   \   0000004C   0x.... 0x....      BL       __aeabi_memclr4
    268          	uint8_t  NQ_fram_temp[16]   = {0};
   \   00000050   0xA80E             ADD      R0,SP,#+56
   \   00000052   0x2110             MOVS     R1,#+16
   \   00000054   0x.... 0x....      BL       __aeabi_memclr4
    269              
    270          	uint32_t i                  = 0;
    271                  
    272              /***********************************************
    273              * 描述： 电表初始化
    274              */   
    275              APP_MaterInit();
   \   00000058   0x.... 0x....      BL       APP_MaterInit
    276              
    277              /***********************************************
    278              * 描述： 读取机车型号，机车号
    279              */     
    280              ReadFM24CL64(68 , (uint8_t *)&Mater.LocoTyp, 2);
   \   0000005C   0x.... 0x....      LDR.W    R7,??DataTable54_5
   \   00000060   0x2202             MOVS     R2,#+2
   \   00000062   0x1CB9             ADDS     R1,R7,#+2
   \   00000064   0x2044             MOVS     R0,#+68
   \   00000066   0x.... 0x....      BL       ReadFM24CL64
    281              ReadFM24CL64(70 , (uint8_t *)&Mater.LocoNbr, 2);
   \   0000006A   0x2202             MOVS     R2,#+2
   \   0000006C   0x1D39             ADDS     R1,R7,#+4
   \   0000006E   0x2046             MOVS     R0,#+70
   \   00000070   0x.... 0x....      BL       ReadFM24CL64
    282              ReadFM24CL64(64 , (uint8_t *)&Ctrl.ID, 4);
   \   00000074   0x2204             MOVS     R2,#+4
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable54_6
   \   0000007A   0x2040             MOVS     R0,#+64
   \   0000007C   0x.... 0x....      BL       ReadFM24CL64
    283              /***********************************************
    284              * 描述： 记录时间间隔
    285              */  
    286              ReadFM24CL64(84 , (uint8_t *)&Mater.Record.RecordTime, 4);
   \   00000080   0xF107 0x0580      ADD      R5,R7,#+128
   \   00000084   0x2204             MOVS     R2,#+4
   \   00000086   0x4629             MOV      R1,R5
   \   00000088   0x2054             MOVS     R0,#+84
   \   0000008A   0x.... 0x....      BL       ReadFM24CL64
    287              if ( Mater.Record.RecordTime < OS_TICKS_PER_SEC * 10 )
   \   0000008E   0x6828             LDR      R0,[R5, #+0]
   \   00000090   0xF242 0x7110      MOVW     R1,#+10000
   \   00000094   0x4288             CMP      R0,R1
   \   00000096   0xD203             BCS.N    ??AppTaskMater_1
    288                  Mater.Record.RecordTime    = OS_TICKS_PER_SEC * 60;
   \   00000098   0xF64E 0x2060      MOVW     R0,#+60000
   \   0000009C   0x6028             STR      R0,[R5, #+0]
   \   0000009E   0xE006             B.N      ??AppTaskMater_2
    289              else if ( Mater.Record.RecordTime > OS_TICKS_PER_SEC * 300 )
   \                     ??AppTaskMater_1: (+1)
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable54_7  ;; 0x493e1
   \   000000A4   0x4288             CMP      R0,R1
   \   000000A6   0xD302             BCC.N    ??AppTaskMater_2
    290                  Mater.Record.RecordTime    = OS_TICKS_PER_SEC * 60;
   \   000000A8   0xF64E 0x2060      MOVW     R0,#+60000
   \   000000AC   0x6028             STR      R0,[R5, #+0]
    291                  
    292              ReadFM24CL64(88 , (uint8_t *)&AC.U_SCL, 4);
   \                     ??AppTaskMater_2: (+1)
   \   000000AE   0x2204             MOVS     R2,#+4
   \   000000B0   0xF106 0x0108      ADD      R1,R6,#+8
   \   000000B4   0x2058             MOVS     R0,#+88
   \   000000B6   0x.... 0x....      BL       ReadFM24CL64
    293              if ( AC.U_SCL < 1 )
   \   000000BA   0x68B0             LDR      R0,[R6, #+8]
   \   000000BC   0x2800             CMP      R0,#+0
   \   000000BE   0xD102             BNE.N    ??AppTaskMater_3
    294                  AC.U_SCL = 1.0;
   \   000000C0   0x2001             MOVS     R0,#+1
   \   000000C2   0x60B0             STR      R0,[R6, #+8]
   \   000000C4   0xE006             B.N      ??AppTaskMater_4
    295              else if ( AC.U_SCL > 50000 )
   \                     ??AppTaskMater_3: (+1)
   \   000000C6   0xF24C 0x3151      MOVW     R1,#+50001
   \   000000CA   0x4288             CMP      R0,R1
   \   000000CC   0xD302             BCC.N    ??AppTaskMater_4
    296                  AC.U_SCL    = 50000.0;
   \   000000CE   0xF24C 0x3050      MOVW     R0,#+50000
   \   000000D2   0x60B0             STR      R0,[R6, #+8]
    297              
    298              ReadFM24CL64(92 , (uint8_t *)&AC.I_SCL, 4);
   \                     ??AppTaskMater_4: (+1)
   \   000000D4   0x2204             MOVS     R2,#+4
   \   000000D6   0xF106 0x010C      ADD      R1,R6,#+12
   \   000000DA   0x205C             MOVS     R0,#+92
   \   000000DC   0x.... 0x....      BL       ReadFM24CL64
    299              if ( AC.I_SCL < 1.0 )
   \   000000E0   0x68F0             LDR      R0,[R6, #+12]
   \   000000E2   0x2800             CMP      R0,#+0
   \   000000E4   0xD102             BNE.N    ??AppTaskMater_5
    300                  AC.I_SCL = 1.0;
   \   000000E6   0x2001             MOVS     R0,#+1
   \   000000E8   0x60F0             STR      R0,[R6, #+12]
   \   000000EA   0xE004             B.N      ??AppTaskMater_6
    301              else if ( AC.I_SCL > 1000.0 )
   \                     ??AppTaskMater_5: (+1)
   \   000000EC   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000000F0   0xD901             BLS.N    ??AppTaskMater_6
    302                  AC.I_SCL    = 1000.0;
   \   000000F2   0x4620             MOV      R0,R4
   \   000000F4   0x60F0             STR      R0,[R6, #+12]
    303              //*
    304              float fdat;
    305              ReadFM24CL64(96 , (uint8_t *)&fdat, 4);
   \                     ??AppTaskMater_6: (+1)
   \   000000F6   0x2204             MOVS     R2,#+4
   \   000000F8   0xA90A             ADD      R1,SP,#+40
   \   000000FA   0x2060             MOVS     R0,#+96
   \   000000FC   0x.... 0x....      BL       ReadFM24CL64
    306              if ( fdat == 0.0 )
   \   00000100   0x980A             LDR      R0,[SP, #+40]
   \   00000102   0x2100             MOVS     R1,#+0
   \   00000104   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000108   0xD103             BNE.N    ??AppTaskMater_7
    307                  fdat    = 5000.0;    
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable54_8  ;; 0x459c4000
   \   0000010E   0x900A             STR      R0,[SP, #+40]
   \   00000110   0xE007             B.N      ??AppTaskMater_8
    308              else if ( fdat > 20000.0 )
   \                     ??AppTaskMater_7: (+1)
   \   00000112   0x.... 0x....      LDR.W    R1,??DataTable54_9  ;; 0x469c4001
   \   00000116   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000011A   0xD802             BHI.N    ??AppTaskMater_8
    309                  fdat    = 20000.0;
   \   0000011C   0x.... 0x....      LDR.W    R0,??DataTable54_10  ;; 0x469c4000
   \   00000120   0x900A             STR      R0,[SP, #+40]
    310              AC.U_O      = fdat;
   \                     ??AppTaskMater_8: (+1)
   \   00000122   0x980A             LDR      R0,[SP, #+40]
   \   00000124   0x6630             STR      R0,[R6, #+96]
    311              
    312              ReadFM24CL64(160 , (uint8_t *)&fdat, 4);
   \   00000126   0x2204             MOVS     R2,#+4
   \   00000128   0xA90A             ADD      R1,SP,#+40
   \   0000012A   0x20A0             MOVS     R0,#+160
   \   0000012C   0x.... 0x....      BL       ReadFM24CL64
    313              if ( fdat == 0.0 )
   \   00000130   0x980A             LDR      R0,[SP, #+40]
   \   00000132   0x2100             MOVS     R1,#+0
   \   00000134   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000138   0xD103             BNE.N    ??AppTaskMater_9
    314                  fdat    = 1.0;    
   \   0000013A   0xF04F 0x507E      MOV      R0,#+1065353216
   \   0000013E   0x900A             STR      R0,[SP, #+40]
   \   00000140   0xE00F             B.N      ??AppTaskMater_10
    315              else if ( fdat< 0.5 )
   \                     ??AppTaskMater_9: (+1)
   \   00000142   0xF04F 0x517C      MOV      R1,#+1056964608
   \   00000146   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000014A   0xD202             BCS.N    ??AppTaskMater_11
    316                  fdat = 0.5;
   \   0000014C   0x4608             MOV      R0,R1
   \   0000014E   0x900A             STR      R0,[SP, #+40]
   \   00000150   0xE007             B.N      ??AppTaskMater_10
    317              else if ( fdat > 2.0 )
   \                     ??AppTaskMater_11: (+1)
   \   00000152   0x.... 0x....      LDR.W    R1,??DataTable54_11  ;; 0x40000001
   \   00000156   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000015A   0xD802             BHI.N    ??AppTaskMater_10
    318                  fdat    = 2.0;
   \   0000015C   0xF04F 0x4080      MOV      R0,#+1073741824
   \   00000160   0x900A             STR      R0,[SP, #+40]
    319              AC.U_K      = fdat;
   \                     ??AppTaskMater_10: (+1)
   \   00000162   0x980A             LDR      R0,[SP, #+40]
   \   00000164   0x6670             STR      R0,[R6, #+100]
    320              
    321              ReadFM24CL64(164 , (uint8_t *)&fdat, 4);
   \   00000166   0x2204             MOVS     R2,#+4
   \   00000168   0xA90A             ADD      R1,SP,#+40
   \   0000016A   0x20A4             MOVS     R0,#+164
   \   0000016C   0x.... 0x....      BL       ReadFM24CL64
    322              if ( fdat == 0.0 )
   \   00000170   0x980A             LDR      R0,[SP, #+40]
   \   00000172   0x2100             MOVS     R1,#+0
   \   00000174   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000178   0xD103             BNE.N    ??AppTaskMater_12
    323                  fdat    = 1.0;    
   \   0000017A   0xF04F 0x507E      MOV      R0,#+1065353216
   \   0000017E   0x900A             STR      R0,[SP, #+40]
   \   00000180   0xE00F             B.N      ??AppTaskMater_13
    324              else if ( fdat < 0.5 )
   \                     ??AppTaskMater_12: (+1)
   \   00000182   0xF04F 0x517C      MOV      R1,#+1056964608
   \   00000186   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000018A   0xD202             BCS.N    ??AppTaskMater_14
    325                  fdat = 0.5;
   \   0000018C   0x4608             MOV      R0,R1
   \   0000018E   0x900A             STR      R0,[SP, #+40]
   \   00000190   0xE007             B.N      ??AppTaskMater_13
    326              else if ( fdat > 2.0 )
   \                     ??AppTaskMater_14: (+1)
   \   00000192   0x.... 0x....      LDR.W    R1,??DataTable54_11  ;; 0x40000001
   \   00000196   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000019A   0xD802             BHI.N    ??AppTaskMater_13
    327                  fdat    = 2.0;
   \   0000019C   0xF04F 0x4080      MOV      R0,#+1073741824
   \   000001A0   0x900A             STR      R0,[SP, #+40]
    328              AC.I_K      = fdat;
   \                     ??AppTaskMater_13: (+1)
   \   000001A2   0x980A             LDR      R0,[SP, #+40]
   \   000001A4   0x66B0             STR      R0,[R6, #+104]
    329              /***********************************************
    330              * 描述： 读取参数
    331              */ 
    332          	ReadFM24CL64(  0, PP_fram_temp, 12);
   \   000001A6   0x220C             MOVS     R2,#+12
   \   000001A8   0xA91A             ADD      R1,SP,#+104
   \   000001AA   0x2000             MOVS     R0,#+0
   \   000001AC   0x.... 0x....      BL       ReadFM24CL64
    333          	ReadFM24CL64( 12, NP_fram_temp, 12);
   \   000001B0   0x220C             MOVS     R2,#+12
   \   000001B2   0xA916             ADD      R1,SP,#+88
   \   000001B4   0x4610             MOV      R0,R2
   \   000001B6   0x.... 0x....      BL       ReadFM24CL64
    334              
    335          	ReadFM24CL64(100, PQ_fram_temp, 12);
   \   000001BA   0x220C             MOVS     R2,#+12
   \   000001BC   0xA912             ADD      R1,SP,#+72
   \   000001BE   0x2064             MOVS     R0,#+100
   \   000001C0   0x.... 0x....      BL       ReadFM24CL64
    336          	ReadFM24CL64(112, NQ_fram_temp, 12);
   \   000001C4   0x220C             MOVS     R2,#+12
   \   000001C6   0xA90E             ADD      R1,SP,#+56
   \   000001C8   0x2070             MOVS     R0,#+112
   \   000001CA   0x.... 0x....      BL       ReadFM24CL64
    337              /***********************************************
    338              * 描述： 正有功电能
    339              */ 
    340          	PP_Power_temp1 =  PP_fram_temp[3]<<24 |  PP_fram_temp[2]<<16 | PP_fram_temp[1]<<8 | PP_fram_temp[0];
   \   000001CE   0xA81A             ADD      R0,SP,#+104
   \   000001D0   0x78C1             LDRB     R1,[R0, #+3]
   \   000001D2   0x7882             LDRB     R2,[R0, #+2]
   \   000001D4   0x0412             LSLS     R2,R2,#+16
   \   000001D6   0xEA42 0x6101      ORR      R1,R2,R1, LSL #+24
   \   000001DA   0x7842             LDRB     R2,[R0, #+1]
   \   000001DC   0xEA41 0x2102      ORR      R1,R1,R2, LSL #+8
   \   000001E0   0xF89D 0x2068      LDRB     R2,[SP, #+104]
   \   000001E4   0x4311             ORRS     R1,R2,R1
    341          	PP_Power_temp2 =  PP_fram_temp[7]<<24 |  PP_fram_temp[6]<<16 | PP_fram_temp[5]<<8 | PP_fram_temp[4];
   \   000001E6   0x79C2             LDRB     R2,[R0, #+7]
   \   000001E8   0x7983             LDRB     R3,[R0, #+6]
   \   000001EA   0x041B             LSLS     R3,R3,#+16
   \   000001EC   0xEA43 0x6202      ORR      R2,R3,R2, LSL #+24
   \   000001F0   0x7943             LDRB     R3,[R0, #+5]
   \   000001F2   0xEA42 0x2203      ORR      R2,R2,R3, LSL #+8
   \   000001F6   0x7903             LDRB     R3,[R0, #+4]
   \   000001F8   0x431A             ORRS     R2,R3,R2
    342          	PP_Power_temp3 = PP_fram_temp[11]<<24 | PP_fram_temp[10]<<16 | PP_fram_temp[9]<<8 | PP_fram_temp[8];
    343          	
    344              if(PP_Power_temp1 == PP_Power_temp2)
   \   000001FA   0x4291             CMP      R1,R2
   \   000001FC   0xD101             BNE.N    ??AppTaskMater_15
    345          		AC.PPpower_base = PP_Power_temp1;
   \   000001FE   0x6331             STR      R1,[R6, #+48]
   \   00000200   0xE011             B.N      ??AppTaskMater_16
    346          	else if(PP_Power_temp2 == PP_Power_temp3)
   \                     ??AppTaskMater_15: (+1)
   \   00000202   0x7AC3             LDRB     R3,[R0, #+11]
   \   00000204   0xF890 0xC00A      LDRB     R12,[R0, #+10]
   \   00000208   0xEA4F 0x4C0C      LSL      R12,R12,#+16
   \   0000020C   0xEA4C 0x6303      ORR      R3,R12,R3, LSL #+24
   \   00000210   0xF890 0xC009      LDRB     R12,[R0, #+9]
   \   00000214   0xEA43 0x230C      ORR      R3,R3,R12, LSL #+8
   \   00000218   0x7A00             LDRB     R0,[R0, #+8]
   \   0000021A   0x4318             ORRS     R0,R0,R3
   \   0000021C   0x4282             CMP      R2,R0
   \   0000021E   0xD101             BNE.N    ??AppTaskMater_17
    347          		AC.PPpower_base = PP_Power_temp2;
   \   00000220   0x6332             STR      R2,[R6, #+48]
   \   00000222   0xE000             B.N      ??AppTaskMater_16
    348          	else
    349          		AC.PPpower_base = PP_Power_temp1;
   \                     ??AppTaskMater_17: (+1)
   \   00000224   0x6331             STR      R1,[R6, #+48]
    350             	
    351              /***********************************************
    352              * 描述： 负有功电能
    353              */ 
    354          	NP_Power_temp1 =  NP_fram_temp[3]<<24 |  NP_fram_temp[2]<<16 | NP_fram_temp[1]<<8 | NP_fram_temp[0];
   \                     ??AppTaskMater_16: (+1)
   \   00000226   0xA816             ADD      R0,SP,#+88
   \   00000228   0x78C1             LDRB     R1,[R0, #+3]
   \   0000022A   0x7882             LDRB     R2,[R0, #+2]
   \   0000022C   0x0412             LSLS     R2,R2,#+16
   \   0000022E   0xEA42 0x6101      ORR      R1,R2,R1, LSL #+24
   \   00000232   0x7842             LDRB     R2,[R0, #+1]
   \   00000234   0xEA41 0x2102      ORR      R1,R1,R2, LSL #+8
   \   00000238   0xF89D 0x2058      LDRB     R2,[SP, #+88]
   \   0000023C   0x4311             ORRS     R1,R2,R1
    355          	NP_Power_temp2 =  NP_fram_temp[7]<<24 |  NP_fram_temp[6]<<16 | NP_fram_temp[5]<<8 | NP_fram_temp[4];
   \   0000023E   0x79C2             LDRB     R2,[R0, #+7]
   \   00000240   0x7983             LDRB     R3,[R0, #+6]
   \   00000242   0x041B             LSLS     R3,R3,#+16
   \   00000244   0xEA43 0x6202      ORR      R2,R3,R2, LSL #+24
   \   00000248   0x7943             LDRB     R3,[R0, #+5]
   \   0000024A   0xEA42 0x2203      ORR      R2,R2,R3, LSL #+8
   \   0000024E   0x7903             LDRB     R3,[R0, #+4]
   \   00000250   0x431A             ORRS     R2,R3,R2
    356          	NP_Power_temp3 = NP_fram_temp[11]<<24 | NP_fram_temp[10]<<16 | NP_fram_temp[9]<<8 | NP_fram_temp[8];
    357              
    358          	if(NP_Power_temp1 == NP_Power_temp2)
   \   00000252   0x4291             CMP      R1,R2
   \   00000254   0xD101             BNE.N    ??AppTaskMater_18
    359          		AC.NPpower_base = NP_Power_temp1;
   \   00000256   0x6371             STR      R1,[R6, #+52]
   \   00000258   0xE011             B.N      ??AppTaskMater_19
    360          	else if(NP_Power_temp2 == NP_Power_temp3)
   \                     ??AppTaskMater_18: (+1)
   \   0000025A   0x7AC3             LDRB     R3,[R0, #+11]
   \   0000025C   0xF890 0xC00A      LDRB     R12,[R0, #+10]
   \   00000260   0xEA4F 0x4C0C      LSL      R12,R12,#+16
   \   00000264   0xEA4C 0x6303      ORR      R3,R12,R3, LSL #+24
   \   00000268   0xF890 0xC009      LDRB     R12,[R0, #+9]
   \   0000026C   0xEA43 0x230C      ORR      R3,R3,R12, LSL #+8
   \   00000270   0x7A00             LDRB     R0,[R0, #+8]
   \   00000272   0x4318             ORRS     R0,R0,R3
   \   00000274   0x4282             CMP      R2,R0
   \   00000276   0xD101             BNE.N    ??AppTaskMater_20
    361          		AC.NPpower_base = NP_Power_temp2;
   \   00000278   0x6372             STR      R2,[R6, #+52]
   \   0000027A   0xE000             B.N      ??AppTaskMater_19
    362          	else
    363          		AC.NPpower_base = NP_Power_temp1;
   \                     ??AppTaskMater_20: (+1)
   \   0000027C   0x6371             STR      R1,[R6, #+52]
    364              
    365              /***********************************************
    366              * 描述： 正无功电能
    367              */
    368          	PQ_Power_temp1 =  PQ_fram_temp[3]<<24 |  PQ_fram_temp[2]<<16 | PQ_fram_temp[1]<<8 | PQ_fram_temp[0];
   \                     ??AppTaskMater_19: (+1)
   \   0000027E   0xA812             ADD      R0,SP,#+72
   \   00000280   0x78C1             LDRB     R1,[R0, #+3]
   \   00000282   0x7882             LDRB     R2,[R0, #+2]
   \   00000284   0x0412             LSLS     R2,R2,#+16
   \   00000286   0xEA42 0x6101      ORR      R1,R2,R1, LSL #+24
   \   0000028A   0x7842             LDRB     R2,[R0, #+1]
   \   0000028C   0xEA41 0x2102      ORR      R1,R1,R2, LSL #+8
   \   00000290   0xF89D 0x2048      LDRB     R2,[SP, #+72]
   \   00000294   0x4311             ORRS     R1,R2,R1
    369          	PQ_Power_temp2 =  PQ_fram_temp[7]<<24 |  PQ_fram_temp[6]<<16 | PQ_fram_temp[5]<<8 | PQ_fram_temp[4];
   \   00000296   0x79C2             LDRB     R2,[R0, #+7]
   \   00000298   0x7983             LDRB     R3,[R0, #+6]
   \   0000029A   0x041B             LSLS     R3,R3,#+16
   \   0000029C   0xEA43 0x6202      ORR      R2,R3,R2, LSL #+24
   \   000002A0   0x7943             LDRB     R3,[R0, #+5]
   \   000002A2   0xEA42 0x2203      ORR      R2,R2,R3, LSL #+8
   \   000002A6   0x7903             LDRB     R3,[R0, #+4]
   \   000002A8   0x431A             ORRS     R2,R3,R2
    370          	PQ_Power_temp3 = PQ_fram_temp[11]<<24 | PQ_fram_temp[10]<<16 | PQ_fram_temp[9]<<8 | PQ_fram_temp[8];
    371              
    372          	if(PQ_Power_temp1 == PQ_Power_temp2)
   \   000002AA   0x4291             CMP      R1,R2
   \   000002AC   0xD101             BNE.N    ??AppTaskMater_21
    373          		AC.PQpower_base = PQ_Power_temp1;
   \   000002AE   0x6531             STR      R1,[R6, #+80]
   \   000002B0   0xE011             B.N      ??AppTaskMater_22
    374          	else if(PQ_Power_temp2 == PQ_Power_temp3)
   \                     ??AppTaskMater_21: (+1)
   \   000002B2   0x7AC3             LDRB     R3,[R0, #+11]
   \   000002B4   0xF890 0xC00A      LDRB     R12,[R0, #+10]
   \   000002B8   0xEA4F 0x4C0C      LSL      R12,R12,#+16
   \   000002BC   0xEA4C 0x6303      ORR      R3,R12,R3, LSL #+24
   \   000002C0   0xF890 0xC009      LDRB     R12,[R0, #+9]
   \   000002C4   0xEA43 0x230C      ORR      R3,R3,R12, LSL #+8
   \   000002C8   0x7A00             LDRB     R0,[R0, #+8]
   \   000002CA   0x4318             ORRS     R0,R0,R3
   \   000002CC   0x4282             CMP      R2,R0
   \   000002CE   0xD101             BNE.N    ??AppTaskMater_23
    375          		AC.PQpower_base = PQ_Power_temp2;
   \   000002D0   0x6532             STR      R2,[R6, #+80]
   \   000002D2   0xE000             B.N      ??AppTaskMater_22
    376          	else
    377          		AC.PQpower_base = PQ_Power_temp1;
   \                     ??AppTaskMater_23: (+1)
   \   000002D4   0x6531             STR      R1,[R6, #+80]
    378              
    379              /***********************************************
    380              * 描述： 负无功电能
    381              */ 
    382          	NQ_Power_temp1 =  NQ_fram_temp[3]<<24 |  NQ_fram_temp[2]<<16  | NQ_fram_temp[1]<<8 | NQ_fram_temp[0];
   \                     ??AppTaskMater_22: (+1)
   \   000002D6   0xA80E             ADD      R0,SP,#+56
   \   000002D8   0x78C1             LDRB     R1,[R0, #+3]
   \   000002DA   0x7882             LDRB     R2,[R0, #+2]
   \   000002DC   0x0412             LSLS     R2,R2,#+16
   \   000002DE   0xEA42 0x6101      ORR      R1,R2,R1, LSL #+24
   \   000002E2   0x7842             LDRB     R2,[R0, #+1]
   \   000002E4   0xEA41 0x2102      ORR      R1,R1,R2, LSL #+8
   \   000002E8   0xF89D 0x2038      LDRB     R2,[SP, #+56]
   \   000002EC   0x4311             ORRS     R1,R2,R1
    383          	NQ_Power_temp2 =  NQ_fram_temp[7]<<24 |  NQ_fram_temp[6]<<16  | NQ_fram_temp[5]<<8 | NQ_fram_temp[4];
   \   000002EE   0x79C2             LDRB     R2,[R0, #+7]
   \   000002F0   0x7983             LDRB     R3,[R0, #+6]
   \   000002F2   0x041B             LSLS     R3,R3,#+16
   \   000002F4   0xEA43 0x6202      ORR      R2,R3,R2, LSL #+24
   \   000002F8   0x7943             LDRB     R3,[R0, #+5]
   \   000002FA   0xEA42 0x2203      ORR      R2,R2,R3, LSL #+8
   \   000002FE   0x7903             LDRB     R3,[R0, #+4]
   \   00000300   0x431A             ORRS     R2,R3,R2
    384          	NQ_Power_temp3 = NQ_fram_temp[11]<<24 | NQ_fram_temp[10]<<16  | NQ_fram_temp[9]<<8 | NQ_fram_temp[8];
    385              
    386          	if(NQ_Power_temp1 == NQ_Power_temp2)
   \   00000302   0x4291             CMP      R1,R2
   \   00000304   0xD101             BNE.N    ??AppTaskMater_24
    387          		AC.NQpower_base = NQ_Power_temp1;
   \   00000306   0x6571             STR      R1,[R6, #+84]
   \   00000308   0xE011             B.N      ??AppTaskMater_25
    388          	else if(NQ_Power_temp2 == NQ_Power_temp3)
   \                     ??AppTaskMater_24: (+1)
   \   0000030A   0x7AC3             LDRB     R3,[R0, #+11]
   \   0000030C   0xF890 0xC00A      LDRB     R12,[R0, #+10]
   \   00000310   0xEA4F 0x4C0C      LSL      R12,R12,#+16
   \   00000314   0xEA4C 0x6303      ORR      R3,R12,R3, LSL #+24
   \   00000318   0xF890 0xC009      LDRB     R12,[R0, #+9]
   \   0000031C   0xEA43 0x230C      ORR      R3,R3,R12, LSL #+8
   \   00000320   0x7A00             LDRB     R0,[R0, #+8]
   \   00000322   0x4318             ORRS     R0,R0,R3
   \   00000324   0x4282             CMP      R2,R0
   \   00000326   0xD101             BNE.N    ??AppTaskMater_26
    389          		AC.NQpower_base = NQ_Power_temp2;
   \   00000328   0x6572             STR      R2,[R6, #+84]
   \   0000032A   0xE000             B.N      ??AppTaskMater_25
    390          	else
    391          		AC.NQpower_base = NQ_Power_temp1;
   \                     ??AppTaskMater_26: (+1)
   \   0000032C   0x6571             STR      R1,[R6, #+84]
    392              
    393          	ReadFM24CL64(72, (uint8_t *)&Mater.Record.Head, 4); 
   \                     ??AppTaskMater_25: (+1)
   \   0000032E   0x2204             MOVS     R2,#+4
   \   00000330   0xF107 0x0184      ADD      R1,R7,#+132
   \   00000334   0x2048             MOVS     R0,#+72
   \   00000336   0x.... 0x....      BL       ReadFM24CL64
    394          	ReadFM24CL64(76, (uint8_t *)&Mater.Record.Tail, 4);
   \   0000033A   0x2204             MOVS     R2,#+4
   \   0000033C   0xF107 0x0188      ADD      R1,R7,#+136
   \   00000340   0x204C             MOVS     R0,#+76
   \   00000342   0x.... 0x....      BL       ReadFM24CL64
    395          	ReadFM24CL64(80, (uint8_t *)&Mater.RecordNbr, 4);
   \   00000346   0x1DBF             ADDS     R7,R7,#+6
   \   00000348   0x2204             MOVS     R2,#+4
   \   0000034A   0x4639             MOV      R1,R7
   \   0000034C   0x2050             MOVS     R0,#+80
   \   0000034E   0x.... 0x....      BL       ReadFM24CL64
    396              
    397              if ( Mater.Record.Head > MAX_ADDR ) {
   \   00000352   0x6868             LDR      R0,[R5, #+4]
   \   00000354   0x.... 0x....      LDR.W    R1,??DataTable54_12  ;; 0xffff81
   \   00000358   0x4288             CMP      R0,R1
   \   0000035A   0xD305             BCC.N    ??AppTaskMater_27
    398                  Mater.Record.Head  = 0;
   \   0000035C   0x2000             MOVS     R0,#+0
   \   0000035E   0x6068             STR      R0,[R5, #+4]
   \   00000360   0xE007             B.N      ??AppTaskMater_28
   \   00000362   0xBF00             Nop      
   \                     ??AppTaskMater_0:
   \   00000364   0x52 0x78          DC8      "RxQ"
   \              0x51 0x00    
    399              } else {
    400                  Mater.Record.Head  = Mater.Record.Head / sizeof(Mater);
    401                  Mater.Record.Head  = Mater.Record.Head * sizeof(Mater);
   \                     ??AppTaskMater_27: (+1)
   \   00000368   0x228C             MOVS     R2,#+140
   \   0000036A   0xFBB0 0xF0F2      UDIV     R0,R0,R2
   \   0000036E   0x4350             MULS     R0,R2,R0
   \   00000370   0x6068             STR      R0,[R5, #+4]
    402              }
    403              if ( Mater.Record.Tail > MAX_ADDR ) {
   \                     ??AppTaskMater_28: (+1)
   \   00000372   0x68A8             LDR      R0,[R5, #+8]
   \   00000374   0x4288             CMP      R0,R1
   \   00000376   0xD302             BCC.N    ??AppTaskMater_29
    404                  Mater.Record.Tail  = 0;
   \   00000378   0x2000             MOVS     R0,#+0
   \   0000037A   0x60A8             STR      R0,[R5, #+8]
   \   0000037C   0xE004             B.N      ??AppTaskMater_30
    405              } else {
    406                  Mater.Record.Tail  = Mater.Record.Tail / sizeof(Mater);
    407                  Mater.Record.Tail  = Mater.Record.Tail * sizeof(Mater);
   \                     ??AppTaskMater_29: (+1)
   \   0000037E   0x218C             MOVS     R1,#+140
   \   00000380   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000384   0x4348             MULS     R0,R1,R0
   \   00000386   0x60A8             STR      R0,[R5, #+8]
    408              }
    409              if ( Mater.RecordNbr == 0xffffffff )
   \                     ??AppTaskMater_30: (+1)
   \   00000388   0x6838             LDR      R0,[R7, #+0]
   \   0000038A   0xF110 0x0F01      CMN      R0,#+1
   \   0000038E   0xD101             BNE.N    ??AppTaskMater_31
    410                  Mater.RecordNbr  = 0;
   \   00000390   0x2000             MOVS     R0,#+0
   \   00000392   0x6038             STR      R0,[R7, #+0]
    411              
    412              BSP_OS_TimeDly(OS_TICKS_PER_SEC / 2);
   \                     ??AppTaskMater_31: (+1)
   \   00000394   0xF44F 0x70FA      MOV      R0,#+500
   \   00000398   0x.... 0x....      BL       BSP_OS_TimeDly
    413              /***********************************************
    414              * 描述： 
    415              */ 
    416          	uartprintf(Ctrl.Com.pch,"\r\n当前头地址：0x%08X\r\n当前尾地址：0x%08X\r\n当前记录号：%d",
    417                         Mater.Record.Head,
    418                         Mater.Record.Tail,
    419                         Mater.RecordNbr);
   \   0000039C   0x6838             LDR      R0,[R7, #+0]
   \   0000039E   0x9000             STR      R0,[SP, #+0]
   \   000003A0   0x68AB             LDR      R3,[R5, #+8]
   \   000003A2   0x686A             LDR      R2,[R5, #+4]
   \   000003A4   0x.... 0x....      ADR.W    R1,?_7
   \   000003A8   0x.... 0x....      LDR.W    R0,??DataTable54_3
   \   000003AC   0xF8D0 0x0205      LDR      R0,[R0, #+517]
   \   000003B0   0x.... 0x....      BL       uartprintf
   \   000003B4   0xE000             B.N      ??AppTaskMater_32
    420                          
    421              /***********************************************
    422              * 描述： Task body, always written as an infinite loop.
    423              */
    424              while (DEF_TRUE) {
    425                  /***********************************************
    426                  * 描述： 本任务看门狗标志置位
    427                  */
    428                  OS_ERR      terr;
    429                  ticks       = OSTimeGet(&terr);                 // 获取当前OSTick
    430                  OS_FlagPost(( OS_FLAG_GRP *)&WdtFlagGRP,
    431                              ( OS_FLAGS     ) WDT_FLAG_MATER,
    432                              ( OS_OPT       ) OS_OPT_POST_FLAG_SET,
    433                              ( CPU_TS       ) 0,
    434                              ( OS_ERR      *) &err);
    435                  
    436                  /***********************************************
    437                  * 描述： 等待DTU数据接收消息队列
    438                  */
    439                  OS_MSG_SIZE p_msg_size;
    440                  
    441                  MODBUS_CH *pch = 
    442                 (MODBUS_CH *)OSQPend ((OS_Q*)&MTR_RxQ,
    443                              (OS_TICK       )dly,
    444                              (OS_OPT        )OS_OPT_PEND_BLOCKING,//OS_OPT_PEND_NON_BLOCKING,
    445                              (OS_MSG_SIZE  *)&p_msg_size,
    446                              (CPU_TS       *)0,
    447                              (OS_ERR       *)&err);
    448                  /***********************************************
    449                  * 描述： 2017/8/19：收到电表串口数据
    450                  */
    451                  if ( OS_ERR_NONE == err ) {
    452                      /***********************************************
    453                      * 描述： 2017/8/19：保存接收到的数据数量并处理数据
    454                      */
    455                      pch->RxBufByteCnt   = p_msg_size;
    456                      APP_MaterCommHandler(pch);
    457                  }
    458                  
    459                  /***********************************************
    460                  * 描述： 等待COMM操作标志位
    461                  */
    462                  OS_FLAGS    flags = 
    463                  OSFlagPend( ( OS_FLAG_GRP *)&Ctrl.Os.MaterEvtFlagGrp,
    464                              ( OS_FLAGS     ) Ctrl.Os.MaterEvtFlag,
    465                              ( OS_TICK      ) dly,
    466                              ( OS_OPT       ) OS_OPT_PEND_FLAG_SET_ANY | OS_OPT_PEND_NON_BLOCKING,
    467                              ( CPU_TS      *) NULL,
    468                              ( OS_ERR      *)&err);
    469                  /***********************************************
    470                  * 描述： 没有错误,有事件发生
    471                  */
    472                  if ( err == OS_ERR_NONE ) {
    473                      OS_FLAGS    flagClr = 0;
    474                      /***********************************************
    475                      * 描述： 心跳包发送
    476                      */
    477                      if       ( flags & COMM_EVT_FLAG_HEART  ) {
    478                          flagClr |= COMM_EVT_FLAG_HEART;
    479                          // 保存电量
    480                          SavePowerData();
    481                      /***********************************************
    482                      * 描述： COMM复位
    483                      */
    484                      } 
    485                      if ( flags & COMM_EVT_FLAG_RESET ) {
    486                          flagClr |= COMM_EVT_FLAG_RESET;
    487                          
    488                      /***********************************************
    489                      * 描述： COMM连接
    490                      */
    491                      } 
    492                      if ( flags & COMM_EVT_FLAG_CONNECT ) {
    493                          flagClr |= COMM_EVT_FLAG_CONNECT;
    494                          
    495                      /***********************************************
    496                      * 描述： 串口接收
    497                      */
    498                      } 
    499                      if ( flags & COMM_EVT_FLAG_RECV ) {
    500                          flagClr |= COMM_EVT_FLAG_RECV;
    501                          
    502                      /***********************************************
    503                      * 描述： 上报消息
    504                      */
    505                      } 
    506                      if ( flags & COMM_EVT_FLAG_REPORT ) {
    507                          flagClr |= COMM_EVT_FLAG_REPORT; 
    508                          
    509                      /***********************************************
    510                      * 描述： 断开
    511                      */
    512                      } 
    513                      if ( flags & COMM_EVT_FLAG_CLOSE ) {
    514                          flagClr |= COMM_EVT_FLAG_CLOSE;
    515                          
    516                      /***********************************************
    517                      * 描述： 超时
    518                      */
    519                      } 
    520                      if ( flags & COMM_EVT_FLAG_TIMEOUT ) {
    521                          flagClr |= COMM_EVT_FLAG_TIMEOUT;
    522                          
    523                      /***********************************************
    524                      * 描述： 配置
    525                      */
    526                      } 
    527                      if ( flags & COMM_EVT_FLAG_CONFIG ) {
    528                          flagClr |= COMM_EVT_FLAG_CONFIG;
    529                          /***********************************************
    530                          * 描述： 保存数据
    531                          */                 
    532                          SavePowerData();
    533                          //SaveRecord();
    534                          void  App_SaveDataToHistory( void );
    535                          App_SaveDataToHistory();
    536                          
    537                          uartprintf(Ctrl.Com.pch,"\r\n当前时间：20%02d-%02d-%02d  %02d:%02d:%02d", 
    538                                     Mater.Tax.Tax3.Vari.LKJTime.Year, 
    539                                     Mater.Tax.Tax3.Vari.LKJTime.Mon, 
    540                                     Mater.Tax.Tax3.Vari.LKJTime.Day,
    541                                     Mater.Tax.Tax3.Vari.LKJTime.Hour, 
    542                                     Mater.Tax.Tax3.Vari.LKJTime.Min, 
    543                                     Mater.Tax.Tax3.Vari.LKJTime.Sec);
    544                          uartprintf(Ctrl.Com.pch,
    545                                     "\r\n存储数据成功 ID = %d\r\n正有功 = %d;\r\n负有功 = %d;\r\n正无功 = %d;\r\n负无功 = %d;\r\n电  压 = %d;\r\n电  流 = %d;\r\n频  率 = %d;\r\n功率因素 = %d;\r\n有功功率 = %d;\r\n无功功率 = %d\r\n",
    546                                      Mater.RecordNbr,
    547                                      Mater.Energy.PPPower,      
    548                                      Mater.Energy.NPPower,      
    549                                      Mater.Energy.PQPower,      
    550                                      Mater.Energy.NQPower,      
    551                                      Mater.Energy.PrimVolt/1000,
    552                                      Mater.Energy.PrimCurr/1000,
    553                                      Mater.Energy.PowerFreq/1000,
    554                                      Mater.Energy.PowerFactor,
    555                                      Mater.Energy.ActivePower,  
    556                                      Mater.Energy.ReactivePower);
    557                          /***********************************************
    558                          * 描述： 发送数据处理
    559                          */
    560                      } 
    561                      //exit:
    562                      /***********************************************
    563                      * 描述： 清除标志
    564                      */
    565                      if ( !flagClr ) {
    566                          flagClr = flags;
    567                      }
    568                      
    569                      /***********************************************
    570                      * 描述： 清除标志位
    571                      */
    572                      OSFlagPost( ( OS_FLAG_GRP  *)&Ctrl.Os.MaterEvtFlagGrp,
    573                                  ( OS_FLAGS      )flagClr,
    574                                  ( OS_OPT        )OS_OPT_POST_FLAG_CLR,
    575                                  ( OS_ERR       *)&err);
    576                  /***********************************************
    577                  * 描述： 如果超时，则发送一次心跳包
    578                  */
    579                  } else if ( err == OS_ERR_TIMEOUT ) {
    580                      OSFlagPost( ( OS_FLAG_GRP  *)&Ctrl.Os.MaterEvtFlagGrp,
    581                                  ( OS_FLAGS      )Ctrl.Os.MaterEvtFlag,
    582                                  ( OS_OPT        )OS_OPT_POST_FLAG_CLR,
    583                                  ( OS_ERR       *)&err );
    584                  }
    585                  /***********************************************
    586                  * 描述： 正有功、负有功、正无功、负无功电量
    587                  */
    588                  i++;
    589          		AC.PPpower_NUM = (uint32_t)(AC.PPpower_temp + AC.PPpower_base);
    590          		AC.NPpower_NUM = (uint32_t)(AC.NPpower_temp + AC.NPpower_base);
    591          		AC.PQpower_NUM = (uint32_t)(AC.PQpower_temp + AC.PQpower_base);
    592          		AC.NQpower_NUM = (uint32_t)(AC.NQpower_temp + AC.NQpower_base);
    593          		
    594                  /***********************************************
    595                  * 描述： 循环显示，最大值为99999999
    596                  */ 
    597                  if(AC.PPpower_NUM >= 100000000)	{
    598          		
    599          			AC.PPpulse = 0;
    600          			AC.PPpower_temp = 0;
    601          			AC.PPpower_base = 1; 
    602          		}
    603                  /***********************************************
    604                  * 描述： 循环显示，最大值为99999999
    605                  */ 
    606          		if(AC.NPpower_NUM >= 100000000)	{
    607          		
    608          			AC.NPpulse = 0;
    609          			AC.NPpower_temp = 0;
    610          			AC.NPpower_base = 1; 
    611          		}
    612                  /***********************************************
    613                  * 描述： 循环显示，最大值为99999999
    614                  */ 
    615          		if(AC.PQpower_NUM >= 100000000)	{
    616          		
    617          			AC.PQpulse = 0;
    618          			AC.PQpower_temp = 0;
    619          			AC.PQpower_base = 1; 
    620          		}
    621                  /***********************************************
    622                  * 描述： 循环显示，最大值为99999999
    623                  */ 
    624          		if(AC.NQpower_NUM >= 100000000)	{
    625          		
    626          			AC.NQpulse = 0;
    627          			AC.NQpower_temp = 0;
    628          			AC.NQpower_base = 1; 
    629          		}
    630                  /***********************************************
    631                  * 描述： 有功功率、无功功率、功率因素、频率
    632                  */ 
    633          //		AC.ACTIVE_POWER     = (int32_t)(SPI_CS5463_AC_Read_Else_FLOAT(PA) * 20000);
    634          //		AC.REACTIVE_POWER   = (int32_t)(SPI_CS5463_AC_Read_Else_FLOAT(PQ) * 20000);
    635          //		AC.Power_Factor     = SPI_CS5463_AC_Read_Else_FLOAT(PF);
    636          //		AC.Power_Freq       = SPI_CS5463_AC_Read_Else_FLOAT(FREQUENCY) * 4000;
    637          //        
    638                  /***********************************************
    639                  * 描述： 功率因素
    640                  */
    641                  if ( fabs( AC.Power_Factor ) < 0.0005 )
    642                      AC.Power_Factor     = 0;
    643                   
    644                  /**************** *******************************
    645                  * 描述： 电压、电流
    646                  */ 
    647          //		Vac_RMS_F = SPI_CS5463_AC_Read_VIrms_FLOAT(VRMS);
    648          //		Iac_RMS_F = SPI_CS5463_AC_Read_VIrms_FLOAT(IRMS);
    649          		
    650                  /***********************************************
    651                  * 描述： 瞬时电压、瞬时电流:17020003
    652                  *
    653                  //AC.U_RMS = Vac_RMS_F * 41666.7;				//比列系数：25000V/0.6(SS4车型)
    654                  //AC.I_RMS = Iac_RMS_F * 500;				    //比列系数：300A/0.6(SS4车型)
    655                  
    656          		AC.U_RMS = Vac_RMS_F * ((float)AC.U_SCL/0.6) * 0.99960016;		    //比列系数：25000V/0.6(HXD1D车型)        
    657          		AC.I_RMS = Iac_RMS_F * ((float)AC.I_SCL/0.6);       //1000;	    //比列系数：600A/0.6(HXD1D车型)
    658          		
    659          		//if(Vac_RMS_F < 0.0012)							    //电压比例系数较大，去掉浮电压
    660          		//	AC.U_RMS = 0;
    661                  
    662                  if ( AC.I_RMS  > 80 ) {
    663                       AC.I_RMS = AC.I_RMS * 0.975609756;
    664                  }
    665                  
    666                  /***********************************************
    667                  * 描述： 瞬时电压、瞬时电流:17020001
    668                  */
    669                  //AC.U_RMS = Vac_RMS_F * 41666.7;				//比列系数：25000V/0.6(SS4车型)
    670                  //AC.I_RMS = Iac_RMS_F * 500;				    //比列系数：300A/0.6(SS4车型)
    671                  
    672          		AC.U_RMS = Vac_RMS_F * ((float)AC.U_SCL/0.6) * AC.U_K;  //0.995421063;		//比列系数：25000V/0.6(HXD1D车型)        
    673          		AC.I_RMS = Iac_RMS_F * ((float)AC.I_SCL/0.6) * AC.I_K;       //1000;	    //比列系数：600A/0.6(HXD1D车型)
    674          		
    675          		//if(Vac_RMS_F < 0.0012)							    //电压比例系数较大，去掉浮电压
    676          		//	AC.U_RMS = 0;
    677                  
    678                  //if ( AC.I_RMS  > 80 ) {
    679                  //     AC.I_RMS = AC.I_RMS * 0.975609756;
    680                  //}
    681                  /***********************************************
    682                  * 描述： 瞬时电压、瞬时电流:17020002
    683                  * 
    684                  //AC.U_RMS = Vac_RMS_F * 41666.7;				//比列系数：25000V/0.6(SS4车型)
    685                  //AC.I_RMS = Iac_RMS_F * 500;				    //比列系数：300A/0.6(SS4车型)
    686                  
    687          		AC.U_RMS = Vac_RMS_F * ((float)AC.U_SCL/0.6);		    //比列系数：25000V/0.6(HXD1D车型)        
    688          		AC.I_RMS = Iac_RMS_F * ((float)AC.I_SCL/0.6);       //1000;	    //比列系数：600A/0.6(HXD1D车型)
    689          		
    690          		//if(Vac_RMS_F < 0.0012)							    //电压比例系数较大，去掉浮电压
    691          		//	AC.U_RMS = 0;
    692                  
    693                  //if ( AC.I_RMS  > 80 ) {
    694                  //     AC.I_RMS = AC.I_RMS * 0.975609756;
    695                  //}
    696                  */
    697                  AC.U_RMS = Vac_RMS_F * ((float)AC.U_SCL/0.6) * AC.U_K;		    //比列系数：25000V/0.6(HXD1D车型)        
    698          		AC.I_RMS = Iac_RMS_F * ((float)AC.I_SCL/0.6) * AC.I_K;       //1000;	    //比列系数：600A/0.6(HXD1D车型)
    699          		
    700                  /***********************************************
    701                  * 描述： 
    702                  */
    703                  if ( AC.U_RMS  < AC.U_O ) {
    704                       AC.U_RMS = 0;
    705                  }
    706                  
    707                  Mater.Energy.PPPower        = (uint32_t)((float)AC.PPpower_NUM / (float)(( 100000.0 * 100.0 * 5.0 / (float)AC.U_SCL / (float)AC.I_SCL) ) );			                //正有功电量    1kvarh      99999999 kvarh
    708                  Mater.Energy.NPPower        = (uint32_t)((float)AC.NPpower_NUM / (float)(( 100000.0 * 100.0 * 5.0 / (float)AC.U_SCL / (float)AC.I_SCL) ) );			                //负有功电量    1kvarh      99999999 kvarh 
    709                  Mater.Energy.PQPower        = (uint32_t)((float)AC.PQpower_NUM / (float)(( 100000.0 * 100.0 * 5.0 / (float)AC.U_SCL / (float)AC.I_SCL) ) );			                //正无功电量    1kvarh      99999999 kvarh
    710                  Mater.Energy.NQPower        = (uint32_t)((float)AC.NQpower_NUM / (float)(( 100000.0 * 100.0 * 5.0 / (float)AC.U_SCL / (float)AC.I_SCL) ) );			                //负无功电量    1kvarh      99999999 kvarh
    711                  Mater.Energy.PrimVolt       = (uint32_t)(AC.U_RMS * 1000);				//原边电压      0.001V      0～35000.000V
    712                  Mater.Energy.PrimCurr       = (uint32_t)(AC.I_RMS * 1000);				//原边电流      0.001A      0～600.000A
    713                  Mater.Energy.PowerFreq      = (uint32_t)(AC.Power_Freq * 1000);			//频率          0.001Hz    
    714                  Mater.Energy.PowerFactor    = (int32_t)(AC.Power_Factor * 1000);		//功率因数      0.001       -1.000～1.000
    715                  Mater.Energy.ActivePower    = AC.ACTIVE_POWER;			                //有功功率      0.001kW     -12000.000  kW～12000.000  kW
    716                  Mater.Energy.ReactivePower  = AC.REACTIVE_POWER;		                //无功功率      0.001kvar   -12000.000  kvar～12000.000 
    717                  
    718          //        SPI_CS5463_AC_GetDrdy();
    719          //        SPI_CS5463_AC_ClearDrdy();
    720                  /***********************************************
    721                  * 描述： 计算剩余时间
    722                  */
    723                  dly   = CYCLE_TIME_TICKS - ( OSTimeGet(&err) - ticks );
    724                  if ( dly  < 1 ) {
    725                      dly = 1;
   \                     ??AppTaskMater_33: (+1)
   \   000003B6   0x2401             MOVS     R4,#+1
    726                  } else if ( dly > CYCLE_TIME_TICKS ) {
   \                     ??AppTaskMater_32: (+1)
   \   000003B8   0xA80C             ADD      R0,SP,#+48
   \   000003BA   0x.... 0x....      BL       OSTimeGet
   \   000003BE   0x900D             STR      R0,[SP, #+52]
   \   000003C0   0xA809             ADD      R0,SP,#+36
   \   000003C2   0x9000             STR      R0,[SP, #+0]
   \   000003C4   0x2300             MOVS     R3,#+0
   \   000003C6   0x461A             MOV      R2,R3
   \   000003C8   0x2180             MOVS     R1,#+128
   \   000003CA   0x.... 0x....      LDR.W    R0,??DataTable54_13
   \   000003CE   0x.... 0x....      BL       OS_FlagPost
   \   000003D2   0xA809             ADD      R0,SP,#+36
   \   000003D4   0x9001             STR      R0,[SP, #+4]
   \   000003D6   0x2000             MOVS     R0,#+0
   \   000003D8   0x9000             STR      R0,[SP, #+0]
   \   000003DA   0xF10D 0x0326      ADD      R3,SP,#+38
   \   000003DE   0x4602             MOV      R2,R0
   \   000003E0   0x4621             MOV      R1,R4
   \   000003E2   0xF106 0x006C      ADD      R0,R6,#+108
   \   000003E6   0x.... 0x....      BL       OSQPend
   \   000003EA   0xF8BD 0x1024      LDRH     R1,[SP, #+36]
   \   000003EE   0x2900             CMP      R1,#+0
   \   000003F0   0xD104             BNE.N    ??AppTaskMater_34
   \   000003F2   0xF8BD 0x1026      LDRH     R1,[SP, #+38]
   \   000003F6   0x8641             STRH     R1,[R0, #+50]
   \   000003F8   0x.... 0x....      BL       APP_MaterCommHandler
   \                     ??AppTaskMater_34: (+1)
   \   000003FC   0xA809             ADD      R0,SP,#+36
   \   000003FE   0x9001             STR      R0,[SP, #+4]
   \   00000400   0x2000             MOVS     R0,#+0
   \   00000402   0x9000             STR      R0,[SP, #+0]
   \   00000404   0xF248 0x0308      MOVW     R3,#+32776
   \   00000408   0x4622             MOV      R2,R4
   \   0000040A   0x.... 0x....      LDR.W    R0,??DataTable54_3
   \   0000040E   0xF8D0 0x15D6      LDR      R1,[R0, #+1494]
   \   00000412   0x980B             LDR      R0,[SP, #+44]
   \   00000414   0x.... 0x....      BL       OSFlagPend
   \   00000418   0x4604             MOV      R4,R0
   \   0000041A   0xF8BD 0x0024      LDRH     R0,[SP, #+36]
   \   0000041E   0x2800             CMP      R0,#+0
   \   00000420   0xD16B             BNE.N    ??AppTaskMater_35
   \   00000422   0x2500             MOVS     R5,#+0
   \   00000424   0x07E0             LSLS     R0,R4,#+31
   \   00000426   0xD502             BPL.N    ??AppTaskMater_36
   \   00000428   0x2501             MOVS     R5,#+1
   \   0000042A   0x.... 0x....      BL       SavePowerData
   \                     ??AppTaskMater_36: (+1)
   \   0000042E   0x07A0             LSLS     R0,R4,#+30
   \   00000430   0xD501             BPL.N    ??AppTaskMater_37
   \   00000432   0xF045 0x0502      ORR      R5,R5,#0x2
   \                     ??AppTaskMater_37: (+1)
   \   00000436   0x0760             LSLS     R0,R4,#+29
   \   00000438   0xD501             BPL.N    ??AppTaskMater_38
   \   0000043A   0xF045 0x0504      ORR      R5,R5,#0x4
   \                     ??AppTaskMater_38: (+1)
   \   0000043E   0x0720             LSLS     R0,R4,#+28
   \   00000440   0xD501             BPL.N    ??AppTaskMater_39
   \   00000442   0xF045 0x0508      ORR      R5,R5,#0x8
   \                     ??AppTaskMater_39: (+1)
   \   00000446   0x06E0             LSLS     R0,R4,#+27
   \   00000448   0xD501             BPL.N    ??AppTaskMater_40
   \   0000044A   0xF045 0x0510      ORR      R5,R5,#0x10
   \                     ??AppTaskMater_40: (+1)
   \   0000044E   0x06A0             LSLS     R0,R4,#+26
   \   00000450   0xD501             BPL.N    ??AppTaskMater_41
   \   00000452   0xF045 0x0520      ORR      R5,R5,#0x20
   \                     ??AppTaskMater_41: (+1)
   \   00000456   0x0660             LSLS     R0,R4,#+25
   \   00000458   0xD501             BPL.N    ??AppTaskMater_42
   \   0000045A   0xF045 0x0540      ORR      R5,R5,#0x40
   \                     ??AppTaskMater_42: (+1)
   \   0000045E   0x0620             LSLS     R0,R4,#+24
   \   00000460   0xD541             BPL.N    ??AppTaskMater_43
   \   00000462   0xF045 0x0580      ORR      R5,R5,#0x80
   \   00000466   0x.... 0x....      BL       SavePowerData
   \   0000046A   0x.... 0x....      BL       App_SaveDataToHistory
   \   0000046E   0x6BB8             LDR      R0,[R7, #+56]
   \   00000470   0xF000 0x013F      AND      R1,R0,#0x3F
   \   00000474   0x9103             STR      R1,[SP, #+12]
   \   00000476   0xF3C0 0x1185      UBFX     R1,R0,#+6,#+6
   \   0000047A   0x9102             STR      R1,[SP, #+8]
   \   0000047C   0xF3C0 0x3104      UBFX     R1,R0,#+12,#+5
   \   00000480   0x9101             STR      R1,[SP, #+4]
   \   00000482   0xF3C0 0x4144      UBFX     R1,R0,#+17,#+5
   \   00000486   0x9100             STR      R1,[SP, #+0]
   \   00000488   0xF3C0 0x5383      UBFX     R3,R0,#+22,#+4
   \   0000048C   0x0E82             LSRS     R2,R0,#+26
   \   0000048E   0x.... 0x....      ADR.W    R1,?_8
   \   00000492   0x.... 0x....      LDR.W    R0,??DataTable54_3
   \   00000496   0xF8D0 0x0205      LDR      R0,[R0, #+517]
   \   0000049A   0x.... 0x....      BL       uartprintf
   \   0000049E   0x6AB8             LDR      R0,[R7, #+40]
   \   000004A0   0x9008             STR      R0,[SP, #+32]
   \   000004A2   0x6A78             LDR      R0,[R7, #+36]
   \   000004A4   0x9007             STR      R0,[SP, #+28]
   \   000004A6   0x6A38             LDR      R0,[R7, #+32]
   \   000004A8   0x9006             STR      R0,[SP, #+24]
   \   000004AA   0x69F8             LDR      R0,[R7, #+28]
   \   000004AC   0xF44F 0x717A      MOV      R1,#+1000
   \   000004B0   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000004B4   0x9005             STR      R0,[SP, #+20]
   \   000004B6   0x69B8             LDR      R0,[R7, #+24]
   \   000004B8   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000004BC   0x9004             STR      R0,[SP, #+16]
   \   000004BE   0x6978             LDR      R0,[R7, #+20]
   \   000004C0   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000004C4   0x9003             STR      R0,[SP, #+12]
   \   000004C6   0x6938             LDR      R0,[R7, #+16]
   \   000004C8   0x9002             STR      R0,[SP, #+8]
   \   000004CA   0x68F8             LDR      R0,[R7, #+12]
   \   000004CC   0x9001             STR      R0,[SP, #+4]
   \   000004CE   0x68B8             LDR      R0,[R7, #+8]
   \   000004D0   0x9000             STR      R0,[SP, #+0]
   \   000004D2   0x687B             LDR      R3,[R7, #+4]
   \   000004D4   0x683A             LDR      R2,[R7, #+0]
   \   000004D6   0x.... 0x....      ADR.W    R1,?_9
   \   000004DA   0x.... 0x....      LDR.W    R0,??DataTable54_3
   \   000004DE   0xF8D0 0x0205      LDR      R0,[R0, #+517]
   \   000004E2   0x.... 0x....      BL       uartprintf
   \                     ??AppTaskMater_43: (+1)
   \   000004E6   0x2D00             CMP      R5,#+0
   \   000004E8   0xD100             BNE.N    ??AppTaskMater_44
   \   000004EA   0x4625             MOV      R5,R4
   \                     ??AppTaskMater_44: (+1)
   \   000004EC   0xAB09             ADD      R3,SP,#+36
   \   000004EE   0x2201             MOVS     R2,#+1
   \   000004F0   0x4629             MOV      R1,R5
   \   000004F2   0x980B             LDR      R0,[SP, #+44]
   \   000004F4   0x.... 0x....      BL       OSFlagPost
   \   000004F8   0xE00C             B.N      ??AppTaskMater_45
   \                     ??AppTaskMater_35: (+1)
   \   000004FA   0xF247 0x21D9      MOVW     R1,#+29401
   \   000004FE   0x4288             CMP      R0,R1
   \   00000500   0xD108             BNE.N    ??AppTaskMater_45
   \   00000502   0xAB09             ADD      R3,SP,#+36
   \   00000504   0x2201             MOVS     R2,#+1
   \   00000506   0x.... 0x....      LDR.W    R0,??DataTable54_3
   \   0000050A   0xF8D0 0x15D6      LDR      R1,[R0, #+1494]
   \   0000050E   0x980B             LDR      R0,[SP, #+44]
   \   00000510   0x.... 0x....      BL       OSFlagPost
   \                     ??AppTaskMater_45: (+1)
   \   00000514   0x6BB0             LDR      R0,[R6, #+56]
   \   00000516   0x6B31             LDR      R1,[R6, #+48]
   \   00000518   0x1808             ADDS     R0,R1,R0
   \   0000051A   0x6230             STR      R0,[R6, #+32]
   \   0000051C   0x6BF0             LDR      R0,[R6, #+60]
   \   0000051E   0x6B71             LDR      R1,[R6, #+52]
   \   00000520   0x1808             ADDS     R0,R1,R0
   \   00000522   0x6270             STR      R0,[R6, #+36]
   \   00000524   0x6DB0             LDR      R0,[R6, #+88]
   \   00000526   0x6D31             LDR      R1,[R6, #+80]
   \   00000528   0x1808             ADDS     R0,R1,R0
   \   0000052A   0x6430             STR      R0,[R6, #+64]
   \   0000052C   0x6DF0             LDR      R0,[R6, #+92]
   \   0000052E   0x6D71             LDR      R1,[R6, #+84]
   \   00000530   0x1808             ADDS     R0,R1,R0
   \   00000532   0x6470             STR      R0,[R6, #+68]
   \   00000534   0x.... 0x....      LDR.W    R0,??DataTable54_14  ;; 0x5f5e100
   \   00000538   0x6A31             LDR      R1,[R6, #+32]
   \   0000053A   0x4281             CMP      R1,R0
   \   0000053C   0xD304             BCC.N    ??AppTaskMater_46
   \   0000053E   0x2100             MOVS     R1,#+0
   \   00000540   0x62B1             STR      R1,[R6, #+40]
   \   00000542   0x63B1             STR      R1,[R6, #+56]
   \   00000544   0x2101             MOVS     R1,#+1
   \   00000546   0x6331             STR      R1,[R6, #+48]
   \                     ??AppTaskMater_46: (+1)
   \   00000548   0x6A71             LDR      R1,[R6, #+36]
   \   0000054A   0x4281             CMP      R1,R0
   \   0000054C   0xD304             BCC.N    ??AppTaskMater_47
   \   0000054E   0x2100             MOVS     R1,#+0
   \   00000550   0x62F1             STR      R1,[R6, #+44]
   \   00000552   0x63F1             STR      R1,[R6, #+60]
   \   00000554   0x2101             MOVS     R1,#+1
   \   00000556   0x6371             STR      R1,[R6, #+52]
   \                     ??AppTaskMater_47: (+1)
   \   00000558   0x6C31             LDR      R1,[R6, #+64]
   \   0000055A   0x4281             CMP      R1,R0
   \   0000055C   0xD304             BCC.N    ??AppTaskMater_48
   \   0000055E   0x2100             MOVS     R1,#+0
   \   00000560   0x64B1             STR      R1,[R6, #+72]
   \   00000562   0x65B1             STR      R1,[R6, #+88]
   \   00000564   0x2101             MOVS     R1,#+1
   \   00000566   0x6531             STR      R1,[R6, #+80]
   \                     ??AppTaskMater_48: (+1)
   \   00000568   0x6C71             LDR      R1,[R6, #+68]
   \   0000056A   0x4281             CMP      R1,R0
   \   0000056C   0xD304             BCC.N    ??AppTaskMater_49
   \   0000056E   0x2000             MOVS     R0,#+0
   \   00000570   0x64F0             STR      R0,[R6, #+76]
   \   00000572   0x65F0             STR      R0,[R6, #+92]
   \   00000574   0x2001             MOVS     R0,#+1
   \   00000576   0x6570             STR      R0,[R6, #+84]
   \                     ??AppTaskMater_49: (+1)
   \   00000578   0x6970             LDR      R0,[R6, #+20]
   \   0000057A   0x.... 0x....      BL       __aeabi_f2d
   \   0000057E   0xF021 0x4100      BIC      R1,R1,#0x80000000
   \   00000582   0x.... 0x....      LDR.W    R2,??APP_MaterCommHandler_0  ;; 0xd2f1a9fc
   \   00000586   0x.... 0x....      LDR.W    R3,??DataTable54_15  ;; 0x3f40624d
   \   0000058A   0x.... 0x....      BL       __aeabi_cdcmple
   \   0000058E   0xD201             BCS.N    ??AppTaskMater_50
   \   00000590   0x2000             MOVS     R0,#+0
   \   00000592   0x6170             STR      R0,[R6, #+20]
   \                     ??AppTaskMater_50: (+1)
   \   00000594   0x68B0             LDR      R0,[R6, #+8]
   \   00000596   0x.... 0x....      BL       __aeabi_ui2f
   \   0000059A   0x.... 0x....      BL       __aeabi_f2d
   \   0000059E   0x4682             MOV      R10,R0
   \   000005A0   0x468B             MOV      R11,R1
   \   000005A2   0x2400             MOVS     R4,#+0
   \   000005A4   0x4625             MOV      R5,R4
   \   000005A6   0xF04F 0x3233      MOV      R2,#+858993459
   \   000005AA   0x.... 0x....      LDR.W    R3,??DataTable54_16  ;; 0x3fe33333
   \   000005AE   0x.... 0x....      BL       __aeabi_ddiv
   \   000005B2   0x4602             MOV      R2,R0
   \   000005B4   0x460B             MOV      R3,R1
   \   000005B6   0x4620             MOV      R0,R4
   \   000005B8   0x4629             MOV      R1,R5
   \   000005BA   0x.... 0x....      BL       __aeabi_dmul
   \   000005BE   0x4680             MOV      R8,R0
   \   000005C0   0x4689             MOV      R9,R1
   \   000005C2   0x6E70             LDR      R0,[R6, #+100]
   \   000005C4   0x.... 0x....      BL       __aeabi_f2d
   \   000005C8   0x4642             MOV      R2,R8
   \   000005CA   0x464B             MOV      R3,R9
   \   000005CC   0x.... 0x....      BL       __aeabi_dmul
   \   000005D0   0x.... 0x....      BL       __aeabi_d2f
   \   000005D4   0x6030             STR      R0,[R6, #+0]
   \   000005D6   0x68F0             LDR      R0,[R6, #+12]
   \   000005D8   0x.... 0x....      BL       __aeabi_ui2f
   \   000005DC   0x.... 0x....      BL       __aeabi_f2d
   \   000005E0   0x4680             MOV      R8,R0
   \   000005E2   0x4689             MOV      R9,R1
   \   000005E4   0xF04F 0x3233      MOV      R2,#+858993459
   \   000005E8   0x.... 0x....      LDR.W    R3,??DataTable54_16  ;; 0x3fe33333
   \   000005EC   0x.... 0x....      BL       __aeabi_ddiv
   \   000005F0   0x4602             MOV      R2,R0
   \   000005F2   0x460B             MOV      R3,R1
   \   000005F4   0x4620             MOV      R0,R4
   \   000005F6   0x4629             MOV      R1,R5
   \   000005F8   0x.... 0x....      BL       __aeabi_dmul
   \   000005FC   0x4604             MOV      R4,R0
   \   000005FE   0x460D             MOV      R5,R1
   \   00000600   0x6EB0             LDR      R0,[R6, #+104]
   \   00000602   0x.... 0x....      BL       __aeabi_f2d
   \   00000606   0x4622             MOV      R2,R4
   \   00000608   0x462B             MOV      R3,R5
   \   0000060A   0x.... 0x....      BL       __aeabi_dmul
   \   0000060E   0x.... 0x....      BL       __aeabi_d2f
   \   00000612   0x4604             MOV      R4,R0
   \   00000614   0x6074             STR      R4,[R6, #+4]
   \   00000616   0x6830             LDR      R0,[R6, #+0]
   \   00000618   0x6E31             LDR      R1,[R6, #+96]
   \   0000061A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000061E   0xD201             BCS.N    ??AppTaskMater_51
   \   00000620   0x2000             MOVS     R0,#+0
   \   00000622   0x6030             STR      R0,[R6, #+0]
   \                     ??AppTaskMater_51: (+1)
   \   00000624   0x2000             MOVS     R0,#+0
   \   00000626   0x.... 0x....      LDR.W    R1,??DataTable54_17  ;; 0x4187d784
   \   0000062A   0x4652             MOV      R2,R10
   \   0000062C   0x465B             MOV      R3,R11
   \   0000062E   0x.... 0x....      BL       __aeabi_ddiv
   \   00000632   0x4642             MOV      R2,R8
   \   00000634   0x464B             MOV      R3,R9
   \   00000636   0x.... 0x....      BL       __aeabi_ddiv
   \   0000063A   0x.... 0x....      BL       __aeabi_d2f
   \   0000063E   0x4605             MOV      R5,R0
   \   00000640   0x6A30             LDR      R0,[R6, #+32]
   \   00000642   0x.... 0x....      BL       __aeabi_ui2f
   \   00000646   0x4629             MOV      R1,R5
   \   00000648   0x.... 0x....      BL       __aeabi_fdiv
   \   0000064C   0x.... 0x....      BL       __aeabi_f2uiz
   \   00000650   0x6078             STR      R0,[R7, #+4]
   \   00000652   0x6A70             LDR      R0,[R6, #+36]
   \   00000654   0x.... 0x....      BL       __aeabi_ui2f
   \   00000658   0x4629             MOV      R1,R5
   \   0000065A   0x.... 0x....      BL       __aeabi_fdiv
   \   0000065E   0x.... 0x....      BL       __aeabi_f2uiz
   \   00000662   0x60B8             STR      R0,[R7, #+8]
   \   00000664   0x6C30             LDR      R0,[R6, #+64]
   \   00000666   0x.... 0x....      BL       __aeabi_ui2f
   \   0000066A   0x4629             MOV      R1,R5
   \   0000066C   0x.... 0x....      BL       __aeabi_fdiv
   \   00000670   0x.... 0x....      BL       __aeabi_f2uiz
   \   00000674   0x60F8             STR      R0,[R7, #+12]
   \   00000676   0x6C70             LDR      R0,[R6, #+68]
   \   00000678   0x.... 0x....      BL       __aeabi_ui2f
   \   0000067C   0x4629             MOV      R1,R5
   \   0000067E   0x.... 0x....      BL       __aeabi_fdiv
   \   00000682   0x.... 0x....      BL       __aeabi_f2uiz
   \   00000686   0x6138             STR      R0,[R7, #+16]
   \   00000688   0x.... 0x....      LDR.W    R5,??DataTable54_18  ;; 0x447a0000
   \   0000068C   0x6831             LDR      R1,[R6, #+0]
   \   0000068E   0x4628             MOV      R0,R5
   \   00000690   0x.... 0x....      BL       __aeabi_fmul
   \   00000694   0x.... 0x....      BL       __aeabi_f2uiz
   \   00000698   0x6178             STR      R0,[R7, #+20]
   \   0000069A   0x4620             MOV      R0,R4
   \   0000069C   0x4629             MOV      R1,R5
   \   0000069E   0x.... 0x....      BL       __aeabi_fmul
   \   000006A2   0x.... 0x....      BL       __aeabi_f2uiz
   \   000006A6   0x61B8             STR      R0,[R7, #+24]
   \   000006A8   0x6931             LDR      R1,[R6, #+16]
   \   000006AA   0x4628             MOV      R0,R5
   \   000006AC   0x.... 0x....      BL       __aeabi_fmul
   \   000006B0   0x.... 0x....      BL       __aeabi_f2uiz
   \   000006B4   0x61F8             STR      R0,[R7, #+28]
   \   000006B6   0x6971             LDR      R1,[R6, #+20]
   \   000006B8   0x4628             MOV      R0,R5
   \   000006BA   0x.... 0x....      BL       __aeabi_fmul
   \   000006BE   0x.... 0x....      BL       __aeabi_f2iz
   \   000006C2   0x6238             STR      R0,[R7, #+32]
   \   000006C4   0x69B0             LDR      R0,[R6, #+24]
   \   000006C6   0x6278             STR      R0,[R7, #+36]
   \   000006C8   0x69F0             LDR      R0,[R6, #+28]
   \   000006CA   0x62B8             STR      R0,[R7, #+40]
   \   000006CC   0xA809             ADD      R0,SP,#+36
   \   000006CE   0x.... 0x....      BL       OSTimeGet
   \   000006D2   0xF5C0 0x707A      RSB      R0,R0,#+1000
   \   000006D6   0x990D             LDR      R1,[SP, #+52]
   \   000006D8   0x180C             ADDS     R4,R1,R0
   \   000006DA   0xF43F 0xAE6C      BEQ.W    ??AppTaskMater_33
   \   000006DE   0xF5B4 0x7F7A      CMP      R4,#+1000
   \   000006E2   0xF67F 0xAE69      BLS.W    ??AppTaskMater_32
    727                      dly = CYCLE_TIME_TICKS;
   \   000006E6   0xF44F 0x747A      MOV      R4,#+1000
   \   000006EA   0xE665             B.N      ??AppTaskMater_32
    728                  }
    729              }
    730          }
    731          
    732          /*******************************************************************************
    733           * 名    称： APP_MaterInit
    734           * 功    能： 任务初始化
    735           * 入口参数： 无
    736           * 出口参数： 无
    737           * 作    者： wumingshen.
    738           * 创建日期： 2016-11-11
    739           * 修    改：
    740           * 修改日期：
    741           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    742           void APP_MaterInit(void)
    743          {
   \                     APP_MaterInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    744              /***********************************************
    745              * 描述： 创建事件标志组
    746              */    
    747          	//SZ_USART1_DATA.uart = SZ_STM32_COM1;
    748              
    749          	AC.U_RMS = 0;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable54_4
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x6001             STR      R1,[R0, #+0]
    750          	AC.I_RMS = 0;
   \   0000000A   0x6041             STR      R1,[R0, #+4]
    751              
    752          	AC.Power_Factor = 0;
   \   0000000C   0x6141             STR      R1,[R0, #+20]
    753          	AC.Power_Freq = 0;
   \   0000000E   0x6101             STR      R1,[R0, #+16]
    754              
    755          	AC.ACTIVE_POWER = 0;
   \   00000010   0x6181             STR      R1,[R0, #+24]
    756          	AC.REACTIVE_POWER = 0;
   \   00000012   0x61C1             STR      R1,[R0, #+28]
    757              
    758          	AC.PPpower_NUM = 0;								
   \   00000014   0x6201             STR      R1,[R0, #+32]
    759          	AC.NPpower_NUM = 0;			
   \   00000016   0x6241             STR      R1,[R0, #+36]
    760          	AC.PPpulse = 0;				
   \   00000018   0x6281             STR      R1,[R0, #+40]
    761          	AC.NPpulse = 0;				
   \   0000001A   0x62C1             STR      R1,[R0, #+44]
    762          	AC.PPpower_base = 0;		
   \   0000001C   0x6301             STR      R1,[R0, #+48]
    763          	AC.NPpower_base = 0;		
   \   0000001E   0x6341             STR      R1,[R0, #+52]
    764          	AC.PPpower_temp = 0;		
   \   00000020   0x6381             STR      R1,[R0, #+56]
    765          	AC.NPpower_temp = 0;
   \   00000022   0x63C1             STR      R1,[R0, #+60]
    766              
    767          	AC.PQpower_NUM = 0;								
   \   00000024   0x6401             STR      R1,[R0, #+64]
    768          	AC.NQpower_NUM = 0;			
   \   00000026   0x6441             STR      R1,[R0, #+68]
    769          	AC.PQpulse = 0;				
   \   00000028   0x6481             STR      R1,[R0, #+72]
    770          	AC.NQpulse = 0;				
   \   0000002A   0x64C1             STR      R1,[R0, #+76]
    771          	AC.PQpower_base = 0;		
   \   0000002C   0x6501             STR      R1,[R0, #+80]
    772          	AC.NQpower_base = 0;		
   \   0000002E   0x6541             STR      R1,[R0, #+84]
    773          	AC.PQpower_temp = 0;		
   \   00000030   0x6581             STR      R1,[R0, #+88]
    774          	AC.NQpower_temp = 0;
   \   00000032   0x65C1             STR      R1,[R0, #+92]
    775                  
    776              BSP_OS_TimeDly(OS_TICKS_PER_SEC);
   \   00000034   0xF44F 0x707A      MOV      R0,#+1000
   \   00000038   0x.... 0x....      BL       BSP_OS_TimeDly
    777              /***********************************************
    778              * 描述： 
    779              */
    780          	//SZ_STM32_COMInit(COM1, 115200);
    781          	//RS485_SET_RX_Mode();      /* 默认配置RS485的方向为接收，以免引起总线冲突 */
    782          	//xPrintf_Init(19200);           //COM2对应的是RS485
    783          	//LED_DIS_Config();
    784          	I2C_GPIO_Config();
   \   0000003C   0x.... 0x....      BL       I2C_GPIO_Config
    785              void EEP_OS_Init(void);
    786              EEP_OS_Init();
   \   00000040   0x.... 0x....      BL       EEP_OS_Init
    787          	InitDS3231();
   \   00000044   0x.... 0x....      BL       InitDS3231
    788          //	SPI_AC_INIT();
    789          //	CS5463_AC_INIT();
    790          	SPI_FLASH_Init();
   \   00000048   0x.... 0x....      BL       SPI_FLASH_Init
    791              
    792              /***********************************************
    793              * 描述： 
    794              */
    795              //DC_COUNTInit();
    796          	AC_COUNTInit();
   \   0000004C   0x.... 0x....      BL       AC_COUNTInit
    797              /***********************************************
    798              * 描述： 
    799              */
    800          	//NVIC_GroupConfig();
    801          	//NVIC_COMConfiguration();
    802              
    803              /***********************************************
    804              * 描述： 
    805              */
    806          	//Dis_Test();							 //数码管上电测试
    807             	//SZ_STM32_SysTickInit(100);
    808              void PWR_PVD_Init(void);
    809          	PWR_PVD_Init();
   \   00000050   0x.... 0x....      BL       PWR_PVD_Init
    810              //WDG_Init();
    811                  
    812              /***********************************************
    813              * 描述： 在看门狗标志组注册本任务的看门狗标志
    814              */
    815              WdtFlags |= WDT_FLAG_MATER;
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable57
   \   00000058   0x6801             LDR      R1,[R0, #+0]
   \   0000005A   0xF041 0x0180      ORR      R1,R1,#0x80
   \   0000005E   0x6001             STR      R1,[R0, #+0]
    816          }
   \   00000060   0xBD01             POP      {R0,PC}          ;; return
    817          
    818          /*******************************************************************************
    819           * 名    称： DC_COUNTInit
    820           * 功    能： 初始化PE9的外部中断功能，进行脉冲计数
    821           * 入口参数： 无
    822           * 出口参数： 无
    823           * 作    者： wumingshen.
    824           * 创建日期： 2016-11-16
    825           * 修    改：
    826           * 修改日期：
    827           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    828          void DC_COUNTInit(void)
    829          {
   \                     DC_COUNTInit: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
    830              GPIO_InitTypeDef GPIO_InitStructure;
    831              EXTI_InitTypeDef EXTI_InitStructure;
    832              //NVIC_InitTypeDef NVIC_InitStructure;
    833              
    834              /* 使能GPIOB的Clock时钟 */
    835              RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOE | RCC_APB2Periph_AFIO, ENABLE);
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x2041             MOVS     R0,#+65
   \   00000008   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
    836              
    837              /* Configure Button pin as input floating */
    838              /* 初始化GPIOB8管脚，配置为带上拉的输入 */
    839              GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
   \   0000000C   0x2048             MOVS     R0,#+72
   \   0000000E   0xF88D 0x0003      STRB     R0,[SP, #+3]
    840              GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
   \   00000012   0xF44F 0x7400      MOV      R4,#+512
   \   00000016   0x4620             MOV      R0,R4
   \   00000018   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    841              GPIO_Init(GPIOE, &GPIO_InitStructure);
   \   0000001C   0x4669             MOV      R1,SP
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable58  ;; 0x40011800
   \   00000022   0x.... 0x....      BL       GPIO_Init
    842              
    843              /* 初始化GPIOA0为中断模式 */
    844              /* 将GPIOA0对应的管脚连接到内部中断线 */    
    845              GPIO_EXTILineConfig(GPIO_PortSourceGPIOE , GPIO_PinSource9);
   \   00000026   0x2109             MOVS     R1,#+9
   \   00000028   0x2004             MOVS     R0,#+4
   \   0000002A   0x.... 0x....      BL       GPIO_EXTILineConfig
    846              
    847              /* Configure Button EXTI line */
    848              /* 将GPIOA0配置为中断模式，下降沿触发中断 */    
    849              EXTI_InitStructure.EXTI_Line = EXTI_Line9;
   \   0000002E   0x9401             STR      R4,[SP, #+4]
    850              EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0xF88D 0x0008      STRB     R0,[SP, #+8]
    851              EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;  
   \   00000036   0x200C             MOVS     R0,#+12
   \   00000038   0xF88D 0x0009      STRB     R0,[SP, #+9]
    852              EXTI_InitStructure.EXTI_LineCmd = ENABLE;
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0xF88D 0x000A      STRB     R0,[SP, #+10]
    853              EXTI_Init(&EXTI_InitStructure);
   \   00000042   0xA801             ADD      R0,SP,#+4
   \   00000044   0x.... 0x....      BL       EXTI_Init
    854              
    855              //NVIC_InitStructure.NVIC_IRQChannel = EXTI9_5_IRQn;
    856              //NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    857              //NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    858          	//NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    859              //NVIC_Init(&NVIC_InitStructure);
    860          	EXTI_ClearITPendingBit(EXTI_Line9); 
   \   00000048   0x4620             MOV      R0,R4
   \   0000004A   0x.... 0x....      BL       EXTI_ClearITPendingBit
    861              
    862              /***********************************************
    863              * 描述： 外部中断9 ~ 5向量
    864              */ 
    865              BSP_IntVectSet(BSP_INT_ID_EXTI9_5, EXTI9_5_ISRHandler);
   \   0000004E   0x.... 0x....      ADR.W    R1,EXTI9_5_ISRHandler
   \   00000052   0x2017             MOVS     R0,#+23
   \   00000054   0x.... 0x....      BL       BSP_IntVectSet
    866              BSP_IntEn(BSP_INT_ID_EXTI9_5);
   \   00000058   0x2017             MOVS     R0,#+23
   \   0000005A   0x.... 0x....      BL       BSP_IntEn
    867          }
   \   0000005E   0xBD1F             POP      {R0-R4,PC}       ;; return
    868          
    869          /*******************************************************************************
    870           * 名    称： AC_COUNTInit
    871           * 功    能： 初始化PE0的外部中断功能，进行脉冲计数
    872           * 入口参数： 无
    873           * 出口参数： 无
    874           * 作    者： wumingshen.
    875           * 创建日期： 2016-11-16
    876           * 修    改：
    877           * 修改日期：
    878           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    879          void AC_COUNTInit(void)
    880          {
   \                     AC_COUNTInit: (+1)
   \   00000000   0xB53E             PUSH     {R1-R5,LR}
    881              GPIO_InitTypeDef GPIO_InitStructure;
    882              EXTI_InitTypeDef EXTI_InitStructure;
    883              //NVIC_InitTypeDef NVIC_InitStructure;
    884              /***********************************************
    885              * 描述： 电量计量方向控制引脚初始化
    886              */   
    887              /* 初始化GPIOD2为GPIO */   
    888          	/* 使能GPIOD的Clock时钟 */
    889              RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE);
   \   00000002   0x2101             MOVS     R1,#+1
   \   00000004   0x2020             MOVS     R0,#+32
   \   00000006   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
    890              /* Configure Button pin as input floating */
    891              /* 初始化GPIOD2管脚，配置为带上拉的输入 */
    892              GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
   \   0000000A   0x2048             MOVS     R0,#+72
   \   0000000C   0xF88D 0x0003      STRB     R0,[SP, #+3]
    893              GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
   \   00000010   0x2004             MOVS     R0,#+4
   \   00000012   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    894              GPIO_Init(GPIOD, &GPIO_InitStructure);  
   \   00000016   0x4669             MOV      R1,SP
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable56  ;; 0x40011400
   \   0000001C   0x.... 0x....      BL       GPIO_Init
    895              
    896              /***********************************************
    897              * 描述： 有功电量输出引脚初始化
    898              */  
    899              /* 使能GPIOE的Clock时钟 */
    900              RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOE | RCC_APB2Periph_AFIO, ENABLE);
   \   00000020   0x2101             MOVS     R1,#+1
   \   00000022   0x2041             MOVS     R0,#+65
   \   00000024   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
    901              
    902              /* Configure Button pin as input floating */
    903              /* 初始化GPIOE0管脚，配置为带上拉的输入 */
    904              GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
   \   00000028   0x2048             MOVS     R0,#+72
   \   0000002A   0xF88D 0x0003      STRB     R0,[SP, #+3]
    905              GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
   \   0000002E   0x2001             MOVS     R0,#+1
   \   00000030   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    906              GPIO_Init(GPIOE, &GPIO_InitStructure);
   \   00000034   0x.... 0x....      LDR.W    R4,??DataTable58  ;; 0x40011800
   \   00000038   0x4669             MOV      R1,SP
   \   0000003A   0x4620             MOV      R0,R4
   \   0000003C   0x.... 0x....      BL       GPIO_Init
    907              
    908          	/* 初始化GPIOE0为中断模式 */
    909              /* 将GPIOE0对应的管脚连接到内部中断线 */    
    910              GPIO_EXTILineConfig(GPIO_PortSourceGPIOE , GPIO_PinSource0);
   \   00000040   0x2100             MOVS     R1,#+0
   \   00000042   0x2004             MOVS     R0,#+4
   \   00000044   0x.... 0x....      BL       GPIO_EXTILineConfig
    911              
    912              EXTI_InitStructure.EXTI_Line = EXTI_Line0;
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x9001             STR      R0,[SP, #+4]
    913              EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0xF88D 0x0008      STRB     R0,[SP, #+8]
    914              EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;  
   \   00000052   0x200C             MOVS     R0,#+12
   \   00000054   0xF88D 0x0009      STRB     R0,[SP, #+9]
    915              EXTI_InitStructure.EXTI_LineCmd = ENABLE;
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0xF88D 0x000A      STRB     R0,[SP, #+10]
    916              EXTI_Init(&EXTI_InitStructure);
   \   0000005E   0xA801             ADD      R0,SP,#+4
   \   00000060   0x.... 0x....      BL       EXTI_Init
    917              
    918              //NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;
    919              //NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    920              //NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    921              //NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    922              //NVIC_Init(&NVIC_InitStructure);
    923          	EXTI_ClearITPendingBit(EXTI_Line0); 
   \   00000064   0x2001             MOVS     R0,#+1
   \   00000066   0x.... 0x....      BL       EXTI_ClearITPendingBit
    924              
    925              /***********************************************
    926              * 描述： 设置外部中断向量及开启中断
    927              */    
    928              /***********************************************
    929              * 描述： 外部中断0 ~ 4向量
    930              */ 
    931              BSP_IntVectSet(BSP_INT_ID_EXTI0, EXTI0_ISRHandler);
   \   0000006A   0x.... 0x....      ADR.W    R1,EXTI0_ISRHandler
   \   0000006E   0x2006             MOVS     R0,#+6
   \   00000070   0x.... 0x....      BL       BSP_IntVectSet
    932              BSP_IntEn(BSP_INT_ID_EXTI0);
   \   00000074   0x2006             MOVS     R0,#+6
   \   00000076   0x.... 0x....      BL       BSP_IntEn
    933              
    934              /***********************************************
    935              * 描述： 无功电量输出引脚初始化
    936              */  
    937              /* 使能GPIOB的Clock时钟 */
    938              RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOE | RCC_APB2Periph_AFIO, ENABLE);
   \   0000007A   0x2101             MOVS     R1,#+1
   \   0000007C   0x2041             MOVS     R0,#+65
   \   0000007E   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
    939              
    940              /* Configure Button pin as input floating */
    941              /* 初始化GPIOB8管脚，配置为带上拉的输入 */
    942              GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
   \   00000082   0x2048             MOVS     R0,#+72
   \   00000084   0xF88D 0x0003      STRB     R0,[SP, #+3]
    943              GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
   \   00000088   0xF44F 0x7500      MOV      R5,#+512
   \   0000008C   0x4628             MOV      R0,R5
   \   0000008E   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    944              GPIO_Init(GPIOE, &GPIO_InitStructure);
   \   00000092   0x4669             MOV      R1,SP
   \   00000094   0x4620             MOV      R0,R4
   \   00000096   0x.... 0x....      BL       GPIO_Init
    945              
    946              /* 初始化GPIOA0为中断模式 */
    947              /* 将GPIOA0对应的管脚连接到内部中断线 */    
    948              GPIO_EXTILineConfig(GPIO_PortSourceGPIOE , GPIO_PinSource9);
   \   0000009A   0x2109             MOVS     R1,#+9
   \   0000009C   0x2004             MOVS     R0,#+4
   \   0000009E   0x.... 0x....      BL       GPIO_EXTILineConfig
    949              
    950              /* Configure Button EXTI line */
    951              /* 将GPIOA0配置为中断模式，下降沿触发中断 */    
    952              EXTI_InitStructure.EXTI_Line = EXTI_Line9;
   \   000000A2   0x9501             STR      R5,[SP, #+4]
    953              EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
   \   000000A4   0x2000             MOVS     R0,#+0
   \   000000A6   0xF88D 0x0008      STRB     R0,[SP, #+8]
    954              EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;  
   \   000000AA   0x200C             MOVS     R0,#+12
   \   000000AC   0xF88D 0x0009      STRB     R0,[SP, #+9]
    955              EXTI_InitStructure.EXTI_LineCmd = ENABLE;
   \   000000B0   0x2001             MOVS     R0,#+1
   \   000000B2   0xF88D 0x000A      STRB     R0,[SP, #+10]
    956              EXTI_Init(&EXTI_InitStructure);
   \   000000B6   0xA801             ADD      R0,SP,#+4
   \   000000B8   0x.... 0x....      BL       EXTI_Init
    957              
    958              //NVIC_InitStructure.NVIC_IRQChannel = EXTI9_5_IRQn;
    959              //NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    960              //NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    961          	//NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    962              //NVIC_Init(&NVIC_InitStructure);
    963          	EXTI_ClearITPendingBit(EXTI_Line9); 
   \   000000BC   0x4628             MOV      R0,R5
   \   000000BE   0x.... 0x....      BL       EXTI_ClearITPendingBit
    964              
    965              /***********************************************
    966              * 描述： 外部中断9 ~ 5向量
    967              */ 
    968              BSP_IntVectSet(BSP_INT_ID_EXTI9_5, EXTI9_5_ISRHandler);
   \   000000C2   0x.... 0x....      ADR.W    R1,EXTI9_5_ISRHandler
   \   000000C6   0x2017             MOVS     R0,#+23
   \   000000C8   0x.... 0x....      BL       BSP_IntVectSet
    969              BSP_IntEn(BSP_INT_ID_EXTI9_5);
   \   000000CC   0x2017             MOVS     R0,#+23
   \   000000CE   0x.... 0x....      BL       BSP_IntEn
    970          }
   \   000000D2   0xBD37             POP      {R0-R2,R4,R5,PC}  ;; return
    971          
    972          /*******************************************************************************
    973           * 名    称： EXTI0_IRQHandler
    974           * 功    能： 外部中断0处理函数，计量正、负有功功率
    975           * 入口参数： 无
    976           * 出口参数： 无
    977           * 作    者： wumingshen.
    978           * 创建日期： 2016-11-16
    979           * 修    改：
    980           * 修改日期：
    981           *******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    982          void EXTI0_ISRHandler(void) 
    983          {   
   \                     EXTI0_ISRHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    984          	if(EXTI_GetITStatus(EXTI_Line0) != RESET) {
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      BL       EXTI_GetITStatus
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD026             BEQ.N    ??EXTI0_ISRHandler_0
    985                  /***********************************************
    986                  * 描述： 
    987                  */ 
    988                  if ( ( Mater.Energy.PrimVolt        == 0 ) ||
    989                       ( Mater.Energy.PrimCurr        == 0 ) ||
    990                       ( Mater.Energy.PowerFreq       == 0 ) ||
    991                       ( Mater.Energy.PowerFactor     == 0 ) ) {
   \   0000000C   0x....             LDR.N    R0,??DataTable54_5
   \   0000000E   0xF8D0 0x101A      LDR      R1,[R0, #+26]
   \   00000012   0x2900             CMP      R1,#+0
   \   00000014   0xD01C             BEQ.N    ??EXTI0_ISRHandler_1
   \   00000016   0xF8D0 0x101E      LDR      R1,[R0, #+30]
   \   0000001A   0x2900             CMP      R1,#+0
   \   0000001C   0xD018             BEQ.N    ??EXTI0_ISRHandler_1
   \   0000001E   0xF8D0 0x1022      LDR      R1,[R0, #+34]
   \   00000022   0x2900             CMP      R1,#+0
   \   00000024   0xD014             BEQ.N    ??EXTI0_ISRHandler_1
   \   00000026   0xF8D0 0x0026      LDR      R0,[R0, #+38]
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD010             BEQ.N    ??EXTI0_ISRHandler_1
    992                  } else {
    993                      /***********************************************
    994                      * 描述： 正有功
    995                      */ 
    996                      if(GPIO_ReadInputDataBit(GPIOD, GPIO_Pin_2)) {
   \   0000002E   0x....             LDR.N    R4,??DataTable54_4
   \   00000030   0x2104             MOVS     R1,#+4
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable56  ;; 0x40011400
   \   00000036   0x.... 0x....      BL       GPIO_ReadInputDataBit
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD004             BEQ.N    ??EXTI0_ISRHandler_2
    997                          AC.PPpulse++;
   \   0000003E   0x6AA0             LDR      R0,[R4, #+40]
   \   00000040   0x1C40             ADDS     R0,R0,#+1
   \   00000042   0x62A0             STR      R0,[R4, #+40]
    998                          AC.PPpower_temp = AC.PPpulse;                                   //脉冲常数100000，25kV/150V---600A/1A(HXD1D车型)
   \   00000044   0x63A0             STR      R0,[R4, #+56]
   \   00000046   0xE003             B.N      ??EXTI0_ISRHandler_1
    999                      /***********************************************
   1000                      * 描述： 负有功
   1001                      */ 
   1002                      } else {
   1003                          AC.NPpulse++;
   \                     ??EXTI0_ISRHandler_2: (+1)
   \   00000048   0x6AE0             LDR      R0,[R4, #+44]
   \   0000004A   0x1C40             ADDS     R0,R0,#+1
   \   0000004C   0x62E0             STR      R0,[R4, #+44]
   1004                          AC.NPpower_temp = AC.NPpulse;                                   //脉冲常数100000，25kV/150V---600A/1A(HXD1D车型)
   \   0000004E   0x63E0             STR      R0,[R4, #+60]
   1005                      }
   1006                  }
   1007                  /* Clear the EXTI Line 0 */  
   1008                  EXTI_ClearITPendingBit(EXTI_Line0);
   \                     ??EXTI0_ISRHandler_1: (+1)
   \   00000050   0x2001             MOVS     R0,#+1
   \   00000052   0xE8BD 0x4010      POP      {R4,LR}
   \   00000056   0x.... 0x....      B.W      EXTI_ClearITPendingBit
   1009          	}
   1010          }
   \                     ??EXTI0_ISRHandler_0: (+1)
   \   0000005A   0xBD10             POP      {R4,PC}          ;; return
   1011          
   1012          /*******************************************************************************
   1013           * 名    称： EXTI1_IRQHandler
   1014           * 功    能： 外部中断1处理函数，计量正、负无功功率
   1015           * 入口参数： 无
   1016           * 出口参数： 无
   1017           * 作    者： wumingshen.
   1018           * 创建日期： 2016-11-16
   1019           * 修    改：
   1020           * 修改日期：
   1021           *******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
   1022          void EXTI9_5_ISRHandler(void) 
   1023          {
   \                     EXTI9_5_ISRHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1024          	if(EXTI_GetITStatus(EXTI_Line9) != RESET) {
   \   00000002   0xF44F 0x7000      MOV      R0,#+512
   \   00000006   0x.... 0x....      BL       EXTI_GetITStatus
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD027             BEQ.N    ??EXTI9_5_ISRHandler_0
   1025                  /***********************************************
   1026                  * 描述： 
   1027                  */ 
   1028                  if ( ( Mater.Energy.PrimVolt        == 0 ) ||
   1029                       ( Mater.Energy.PrimCurr        == 0 ) ||
   1030                       ( Mater.Energy.PowerFreq       == 0 ) ||
   1031                       ( Mater.Energy.PowerFactor     == 0 ) ) {
   \   0000000E   0x....             LDR.N    R0,??DataTable54_5
   \   00000010   0xF8D0 0x101A      LDR      R1,[R0, #+26]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD01C             BEQ.N    ??EXTI9_5_ISRHandler_1
   \   00000018   0xF8D0 0x101E      LDR      R1,[R0, #+30]
   \   0000001C   0x2900             CMP      R1,#+0
   \   0000001E   0xD018             BEQ.N    ??EXTI9_5_ISRHandler_1
   \   00000020   0xF8D0 0x1022      LDR      R1,[R0, #+34]
   \   00000024   0x2900             CMP      R1,#+0
   \   00000026   0xD014             BEQ.N    ??EXTI9_5_ISRHandler_1
   \   00000028   0xF8D0 0x0026      LDR      R0,[R0, #+38]
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xD010             BEQ.N    ??EXTI9_5_ISRHandler_1
   1032                  } else {
   1033                      /***********************************************
   1034                      * 描述： 正无功
   1035                      */ 
   1036                      if(GPIO_ReadInputDataBit(GPIOD, GPIO_Pin_2)) {
   \   00000030   0x....             LDR.N    R4,??DataTable54_4
   \   00000032   0x2104             MOVS     R1,#+4
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable56  ;; 0x40011400
   \   00000038   0x.... 0x....      BL       GPIO_ReadInputDataBit
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD004             BEQ.N    ??EXTI9_5_ISRHandler_2
   1037                          AC.PQpulse++;
   \   00000040   0x6CA0             LDR      R0,[R4, #+72]
   \   00000042   0x1C40             ADDS     R0,R0,#+1
   \   00000044   0x64A0             STR      R0,[R4, #+72]
   1038                          AC.PQpower_temp = AC.PQpulse;                                   //脉冲常数100000，25kV/150V---600A/1A(HXD1D车型)
   \   00000046   0x65A0             STR      R0,[R4, #+88]
   \   00000048   0xE003             B.N      ??EXTI9_5_ISRHandler_1
   1039                      /***********************************************
   1040                      * 描述： 负无功
   1041                      */ 
   1042                      } else {
   1043                          AC.NQpulse++;
   \                     ??EXTI9_5_ISRHandler_2: (+1)
   \   0000004A   0x6CE0             LDR      R0,[R4, #+76]
   \   0000004C   0x1C40             ADDS     R0,R0,#+1
   \   0000004E   0x64E0             STR      R0,[R4, #+76]
   1044                          AC.NQpower_temp = AC.NQpulse;                                   //脉冲常数100000，25kV/150V---600A/1A(HXD1D车型)
   \   00000050   0x65E0             STR      R0,[R4, #+92]
   1045                      }
   1046                  }
   1047                  /* Clear the EXTI Line 9 */  
   1048                  EXTI_ClearITPendingBit(EXTI_Line9);
   \                     ??EXTI9_5_ISRHandler_1: (+1)
   \   00000052   0xF44F 0x7000      MOV      R0,#+512
   \   00000056   0xE8BD 0x4010      POP      {R4,LR}
   \   0000005A   0x.... 0x....      B.W      EXTI_ClearITPendingBit
   1049          	}
   1050          }
   \                     ??EXTI9_5_ISRHandler_0: (+1)
   \   0000005E   0xBD10             POP      {R4,PC}          ;; return
   1051          
   1052          /*******************************************************************************
   1053           * 名    称： APP_MaterDispHandler
   1054           * 功    能： 电表显示
   1055           * 入口参数： 无
   1056           * 出口参数： 无
   1057           * 作　 　者： wumingshen.
   1058           * 创建日期： 2015-03-28
   1059           * 修    改：
   1060           * 修改日期：
   1061           *******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
   1062          void APP_MaterDispHandler(INT08U *step)
   1063          {
   \                     APP_MaterDispHandler: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   1064          	//static uint8_t step = 0;
   1065              
   1066              BSP_DispClrAll();
   \   00000004   0x.... 0x....      BL       BSP_DispClrAll
   1067              switch ( *step ) {
   \   00000008   0x7820             LDRB     R0,[R4, #+0]
   \   0000000A   0x280A             CMP      R0,#+10
   \   0000000C   0xF200 0x8089      BHI.W    ??APP_MaterDispHandler_1
   \   00000010   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??APP_MaterDispHandler_0:
   \   00000014   0x06 0x0B          DC8      0x6,0xB,0x12,0x17
   \              0x12 0x17    
   \   00000018   0x20 0x25          DC8      0x20,0x25,0x2C,0x31
   \              0x2C 0x31    
   \   0000001C   0x38 0x42          DC8      0x38,0x42,0x4C,0x0
   \              0x4C 0x00    
   1068              /***********************************************
   1069              * 描述： 
   1070              */
   1071              case 0:     uprintf("E1      "); 	            break;                      // 
   \                     ??APP_MaterDispHandler_2: (+1)
   \   00000020   0x.... 0x....      ADR.W    R0,?_10
   \   00000024   0x.... 0x....      BL       uprintf
   \   00000028   0xE07D             B.N      ??APP_MaterDispHandler_3
   1072              case 1:     uprintf("%8d",Mater.Energy.PPPower);		break;              //显示正有功电量
   \                     ??APP_MaterDispHandler_4: (+1)
   \   0000002A   0x....             LDR.N    R0,??DataTable54_5
   \   0000002C   0xF8D0 0x100A      LDR      R1,[R0, #+10]
   \   00000030   0x....             ADR.N    R0,??DataTable54  ;; "%8d"
   \   00000032   0x.... 0x....      BL       uprintf
   \   00000036   0xE076             B.N      ??APP_MaterDispHandler_3
   1073              case 2:     uprintf("E2      ");		        break;
   \                     ??APP_MaterDispHandler_5: (+1)
   \   00000038   0x.... 0x....      ADR.W    R0,?_12
   \   0000003C   0x.... 0x....      BL       uprintf
   \   00000040   0xE071             B.N      ??APP_MaterDispHandler_3
   1074              case 3:     uprintf("%8d",Mater.Energy.NPPower);*step = 7;		break;	    //显示负有功电量
   \                     ??APP_MaterDispHandler_6: (+1)
   \   00000042   0x....             LDR.N    R0,??DataTable54_5
   \   00000044   0xF8D0 0x100E      LDR      R1,[R0, #+14]
   \   00000048   0x....             ADR.N    R0,??DataTable54  ;; "%8d"
   \   0000004A   0x.... 0x....      BL       uprintf
   \   0000004E   0x2007             MOVS     R0,#+7
   \   00000050   0x7020             STRB     R0,[R4, #+0]
   \   00000052   0xE068             B.N      ??APP_MaterDispHandler_3
   1075              case 4:     uprintf("E3      ");		        break;
   \                     ??APP_MaterDispHandler_7: (+1)
   \   00000054   0x.... 0x....      ADR.W    R0,?_13
   \   00000058   0x.... 0x....      BL       uprintf
   \   0000005C   0xE063             B.N      ??APP_MaterDispHandler_3
   1076              case 5:     uprintf("%8d",Mater.Energy.PQPower);break;	                    //显示正无功电量
   \                     ??APP_MaterDispHandler_8: (+1)
   \   0000005E   0x....             LDR.N    R0,??DataTable54_5
   \   00000060   0xF8D0 0x1012      LDR      R1,[R0, #+18]
   \   00000064   0x....             ADR.N    R0,??DataTable54  ;; "%8d"
   \   00000066   0x.... 0x....      BL       uprintf
   \   0000006A   0xE05C             B.N      ??APP_MaterDispHandler_3
   1077              case 6:     uprintf("E4      ");		        break;
   \                     ??APP_MaterDispHandler_9: (+1)
   \   0000006C   0x.... 0x....      ADR.W    R0,?_14
   \   00000070   0x.... 0x....      BL       uprintf
   \   00000074   0xE057             B.N      ??APP_MaterDispHandler_3
   1078              case 7:     uprintf("%8d",Mater.Energy.NQPower);break;                     //显示负无功电量
   \                     ??APP_MaterDispHandler_10: (+1)
   \   00000076   0x....             LDR.N    R0,??DataTable54_5
   \   00000078   0xF8D0 0x1016      LDR      R1,[R0, #+22]
   \   0000007C   0x....             ADR.N    R0,??DataTable54  ;; "%8d"
   \   0000007E   0x.... 0x....      BL       uprintf
   \   00000082   0xE050             B.N      ??APP_MaterDispHandler_3
   1079              case 8:     uprintf("U %6d",(uint32_t)AC.U_RMS);break;                     //显示电压
   \                     ??APP_MaterDispHandler_11: (+1)
   \   00000084   0x....             LDR.N    R0,??DataTable54_4
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x.... 0x....      BL       __aeabi_f2uiz
   \   0000008C   0x4601             MOV      R1,R0
   \   0000008E   0x.... 0x....      ADR.W    R0,?_15
   \   00000092   0x.... 0x....      BL       uprintf
   \   00000096   0xE046             B.N      ??APP_MaterDispHandler_3
   1080              case 9:     uprintf("A %6d",(uint32_t)AC.I_RMS);break;                     //显示电流
   \                     ??APP_MaterDispHandler_12: (+1)
   \   00000098   0x....             LDR.N    R0,??DataTable54_4
   \   0000009A   0x6840             LDR      R0,[R0, #+4]
   \   0000009C   0x.... 0x....      BL       __aeabi_f2uiz
   \   000000A0   0x4601             MOV      R1,R0
   \   000000A2   0x.... 0x....      ADR.W    R0,?_16
   \   000000A6   0x.... 0x....      BL       uprintf
   \   000000AA   0xE03C             B.N      ??APP_MaterDispHandler_3
   \                     ??APP_MaterDispHandler_13: (+1)
   \   000000AC   0x....             LDR.N    R0,??DataTable54_4
   \   000000AE   0x6945             LDR      R5,[R0, #+20]
   \   000000B0   0x4628             MOV      R0,R5
   \   000000B2   0xF04F 0x517E      MOV      R1,#+1065353216
   \   000000B6   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   000000BA   0xD107             BNE.N    ??APP_MaterDispHandler_14
   1081              case 10:    
   1082                  if ( AC.Power_Factor == 1.0 )
   1083                      uprintf("P   .1000",AC.Power_Factor);	                            //显示功率
   \   000000BC   0x2200             MOVS     R2,#+0
   \   000000BE   0x.... 0x....      LDR.W    R3,??DataTable59  ;; 0x3ff00000
   \   000000C2   0x.... 0x....      ADR.W    R0,?_17
   \   000000C6   0x.... 0x....      BL       uprintf
   \   000000CA   0xE02C             B.N      ??APP_MaterDispHandler_3
   1084                  else if ( AC.Power_Factor == -1.0 )
   \                     ??APP_MaterDispHandler_14: (+1)
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable59_1  ;; 0xbf800000
   \   000000D0   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   000000D4   0xD107             BNE.N    ??APP_MaterDispHandler_15
   1085                      uprintf("P  -.1000",AC.Power_Factor);	                            //显示功率
   \   000000D6   0x2200             MOVS     R2,#+0
   \   000000D8   0x.... 0x....      LDR.W    R3,??DataTable59_2  ;; 0xbff00000
   \   000000DC   0x.... 0x....      ADR.W    R0,?_18
   \   000000E0   0x.... 0x....      BL       uprintf
   \   000000E4   0xE01F             B.N      ??APP_MaterDispHandler_3
   1086                  else if(AC.Power_Factor < 0 )
   \                     ??APP_MaterDispHandler_15: (+1)
   \   000000E6   0x.... 0x....      BL       __aeabi_f2d
   \   000000EA   0x2200             MOVS     R2,#+0
   \   000000EC   0x.... 0x....      LDR.W    R3,??DataTable59_3  ;; 0x408f4000
   \   000000F0   0x.... 0x....      BL       __aeabi_dmul
   \   000000F4   0x.... 0x....      BL       __aeabi_d2iz
   \   000000F8   0x4602             MOV      R2,R0
   \   000000FA   0x4628             MOV      R0,R5
   \   000000FC   0x2100             MOVS     R1,#+0
   \   000000FE   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000102   0xD208             BCS.N    ??APP_MaterDispHandler_16
   1087                      uprintf("P  -.0%03d",abs(AC.Power_Factor * 1000.0));	            //显示功率
   \   00000104   0x4610             MOV      R0,R2
   \   00000106   0x.... 0x....      BL       abs
   \   0000010A   0x4601             MOV      R1,R0
   \   0000010C   0x.... 0x....      ADR.W    R0,?_19
   \   00000110   0x.... 0x....      BL       uprintf
   \   00000114   0xE007             B.N      ??APP_MaterDispHandler_3
   1088                  else
   1089                      uprintf("P   .0%03d",(int)(AC.Power_Factor * 1000.0));	            //显示功率
   \                     ??APP_MaterDispHandler_16: (+1)
   \   00000116   0x4611             MOV      R1,R2
   \   00000118   0x.... 0x....      ADR.W    R0,?_20
   \   0000011C   0x.... 0x....      BL       uprintf
   \   00000120   0xE001             B.N      ??APP_MaterDispHandler_3
   1090                  break;                                                                  //显示功率
   1091                      
   1092              default:
   1093                  *step   = 0;
   \                     ??APP_MaterDispHandler_1: (+1)
   \   00000122   0x2000             MOVS     R0,#+0
   \   00000124   0x7020             STRB     R0,[R4, #+0]
   1094                  break;
   1095              }
   1096              *step  += 1;
   \                     ??APP_MaterDispHandler_3: (+1)
   \   00000126   0x7820             LDRB     R0,[R4, #+0]
   \   00000128   0x1C40             ADDS     R0,R0,#+1
   \   0000012A   0x7020             STRB     R0,[R4, #+0]
   1097              if ( *step > 10 )
   \   0000012C   0xB2C0             UXTB     R0,R0
   \   0000012E   0x280B             CMP      R0,#+11
   \   00000130   0xDB01             BLT.N    ??APP_MaterDispHandler_17
   1098                  *step   = 0;    
   \   00000132   0x2000             MOVS     R0,#+0
   \   00000134   0x7020             STRB     R0,[R4, #+0]
   1099          }
   \                     ??APP_MaterDispHandler_17: (+1)
   \   00000136   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   1100          
   1101          /*******************************************************************************
   1102           * 名    称： APP_MaterCommHandler
   1103           * 功    能： 电表串口数据处理函数
   1104           * 入口参数： 无
   1105           * 出口参数： 无
   1106           * 作　　者： wumingshen.
   1107           * 创建日期： 2015-03-28
   1108           * 修    改：
   1109           * 修改日期：
   1110           *******************************************************************************/
   1111          /***********************************************
   1112          * 描述： 2015/12/07增加，用于非MODBBUS通信
   1113          *        非MODBUS通信，带帧头帧尾的通信数据处理
   1114          */
   1115          #if MB_NONMODBUS_EN == DEF_ENABLED

   \                                 In section .text, align 4, keep-with-next
   1116          CPU_BOOLEAN APP_MaterCommHandler (MODBUS_CH  *pch)
   1117          {    
   \                     APP_MaterCommHandler: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB08E             SUB      SP,SP,#+56
   \   00000006   0x4604             MOV      R4,R0
   1118              uint8_t     fram_clr[4]     = {0};
   \   00000008   0xA806             ADD      R0,SP,#+24
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x6001             STR      R1,[R0, #+0]
   1119          	uint8_t     IDBuf[4]        = {0};
   1120          	uint8_t     clear_buf[24]   = {0};
   \   0000000E   0xA807             ADD      R0,SP,#+28
   \   00000010   0x2118             MOVS     R1,#+24
   \   00000012   0x.... 0x....      BL       __aeabi_memclr4
   1121          	uint32_t    ID              = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x9005             STR      R0,[SP, #+20]
   1122          	uint32_t    utemp;
   1123              	
   1124          	TIME        system; 
   1125              
   1126              /***********************************************
   1127              * 描述： 拷贝数据到数据区
   1128              */
   1129              //CPU_SR_ALLOC();
   1130              //CPU_CRITICAL_ENTER();
   1131              //uint32_t  Len     = pch->RxBufByteCnt;
   1132              //memcpy( (INT08U *)&pch->RxFrameData, (INT08U *)pch->RxBuf, Len );
   1133              //CPU_CRITICAL_EXIT();
   1134              uint32_t  Len       = pch->RxBufByteCnt;
   \   0000001A   0xF104 0x0032      ADD      R0,R4,#+50
   \   0000001E   0x8801             LDRH     R1,[R0, #+0]
   \   00000020   0x460E             MOV      R6,R1
   1135              INT08U  *DataBuf    = pch->RxFrameData;
   \   00000022   0xF504 0x7511      ADD      R5,R4,#+580
   1136              
   1137              
   1138              CPU_INT16U  head    = BUILD_INT16U(pch->RxBuf[1], pch->RxBuf[0]);
   \   00000026   0x79C2             LDRB     R2,[R0, #+7]
   \   00000028   0x7980             LDRB     R0,[R0, #+6]
   \   0000002A   0xEB02 0x2000      ADD      R0,R2,R0, LSL #+8
   \   0000002E   0xB280             UXTH     R0,R0
   1139              CPU_INT16U  tail    = BUILD_INT16U(pch->RxBuf[pch->RxBufByteCnt-1],
   1140                                                 pch->RxBuf[pch->RxBufByteCnt-2]);
   \   00000030   0x1909             ADDS     R1,R1,R4
   \   00000032   0x3136             ADDS     R1,R1,#+54
   \   00000034   0x784A             LDRB     R2,[R1, #+1]
   \   00000036   0x7809             LDRB     R1,[R1, #+0]
   \   00000038   0xEB02 0x2101      ADD      R1,R2,R1, LSL #+8
   \   0000003C   0xB289             UXTH     R1,R1
   1141              /***********************************************
   1142              * 描述： 长沙南车DTU协议处理
   1143              */
   1144              if ( ( pch->RxFrameHead == head ) &&
   1145                   ( pch->RxFrameTail == tail ) ) {
   \   0000003E   0xF204 0x374A      ADDW     R7,R4,#+842
   \   00000042   0x883A             LDRH     R2,[R7, #+0]
   \   00000044   0x4282             CMP      R2,R0
   \   00000046   0xD109             BNE.N    ??APP_MaterCommHandler_1
   \   00000048   0x887A             LDRH     R2,[R7, #+2]
   \   0000004A   0x428A             CMP      R2,R1
   \   0000004C   0xD106             BNE.N    ??APP_MaterCommHandler_1
   1146                  DataBuf = &pch->RxFrameData[8];
   \   0000004E   0xF504 0x7513      ADD      R5,R4,#+588
   1147                  //Len     = Ctrl.Com.Rd.Head.DataLen;        
   1148                  head    = BUILD_INT16U(DataBuf[1], DataBuf[0]);
   \   00000052   0x7868             LDRB     R0,[R5, #+1]
   \   00000054   0x782A             LDRB     R2,[R5, #+0]
   \   00000056   0xEB00 0x2002      ADD      R0,R0,R2, LSL #+8
   \   0000005A   0xB280             UXTH     R0,R0
   1149              }
   1150              
   1151              /***********************************************
   1152              * 描述： 
   1153              序号    内容       字节数 内容说明
   1154              1       帧头       2      0xAA 0xAA
   1155              2       帧长度     1      0x08 帧长度固定为8字节
   1156              3       命令类型   2      0x00 0x01
   1157              4       预留       2      0x00 0x00
   1158              5       累加和     1      前7个字节的累加和
   1159              */ 
   1160              if ( 0xAAAA == head ) {
   \                     ??APP_MaterCommHandler_1: (+1)
   \   0000005C   0xF64A 0x22AA      MOVW     R2,#+43690
   \   00000060   0x4290             CMP      R0,R2
   \   00000062   0xD15A             BNE.N    ??APP_MaterCommHandler_2
   1161                  Len            -= 1;
   \   00000064   0x1E76             SUBS     R6,R6,#+1
   1162                  int8_t chkSum   = GetSumChk(DataBuf,Len);
   \   00000066   0x4631             MOV      R1,R6
   \   00000068   0xB289             UXTH     R1,R1
   \   0000006A   0x4628             MOV      R0,R5
   \   0000006C   0x.... 0x....      BL       GetSumChk
   1163                  
   1164                  if ( chkSum ==  DataBuf[Len] ) {
   \   00000070   0xB240             SXTB     R0,R0
   \   00000072   0x5D71             LDRB     R1,[R6, R5]
   \   00000074   0x4288             CMP      R0,R1
   \   00000076   0xF040 0x846C      BNE.W    ??APP_MaterCommHandler_3
   1165                      pch->TxFrameData[0]     = 0xAA;
   \   0000007A   0x20AA             MOVS     R0,#+170
   \   0000007C   0x7138             STRB     R0,[R7, #+4]
   1166                      pch->TxFrameData[1]     = 0xAA;
   \   0000007E   0x7178             STRB     R0,[R7, #+5]
   1167                      pch->TxFrameData[2]     = 0x30;
   \   00000080   0x2030             MOVS     R0,#+48
   \   00000082   0x71B8             STRB     R0,[R7, #+6]
   1168                      pch->TxFrameData[3]     = 0x00;
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0x71F8             STRB     R0,[R7, #+7]
   1169                      pch->TxFrameData[4]     = 0x71;
   \   00000088   0x2071             MOVS     R0,#+113
   \   0000008A   0x7238             STRB     R0,[R7, #+8]
   1170                      
   1171                      CPU_SR  cpu_sr;
   1172                      OS_CRITICAL_ENTER();
   \   0000008C   0x.... 0x....      BL       CPU_SR_Save
   \   00000090   0x4605             MOV      R5,R0
   \   00000092   0x.... 0x....      BL       CPU_IntDisMeasStart
   \   00000096   0x.... 0x....      LDR.W    R6,??DataTable59_4
   \   0000009A   0x7830             LDRB     R0,[R6, #+0]
   \   0000009C   0x1C40             ADDS     R0,R0,#+1
   \   0000009E   0x7030             STRB     R0,[R6, #+0]
   \   000000A0   0x.... 0x....      BL       CPU_IntDisMeasStop
   \   000000A4   0x4628             MOV      R0,R5
   \   000000A6   0x.... 0x....      BL       CPU_SR_Restore
   1173                      memcpy(&pch->TxFrameData[5],(uint8_t *)&Mater.Energy, sizeof(StrEnergy));
   \   000000AA   0x2228             MOVS     R2,#+40
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable59_5
   \   000000B0   0xF204 0x3053      ADDW     R0,R4,#+851
   \   000000B4   0x.... 0x....      BL       __aeabi_memcpy
   1174                      OS_CRITICAL_EXIT();
   \   000000B8   0x.... 0x....      BL       CPU_SR_Save
   \   000000BC   0x4605             MOV      R5,R0
   \   000000BE   0x.... 0x....      BL       CPU_IntDisMeasStart
   \   000000C2   0x7830             LDRB     R0,[R6, #+0]
   \   000000C4   0x1E40             SUBS     R0,R0,#+1
   \   000000C6   0x7030             STRB     R0,[R6, #+0]
   \   000000C8   0xB2C0             UXTB     R0,R0
   \   000000CA   0x2800             CMP      R0,#+0
   \   000000CC   0xD10C             BNE.N    ??APP_MaterCommHandler_4
   \   000000CE   0x.... 0x....      LDR.W    R0,??DataTable59_6
   \   000000D2   0x8800             LDRH     R0,[R0, #+0]
   \   000000D4   0x2800             CMP      R0,#+0
   \   000000D6   0xD007             BEQ.N    ??APP_MaterCommHandler_4
   \   000000D8   0x.... 0x....      BL       CPU_IntDisMeasStop
   \   000000DC   0x4628             MOV      R0,R5
   \   000000DE   0x.... 0x....      BL       CPU_SR_Restore
   \   000000E2   0x.... 0x....      BL       OS_Sched0
   \   000000E6   0xE004             B.N      ??APP_MaterCommHandler_5
   \                     ??APP_MaterCommHandler_4: (+1)
   \   000000E8   0x.... 0x....      BL       CPU_IntDisMeasStop
   \   000000EC   0x4628             MOV      R0,R5
   \   000000EE   0x.... 0x....      BL       CPU_SR_Restore
   1175                      
   1176                      pch->TxFrameData[45]    = 0x00;
   \                     ??APP_MaterCommHandler_5: (+1)
   \   000000F2   0xF204 0x357B      ADDW     R5,R4,#+891
   \   000000F6   0x2000             MOVS     R0,#+0
   \   000000F8   0x7028             STRB     R0,[R5, #+0]
   1177                      pch->TxFrameData[46]    = 0x00;
   \   000000FA   0x7068             STRB     R0,[R5, #+1]
   1178                      
   1179                      pch->TxFrameData[47]    = GetSumChk(pch->TxFrameData,47);
   \   000000FC   0xF204 0x364E      ADDW     R6,R4,#+846
   \   00000100   0x212F             MOVS     R1,#+47
   \   00000102   0x4630             MOV      R0,R6
   \   00000104   0x.... 0x....      BL       GetSumChk
   \   00000108   0x70A8             STRB     R0,[R5, #+2]
   1180                      
   1181                      NMB_Tx((MODBUS_CH   *)pch,
   1182                             (CPU_INT08U  *)pch->TxFrameData,
   1183                             (CPU_INT16U   )48);
   \   0000010A   0x2230             MOVS     R2,#+48
   \   0000010C   0x4631             MOV      R1,R6
   \   0000010E   0x4620             MOV      R0,R4
   \   00000110   0x.... 0x....      BL       NMB_Tx
   1184                      return TRUE;
   \   00000114   0x2001             MOVS     R0,#+1
   \   00000116   0xF000 0xBC1D      B.W      ??APP_MaterCommHandler_6
   1185                  }
   1186              /***********************************************
   1187              * 描述： 调试参数
   1188              */
   1189              } else if ( ( 0xAA55 == head ) && ( Len > 10 )) {
   \                     ??APP_MaterCommHandler_2: (+1)
   \   0000011A   0xF64A 0x2255      MOVW     R2,#+43605
   \   0000011E   0x4290             CMP      R0,R2
   \   00000120   0xF040 0x8417      BNE.W    ??APP_MaterCommHandler_3
   \   00000124   0x2E0B             CMP      R6,#+11
   \   00000126   0xF0C0 0x8414      BCC.W    ??APP_MaterCommHandler_3
   1190                  /***********************************************
   1191                  * 描述： 检测是否有帧尾，没有帧尾则进行CRC校验
   1192                  */
   1193                  if ( tail != 0x55AA  ) {
   \   0000012A   0xF245 0x50AA      MOVW     R0,#+21930
   \   0000012E   0x4281             CMP      R1,R0
   \   00000130   0xD00B             BEQ.N    ??APP_MaterCommHandler_7
   1194                      uint16_t crc16_Cal = GetCrc16Chk1((uint8_t *)&DataBuf[0],9);
   \   00000132   0x2109             MOVS     R1,#+9
   \   00000134   0x4628             MOV      R0,R5
   \   00000136   0x.... 0x....      BL       GetCrc16Chk1
   1195                      uint16_t crc16_Rec = BUILD_INT16U(DataBuf[9],DataBuf[10]);
   1196                      if(crc16_Cal != crc16_Rec) {                
   \   0000013A   0x7A69             LDRB     R1,[R5, #+9]
   \   0000013C   0x7AAA             LDRB     R2,[R5, #+10]
   \   0000013E   0xEB01 0x2102      ADD      R1,R1,R2, LSL #+8
   \   00000142   0xB289             UXTH     R1,R1
   \   00000144   0x4288             CMP      R0,R1
   \   00000146   0xF040 0x8404      BNE.W    ??APP_MaterCommHandler_3
   1197                          return TRUE;
   1198                      }
   1199                  }
   1200                  switch(DataBuf[2])
   \                     ??APP_MaterCommHandler_7: (+1)
   \   0000014A   0x78A8             LDRB     R0,[R5, #+2]
   \   0000014C   0x2800             CMP      R0,#+0
   \   0000014E   0xF000 0x83B5      BEQ.W    ??APP_MaterCommHandler_8
   \   00000152   0x2801             CMP      R0,#+1
   \   00000154   0xF000 0x83EB      BEQ.W    ??APP_MaterCommHandler_9
   \   00000158   0x2850             CMP      R0,#+80
   \   0000015A   0xF000 0x8122      BEQ.W    ??APP_MaterCommHandler_10
   \   0000015E   0x2851             CMP      R0,#+81
   \   00000160   0xF000 0x8145      BEQ.W    ??APP_MaterCommHandler_11
   \   00000164   0x2852             CMP      R0,#+82
   \   00000166   0xF000 0x814E      BEQ.W    ??APP_MaterCommHandler_12
   \   0000016A   0x2853             CMP      R0,#+83
   \   0000016C   0xF000 0x8170      BEQ.W    ??APP_MaterCommHandler_13
   \   00000170   0x2854             CMP      R0,#+84
   \   00000172   0xF000 0x8182      BEQ.W    ??APP_MaterCommHandler_14
   \   00000176   0x2855             CMP      R0,#+85
   \   00000178   0xF000 0x81C1      BEQ.W    ??APP_MaterCommHandler_15
   \   0000017C   0x2856             CMP      R0,#+86
   \   0000017E   0xF000 0x81D3      BEQ.W    ??APP_MaterCommHandler_16
   \   00000182   0x2857             CMP      R0,#+87
   \   00000184   0xF000 0x81FD      BEQ.W    ??APP_MaterCommHandler_17
   \   00000188   0x2858             CMP      R0,#+88
   \   0000018A   0xF000 0x82CC      BEQ.W    ??APP_MaterCommHandler_18
   \   0000018E   0x285E             CMP      R0,#+94
   \   00000190   0xF000 0x80C7      BEQ.W    ??APP_MaterCommHandler_19
   \   00000194   0x285F             CMP      R0,#+95
   \   00000196   0xF000 0x80E4      BEQ.W    ??APP_MaterCommHandler_20
   \   0000019A   0x28A1             CMP      R0,#+161
   \   0000019C   0xD016             BEQ.N    ??APP_MaterCommHandler_21
   \   0000019E   0x28A2             CMP      R0,#+162
   \   000001A0   0xD030             BEQ.N    ??APP_MaterCommHandler_22
   \   000001A2   0x28A3             CMP      R0,#+163
   \   000001A4   0xD057             BEQ.N    ??APP_MaterCommHandler_23
   \   000001A6   0x28AB             CMP      R0,#+171
   \   000001A8   0xF000 0x8080      BEQ.W    ??APP_MaterCommHandler_24
   \   000001AC   0x28AC             CMP      R0,#+172
   \   000001AE   0xF000 0x8088      BEQ.W    ??APP_MaterCommHandler_25
   \   000001B2   0x28AD             CMP      R0,#+173
   \   000001B4   0xF000 0x8091      BEQ.W    ??APP_MaterCommHandler_26
   \   000001B8   0x28AE             CMP      R0,#+174
   \   000001BA   0xF000 0x809A      BEQ.W    ??APP_MaterCommHandler_27
   \   000001BE   0x28AF             CMP      R0,#+175
   \   000001C0   0xF000 0x80A3      BEQ.W    ??APP_MaterCommHandler_28
   \   000001C4   0x28F0             CMP      R0,#+240
   \   000001C6   0xF000 0x83C2      BEQ.W    ??APP_MaterCommHandler_29
   \   000001CA   0xE3C2             B.N      ??APP_MaterCommHandler_3
   1201                  {
   1202                  /***********************************************
   1203                  * 描述： 设置序列号
   1204                  */
   1205                  case 0xA1:
   1206                      ID = BUILD_INT32U(DataBuf[3], DataBuf[4], DataBuf[5], DataBuf[6]);
   \                     ??APP_MaterCommHandler_21: (+1)
   \   000001CC   0x78E8             LDRB     R0,[R5, #+3]
   \   000001CE   0x7929             LDRB     R1,[R5, #+4]
   \   000001D0   0xEB00 0x2001      ADD      R0,R0,R1, LSL #+8
   \   000001D4   0x7969             LDRB     R1,[R5, #+5]
   \   000001D6   0xEB00 0x4001      ADD      R0,R0,R1, LSL #+16
   \   000001DA   0x79A9             LDRB     R1,[R5, #+6]
   \   000001DC   0xEB00 0x6001      ADD      R0,R0,R1, LSL #+24
   \   000001E0   0x9005             STR      R0,[SP, #+20]
   1207                      WriteFM24CL64(64 , (uint8_t *)&ID , 4);
   \   000001E2   0x2204             MOVS     R2,#+4
   \   000001E4   0xA905             ADD      R1,SP,#+20
   \   000001E6   0x2040             MOVS     R0,#+64
   \   000001E8   0x.... 0x....      BL       WriteFM24CL64
   1208                      ReadFM24CL64(64 , (uint8_t *)&ID , 4);
   \   000001EC   0x2204             MOVS     R2,#+4
   \   000001EE   0xA905             ADD      R1,SP,#+20
   \   000001F0   0x2040             MOVS     R0,#+64
   \   000001F2   0x.... 0x....      BL       ReadFM24CL64
   1209                      uartprintf(pch,"\r\n本装置ID设置为：%d\r\n" , ID);
   \   000001F6   0x9A05             LDR      R2,[SP, #+20]
   \   000001F8   0x.... 0x....      ADR.W    R1,?_23
   \   000001FC   0x4620             MOV      R0,R4
   \   000001FE   0x.... 0x....      BL       uartprintf
   1210                      break;            
   \   00000202   0xE3A6             B.N      ??APP_MaterCommHandler_3
   1211                  /***********************************************
   1212                  * 描述： 设置机车型号/机车号
   1213                  */
   1214                  case 0xA2:	
   1215                      Mater.LocoTyp   = BUILD_INT16U(DataBuf[3],DataBuf[4]);
   \                     ??APP_MaterCommHandler_22: (+1)
   \   00000204   0x.... 0x....      LDR.W    R7,??DataTable59_7
   \   00000208   0x1CBE             ADDS     R6,R7,#+2
   \   0000020A   0x78E8             LDRB     R0,[R5, #+3]
   \   0000020C   0x7929             LDRB     R1,[R5, #+4]
   \   0000020E   0xEB00 0x2001      ADD      R0,R0,R1, LSL #+8
   \   00000212   0x8030             STRH     R0,[R6, #+0]
   1216                      Mater.LocoNbr   = BUILD_INT16U(DataBuf[5],DataBuf[6]);
   \   00000214   0x7968             LDRB     R0,[R5, #+5]
   \   00000216   0x79A9             LDRB     R1,[R5, #+6]
   \   00000218   0xEB00 0x2001      ADD      R0,R0,R1, LSL #+8
   \   0000021C   0x8070             STRH     R0,[R6, #+2]
   1217                      WriteFM24CL64(68 , (uint8_t *)&Mater.LocoTyp, 2);
   \   0000021E   0x2202             MOVS     R2,#+2
   \   00000220   0x4631             MOV      R1,R6
   \   00000222   0x2044             MOVS     R0,#+68
   \   00000224   0x.... 0x....      BL       WriteFM24CL64
   1218                      WriteFM24CL64(70 , (uint8_t *)&Mater.LocoNbr, 2);
   \   00000228   0x2202             MOVS     R2,#+2
   \   0000022A   0x1D39             ADDS     R1,R7,#+4
   \   0000022C   0x2046             MOVS     R0,#+70
   \   0000022E   0x.... 0x....      BL       WriteFM24CL64
   1219                      ReadFM24CL64(68 ,  (uint8_t *)&Mater.LocoTyp, 2);
   \   00000232   0x2202             MOVS     R2,#+2
   \   00000234   0x4631             MOV      R1,R6
   \   00000236   0x2044             MOVS     R0,#+68
   \   00000238   0x.... 0x....      BL       ReadFM24CL64
   1220                      ReadFM24CL64(70 ,  (uint8_t *)&Mater.LocoNbr, 2);
   \   0000023C   0x2202             MOVS     R2,#+2
   \   0000023E   0x1D39             ADDS     R1,R7,#+4
   \   00000240   0x2046             MOVS     R0,#+70
   \   00000242   0x.... 0x....      BL       ReadFM24CL64
   1221                      uartprintf(pch,"\r\n当前车型：%d；当前车号：%d\r\n", Mater.LocoTyp,Mater.LocoNbr);
   \   00000246   0x8873             LDRH     R3,[R6, #+2]
   \   00000248   0x8832             LDRH     R2,[R6, #+0]
   \   0000024A   0x.... 0x....      ADR.W    R1,?_24
   \   0000024E   0x4620             MOV      R0,R4
   \   00000250   0x.... 0x....      BL       uartprintf
   1222                      break; 
   \   00000254   0xE37D             B.N      ??APP_MaterCommHandler_3
   1223                  /***********************************************
   1224                  * 描述： 设置时间
   1225                  */
   1226                  case 0xA3:
   1227                      system.Year     =DataBuf[3];
   \                     ??APP_MaterCommHandler_23: (+1)
   \   00000256   0x78E8             LDRB     R0,[R5, #+3]
   \   00000258   0xF88D 0x0000      STRB     R0,[SP, #+0]
   1228                      system.Month    =DataBuf[4];
   \   0000025C   0x7928             LDRB     R0,[R5, #+4]
   \   0000025E   0xF88D 0x0001      STRB     R0,[SP, #+1]
   1229                      system.Day      =DataBuf[5];
   \   00000262   0x7968             LDRB     R0,[R5, #+5]
   \   00000264   0xF88D 0x0002      STRB     R0,[SP, #+2]
   1230                      system.Hour     =DataBuf[6];
   \   00000268   0x79A8             LDRB     R0,[R5, #+6]
   \   0000026A   0xF88D 0x0003      STRB     R0,[SP, #+3]
   1231                      system.Min      =DataBuf[7];
   \   0000026E   0x79E8             LDRB     R0,[R5, #+7]
   \   00000270   0xF88D 0x0004      STRB     R0,[SP, #+4]
   1232                      system.Sec      =DataBuf[8];
   \   00000274   0x7A28             LDRB     R0,[R5, #+8]
   \   00000276   0xF88D 0x0005      STRB     R0,[SP, #+5]
   1233                      WriteTime(system);
   \   0000027A   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \   0000027E   0x.... 0x....      BL       WriteTime
   1234                      GetTime((TIME *)&recordsfr.Time[0]);
   \   00000282   0x.... 0x....      LDR.W    R5,??DataTable59_8
   \   00000286   0x4628             MOV      R0,R5
   \   00000288   0x.... 0x....      BL       GetTime
   1235                      uartprintf(pch,"\r\n当前时间为：20%02d-%02d-%02d  %02d:%02d:%02d", 
   1236                                 recordsfr.Time[0], recordsfr.Time[1], recordsfr.Time[2],
   1237                                 recordsfr.Time[3], recordsfr.Time[4], recordsfr.Time[5]);
   \   0000028C   0x7968             LDRB     R0,[R5, #+5]
   \   0000028E   0x9003             STR      R0,[SP, #+12]
   \   00000290   0x7928             LDRB     R0,[R5, #+4]
   \   00000292   0x9002             STR      R0,[SP, #+8]
   \   00000294   0x78E8             LDRB     R0,[R5, #+3]
   \   00000296   0x9001             STR      R0,[SP, #+4]
   \   00000298   0x78A8             LDRB     R0,[R5, #+2]
   \   0000029A   0x9000             STR      R0,[SP, #+0]
   \   0000029C   0x786B             LDRB     R3,[R5, #+1]
   \   0000029E   0x782A             LDRB     R2,[R5, #+0]
   \   000002A0   0x.... 0x....      ADR.W    R1,?_25
   \   000002A4   0x4620             MOV      R0,R4
   \   000002A6   0x.... 0x....      BL       uartprintf
   1238                      break;
   \   000002AA   0xE352             B.N      ??APP_MaterCommHandler_3
   1239                  // 交流电表校准顺序
   1240                  /***********************************************
   1241                  * 描述： 1、电压直流零点校准
   1242                  */
   1243          //        case 0xA4:
   1244          //            CS5463_AC_Adjust(pch,VDCOFFC);												
   1245          //            break;
   1246          //        /***********************************************
   1247          //        * 描述： 2、电流直流零点校准
   1248          //        */
   1249          //        case 0xA5:
   1250          //            CS5463_AC_Adjust(pch,IDCOFFC);										
   1251          //            break;
   1252          //        /***********************************************
   1253          //        * 描述： 4、电压交流零点校准
   1254          //        */
   1255          //        case 0xA6:
   1256          //            CS5463_AC_Adjust(pch,VACOFFC);												
   1257          //            break;
   1258          //        /***********************************************
   1259          //        * 描述： 5、电流交流零点校准
   1260          //        */
   1261          //        case 0xA7:
   1262          //            CS5463_AC_Adjust(pch,IACOFFC);											
   1263          //            break;
   1264          //        /***********************************************
   1265          //        * 描述： 3、电压直流增益校准（交流表不校准）
   1266          //        */
   1267          //        case 0xA8:
   1268          //            CS5463_AC_Adjust(pch,VACGAINC);									
   1269          //            break;
   1270          //        /***********************************************
   1271          //        * 描述： 3、电流直流增益校准（直流表不校准）
   1272          //        */
   1273          //        case 0xA9:
   1274          //            CS5463_AC_Adjust(pch,IACGAINC);									
   1275          //            break;            
   1276                  /***********************************************
   1277                  * 描述： 清除所有数据
   1278                  */
   1279                  case 0xAB:
   1280                      WriteFM24CL64(32, clear_buf, 24);
   \                     ??APP_MaterCommHandler_24: (+1)
   \   000002AC   0x2218             MOVS     R2,#+24
   \   000002AE   0xA907             ADD      R1,SP,#+28
   \   000002B0   0x2020             MOVS     R0,#+32
   \   000002B2   0x.... 0x....      BL       WriteFM24CL64
   1281                      uartprintf(pch,"\r\n调试数据已清除\n");
   \   000002B6   0x.... 0x....      ADR.W    R1,?_26
   \   000002BA   0x4620             MOV      R0,R4
   \   000002BC   0x.... 0x....      BL       uartprintf
   1282                      break;
   \   000002C0   0xE347             B.N      ??APP_MaterCommHandler_3
   1283                  /***********************************************
   1284                  * 描述： 正有功清零
   1285                  */
   1286                  case 0xAC:
   1287                      AC.PPpulse = 0;
   \                     ??APP_MaterCommHandler_25: (+1)
   \   000002C2   0x.... 0x....      LDR.W    R7,??DataTable59_9
   \   000002C6   0x2000             MOVS     R0,#+0
   \   000002C8   0x62B8             STR      R0,[R7, #+40]
   1288                      AC.PPpower_base = 0;
   \   000002CA   0x6338             STR      R0,[R7, #+48]
   1289                      AC.PPpower_temp = 0;
   \   000002CC   0x63B8             STR      R0,[R7, #+56]
   1290                      uartprintf(pch,"\r\n正有功电量已清零\n");
   \   000002CE   0x.... 0x....      ADR.W    R1,?_27
   \   000002D2   0x4620             MOV      R0,R4
   \   000002D4   0x.... 0x....      BL       uartprintf
   1291                      break;
   \   000002D8   0xE33B             B.N      ??APP_MaterCommHandler_3
   1292                  /***********************************************
   1293                  * 描述： 负有功清零
   1294                  */
   1295                  case 0xAD:
   1296                      AC.NPpulse = 0;
   \                     ??APP_MaterCommHandler_26: (+1)
   \   000002DA   0x.... 0x....      LDR.W    R7,??DataTable59_9
   \   000002DE   0x2000             MOVS     R0,#+0
   \   000002E0   0x62F8             STR      R0,[R7, #+44]
   1297                      AC.NPpower_base = 0;
   \   000002E2   0x6378             STR      R0,[R7, #+52]
   1298                      AC.NPpower_temp = 0;
   \   000002E4   0x63F8             STR      R0,[R7, #+60]
   1299                      uartprintf(pch,"\r\n负有功电量已清零\n");
   \   000002E6   0x.... 0x....      ADR.W    R1,?_28
   \   000002EA   0x4620             MOV      R0,R4
   \   000002EC   0x.... 0x....      BL       uartprintf
   1300                      break;
   \   000002F0   0xE32F             B.N      ??APP_MaterCommHandler_3
   1301                  /***********************************************
   1302                  * 描述： 正无功清零
   1303                  */
   1304                  case 0xAE:
   1305                      AC.PQpulse = 0;
   \                     ??APP_MaterCommHandler_27: (+1)
   \   000002F2   0x.... 0x....      LDR.W    R7,??DataTable59_9
   \   000002F6   0x2000             MOVS     R0,#+0
   \   000002F8   0x64B8             STR      R0,[R7, #+72]
   1306                      AC.PQpower_base = 0;
   \   000002FA   0x6538             STR      R0,[R7, #+80]
   1307                      AC.PQpower_temp = 0;
   \   000002FC   0x65B8             STR      R0,[R7, #+88]
   1308                      uartprintf(pch,"\r\n正无功电量已清零\n");
   \   000002FE   0x.... 0x....      ADR.W    R1,?_29
   \   00000302   0x4620             MOV      R0,R4
   \   00000304   0x.... 0x....      BL       uartprintf
   1309                      break;
   \   00000308   0xE323             B.N      ??APP_MaterCommHandler_3
   1310                  /***********************************************
   1311                  * 描述： 负无功清零
   1312                  */
   1313                  case 0xAF:
   1314                      AC.NQpulse = 0;
   \                     ??APP_MaterCommHandler_28: (+1)
   \   0000030A   0x.... 0x....      LDR.W    R7,??DataTable59_9
   \   0000030E   0x2000             MOVS     R0,#+0
   \   00000310   0x64F8             STR      R0,[R7, #+76]
   1315                      AC.NQpower_base = 0;
   \   00000312   0x6578             STR      R0,[R7, #+84]
   1316                      AC.NQpower_temp = 0;
   \   00000314   0x65F8             STR      R0,[R7, #+92]
   1317                      uartprintf(pch,"\r\n负无功电量已清零\n");
   \   00000316   0x.... 0x....      ADR.W    R1,?_30
   \   0000031A   0x4620             MOV      R0,R4
   \   0000031C   0x.... 0x....      BL       uartprintf
   1318                      break;            
   \   00000320   0xE317             B.N      ??APP_MaterCommHandler_3
   1319          //        case 0x5A:
   1320          //            CS5463_AC_Adjust(pch,P_rate_ADD);
   1321          //            break;
   1322          //        case 0x5B:
   1323          //            CS5463_AC_Adjust(pch,P_rate_SUB);
   1324          //            break;
   1325          //        case 0x5C:
   1326          //            CS5463_AC_Adjust(pch,P_rate_DEL);
   1327          //            break;
   1328          //        case 0x5d:
   1329          //            CS5463_AC_Adjust(pch,P_rate_SET);
   1330          //            break;
   1331                  /***********************************************
   1332                  * 描述： 设置原边电压
   1333                  */
   1334                  case 0x5E:
   1335                      AC.U_SCL = BUILD_INT32U(DataBuf[3], DataBuf[4], DataBuf[5], DataBuf[6]);
   \                     ??APP_MaterCommHandler_19: (+1)
   \   00000322   0x.... 0x....      LDR.W    R7,??DataTable59_9
   \   00000326   0x78E8             LDRB     R0,[R5, #+3]
   \   00000328   0x7929             LDRB     R1,[R5, #+4]
   \   0000032A   0xEB00 0x2001      ADD      R0,R0,R1, LSL #+8
   \   0000032E   0x7969             LDRB     R1,[R5, #+5]
   \   00000330   0xEB00 0x4001      ADD      R0,R0,R1, LSL #+16
   \   00000334   0x79A9             LDRB     R1,[R5, #+6]
   \   00000336   0xEB00 0x6001      ADD      R0,R0,R1, LSL #+24
   \   0000033A   0x60B8             STR      R0,[R7, #+8]
   1336                      WriteFM24CL64(88 , (uint8_t *)&AC.U_SCL , 4);
   \   0000033C   0x2204             MOVS     R2,#+4
   \   0000033E   0xF107 0x0108      ADD      R1,R7,#+8
   \   00000342   0x2058             MOVS     R0,#+88
   \   00000344   0x.... 0x....      BL       WriteFM24CL64
   1337                      ReadFM24CL64(88 , (uint8_t *)&AC.U_SCL , 4);
   \   00000348   0x2204             MOVS     R2,#+4
   \   0000034A   0xF107 0x0108      ADD      R1,R7,#+8
   \   0000034E   0x2058             MOVS     R0,#+88
   \   00000350   0x.... 0x....      BL       ReadFM24CL64
   1338                      uartprintf(pch,"\r\n原边额定电压设置为：%dV\r\n" , AC.U_SCL);
   \   00000354   0x68BA             LDR      R2,[R7, #+8]
   \   00000356   0x.... 0x....      ADR.W    R1,?_31
   \   0000035A   0x4620             MOV      R0,R4
   \   0000035C   0x.... 0x....      BL       uartprintf
   1339                      break;
   \   00000360   0xE2F7             B.N      ??APP_MaterCommHandler_3
   1340                  /***********************************************
   1341                  * 描述： 设置原边电流
   1342                  */
   1343                  case 0x5F:
   1344                      AC.I_SCL = BUILD_INT32U(DataBuf[3], DataBuf[4], DataBuf[5], DataBuf[6]);
   \                     ??APP_MaterCommHandler_20: (+1)
   \   00000362   0x.... 0x....      LDR.W    R7,??DataTable59_9
   \   00000366   0x78E8             LDRB     R0,[R5, #+3]
   \   00000368   0x7929             LDRB     R1,[R5, #+4]
   \   0000036A   0xEB00 0x2001      ADD      R0,R0,R1, LSL #+8
   \   0000036E   0x7969             LDRB     R1,[R5, #+5]
   \   00000370   0xEB00 0x4001      ADD      R0,R0,R1, LSL #+16
   \   00000374   0x79A9             LDRB     R1,[R5, #+6]
   \   00000376   0xEB00 0x6001      ADD      R0,R0,R1, LSL #+24
   \   0000037A   0x60F8             STR      R0,[R7, #+12]
   1345                      WriteFM24CL64(92 , (uint8_t *)&AC.I_SCL , 4);
   \   0000037C   0x2204             MOVS     R2,#+4
   \   0000037E   0xF107 0x010C      ADD      R1,R7,#+12
   \   00000382   0x205C             MOVS     R0,#+92
   \   00000384   0x.... 0x....      BL       WriteFM24CL64
   1346                      ReadFM24CL64(92 , (uint8_t *)&AC.I_SCL , 4);
   \   00000388   0x2204             MOVS     R2,#+4
   \   0000038A   0xF107 0x010C      ADD      R1,R7,#+12
   \   0000038E   0x205C             MOVS     R0,#+92
   \   00000390   0x.... 0x....      BL       ReadFM24CL64
   1347                      uartprintf(pch,"\r\n原边额定电流设置为：%dA\r\n" , AC.I_SCL);
   \   00000394   0x68FA             LDR      R2,[R7, #+12]
   \   00000396   0x.... 0x....      ADR.W    R1,?_32
   \   0000039A   0x4620             MOV      R0,R4
   \   0000039C   0x.... 0x....      BL       uartprintf
   1348                      break;
   \   000003A0   0xE2D7             B.N      ??APP_MaterCommHandler_3
   1349                  /***********************************************
   1350                  * 描述： 电压为零的阀值，当电压小于该值时电压设置为零
   1351                  */
   1352                  case 0x50:
   1353                      AC.U_O = BUILD_INT32U(DataBuf[3], DataBuf[4], DataBuf[5], DataBuf[6]);
   \                     ??APP_MaterCommHandler_10: (+1)
   \   000003A2   0x.... 0x....      LDR.W    R7,??DataTable59_9
   \   000003A6   0x78E8             LDRB     R0,[R5, #+3]
   \   000003A8   0x7929             LDRB     R1,[R5, #+4]
   \   000003AA   0xEB00 0x2001      ADD      R0,R0,R1, LSL #+8
   \   000003AE   0x7969             LDRB     R1,[R5, #+5]
   \   000003B0   0xEB00 0x4001      ADD      R0,R0,R1, LSL #+16
   \   000003B4   0x79A9             LDRB     R1,[R5, #+6]
   \   000003B6   0xEB00 0x6001      ADD      R0,R0,R1, LSL #+24
   \   000003BA   0x.... 0x....      BL       __aeabi_ui2f
   \   000003BE   0x6638             STR      R0,[R7, #+96]
   1354                      WriteFM24CL64(96 , (uint8_t *)&AC.U_O , 4);
   \   000003C0   0x2204             MOVS     R2,#+4
   \   000003C2   0xF107 0x0160      ADD      R1,R7,#+96
   \   000003C6   0x2060             MOVS     R0,#+96
   \   000003C8   0x.... 0x....      BL       WriteFM24CL64
   1355                      ReadFM24CL64(96 , (uint8_t *)&AC.U_O , 4);
   \   000003CC   0x2204             MOVS     R2,#+4
   \   000003CE   0xF107 0x0160      ADD      R1,R7,#+96
   \   000003D2   0x2060             MOVS     R0,#+96
   \   000003D4   0x.... 0x....      BL       ReadFM24CL64
   1356                      uartprintf(pch,"\r\n零压阀值设置为：%fV\r\n" , AC.U_O);
   \   000003D8   0x6E38             LDR      R0,[R7, #+96]
   \   000003DA   0x.... 0x....      BL       __aeabi_f2d
   \   000003DE   0x4602             MOV      R2,R0
   \   000003E0   0x460B             MOV      R3,R1
   \   000003E2   0x.... 0x....      ADR.W    R1,?_33
   \   000003E6   0x4620             MOV      R0,R4
   \   000003E8   0x.... 0x....      BL       uartprintf
   1357                      break;
   \   000003EC   0xE2B1             B.N      ??APP_MaterCommHandler_3
   1358                  /***********************************************
   1359                  * 描述： 读取ID
   1360                  */
   1361                  case 0x51:				
   1362                      ReadFM24CL64(64 , (uint8_t *)&ID , 4);
   \                     ??APP_MaterCommHandler_11: (+1)
   \   000003EE   0x2204             MOVS     R2,#+4
   \   000003F0   0xA905             ADD      R1,SP,#+20
   \   000003F2   0x2040             MOVS     R0,#+64
   \   000003F4   0x.... 0x....      BL       ReadFM24CL64
   1363                      uartprintf(pch,"\r\n本装置ID为：%d\r\n" , ID);
   \   000003F8   0x9A05             LDR      R2,[SP, #+20]
   \   000003FA   0x.... 0x....      ADR.W    R1,?_34
   \   000003FE   0x4620             MOV      R0,R4
   \   00000400   0x.... 0x....      BL       uartprintf
   1364                      break;
   \   00000404   0xE2A5             B.N      ??APP_MaterCommHandler_3
   1365                  /***********************************************
   1366                  * 描述： 
   1367                  */
   1368                  case 0x52:
   1369                      ReadFM24CL64(68 , (uint8_t *)&Mater.LocoTyp, 2);
   \                     ??APP_MaterCommHandler_12: (+1)
   \   00000406   0x.... 0x....      LDR.W    R7,??DataTable59_7
   \   0000040A   0x1CBE             ADDS     R6,R7,#+2
   \   0000040C   0x2202             MOVS     R2,#+2
   \   0000040E   0x4631             MOV      R1,R6
   \   00000410   0x2044             MOVS     R0,#+68
   \   00000412   0x.... 0x....      BL       ReadFM24CL64
   1370                      ReadFM24CL64(70 , (uint8_t *)&Mater.LocoNbr, 2);
   \   00000416   0x2202             MOVS     R2,#+2
   \   00000418   0x1D39             ADDS     R1,R7,#+4
   \   0000041A   0x2046             MOVS     R0,#+70
   \   0000041C   0x.... 0x....      BL       ReadFM24CL64
   1371                      if( ( Mater.LocoTyp > 0 ) &&
   1372                          ( Mater.LocoTyp < 10000 ) &&
   1373                          ( Mater.LocoNbr > 0 ) && 
   1374                          ( Mater.LocoNbr < 10000 ) ) {
   \   00000420   0x8832             LDRH     R2,[R6, #+0]
   \   00000422   0x2A00             CMP      R2,#+0
   \   00000424   0xD00E             BEQ.N    ??APP_MaterCommHandler_30
   \   00000426   0xF242 0x7010      MOVW     R0,#+10000
   \   0000042A   0x4282             CMP      R2,R0
   \   0000042C   0xDA0A             BGE.N    ??APP_MaterCommHandler_30
   \   0000042E   0x8873             LDRH     R3,[R6, #+2]
   \   00000430   0x2B00             CMP      R3,#+0
   \   00000432   0xD007             BEQ.N    ??APP_MaterCommHandler_30
   \   00000434   0x4283             CMP      R3,R0
   \   00000436   0xDA05             BGE.N    ??APP_MaterCommHandler_30
   1375                          uartprintf(pch,"\r\n当前车型：%d； 当前车号：%04d\r\n" , Mater.LocoTyp,Mater.LocoNbr);
   \   00000438   0x.... 0x....      ADR.W    R1,?_35
   \   0000043C   0x4620             MOV      R0,R4
   \   0000043E   0x.... 0x....      BL       uartprintf
   \   00000442   0xE286             B.N      ??APP_MaterCommHandler_3
   1376                      } else {
   1377                          uartprintf(pch,"\r\n未设置装车车型！\r\n");
   \                     ??APP_MaterCommHandler_30: (+1)
   \   00000444   0x.... 0x....      ADR.W    R1,?_36
   \   00000448   0x4620             MOV      R0,R4
   \   0000044A   0x.... 0x....      BL       uartprintf
   \   0000044E   0xE280             B.N      ??APP_MaterCommHandler_3
   1378                      }
   1379                      break;            
   1380                  /***********************************************
   1381                  * 描述： 读取时间
   1382                  */
   1383                  case 0x53:
   1384                      GetTime((TIME *)&recordsfr.Time[0]);
   \                     ??APP_MaterCommHandler_13: (+1)
   \   00000450   0x.... 0x....      LDR.W    R5,??DataTable59_8
   \   00000454   0x4628             MOV      R0,R5
   \   00000456   0x.... 0x....      BL       GetTime
   1385                      uartprintf(pch,"\r\n当前时间为：20%02d-%02d-%02d  %02d:%02d:%02d", 
   1386                                 recordsfr.Time[0], recordsfr.Time[1], recordsfr.Time[2],
   1387                                 recordsfr.Time[3], recordsfr.Time[4], recordsfr.Time[5]);				
   \   0000045A   0x7968             LDRB     R0,[R5, #+5]
   \   0000045C   0x9003             STR      R0,[SP, #+12]
   \   0000045E   0x7928             LDRB     R0,[R5, #+4]
   \   00000460   0x9002             STR      R0,[SP, #+8]
   \   00000462   0x78E8             LDRB     R0,[R5, #+3]
   \   00000464   0x9001             STR      R0,[SP, #+4]
   \   00000466   0x78A8             LDRB     R0,[R5, #+2]
   \   00000468   0x9000             STR      R0,[SP, #+0]
   \   0000046A   0x786B             LDRB     R3,[R5, #+1]
   \   0000046C   0x782A             LDRB     R2,[R5, #+0]
   \   0000046E   0x.... 0x....      ADR.W    R1,?_25
   \   00000472   0x4620             MOV      R0,R4
   \   00000474   0x.... 0x....      BL       uartprintf
   1388                      break;            
   \   00000478   0xE26B             B.N      ??APP_MaterCommHandler_3
   1389                  /***********************************************
   1390                  * 描述： 通过串口转储FLASH中的所有有效数据
   1391                  */
   1392                  case 0x54:
   1393                      GetTime((TIME *)&recordsfr.Time[0]);
   \                     ??APP_MaterCommHandler_14: (+1)
   \   0000047A   0x.... 0x....      LDR.W    R5,??DataTable59_8
   \   0000047E   0x4628             MOV      R0,R5
   \   00000480   0x.... 0x....      BL       GetTime
   1394                      uartprintf(pch,"\r\n当前时间为：20%02d-%02d-%02d  %02d:%02d:%02d", 
   1395                                 recordsfr.Time[0], recordsfr.Time[1], recordsfr.Time[2],
   1396                                 recordsfr.Time[3], recordsfr.Time[4], recordsfr.Time[5]);
   \   00000484   0x7968             LDRB     R0,[R5, #+5]
   \   00000486   0x9003             STR      R0,[SP, #+12]
   \   00000488   0x7928             LDRB     R0,[R5, #+4]
   \   0000048A   0x9002             STR      R0,[SP, #+8]
   \   0000048C   0x78E8             LDRB     R0,[R5, #+3]
   \   0000048E   0x9001             STR      R0,[SP, #+4]
   \   00000490   0x78A8             LDRB     R0,[R5, #+2]
   \   00000492   0x9000             STR      R0,[SP, #+0]
   \   00000494   0x786B             LDRB     R3,[R5, #+1]
   \   00000496   0x782A             LDRB     R2,[R5, #+0]
   \   00000498   0x.... 0x....      ADR.W    R1,?_25
   \   0000049C   0x4620             MOV      R0,R4
   \   0000049E   0x.... 0x....      BL       uartprintf
   1397                      
   1398                      ReadFM24CL64(68 , (uint8_t *)&Mater.LocoTyp, 2);
   \   000004A2   0x.... 0x....      LDR.W    R7,??DataTable59_7
   \   000004A6   0x1CBE             ADDS     R6,R7,#+2
   \   000004A8   0x2202             MOVS     R2,#+2
   \   000004AA   0x4631             MOV      R1,R6
   \   000004AC   0x2044             MOVS     R0,#+68
   \   000004AE   0x.... 0x....      BL       ReadFM24CL64
   1399                      ReadFM24CL64(70 , (uint8_t *)&Mater.LocoNbr, 2);
   \   000004B2   0x2202             MOVS     R2,#+2
   \   000004B4   0x1D39             ADDS     R1,R7,#+4
   \   000004B6   0x2046             MOVS     R0,#+70
   \   000004B8   0x.... 0x....      BL       ReadFM24CL64
   1400                      if( ( Mater.LocoTyp > 0 ) &&
   1401                          ( Mater.LocoTyp < 10000 ) &&
   1402                          ( Mater.LocoNbr > 0 ) && 
   1403                          ( Mater.LocoNbr < 10000 ) ) {
   \   000004BC   0x8832             LDRH     R2,[R6, #+0]
   \   000004BE   0x2A00             CMP      R2,#+0
   \   000004C0   0xD00E             BEQ.N    ??APP_MaterCommHandler_31
   \   000004C2   0xF242 0x7010      MOVW     R0,#+10000
   \   000004C6   0x4282             CMP      R2,R0
   \   000004C8   0xDA0A             BGE.N    ??APP_MaterCommHandler_31
   \   000004CA   0x8873             LDRH     R3,[R6, #+2]
   \   000004CC   0x2B00             CMP      R3,#+0
   \   000004CE   0xD007             BEQ.N    ??APP_MaterCommHandler_31
   \   000004D0   0x4283             CMP      R3,R0
   \   000004D2   0xDA05             BGE.N    ??APP_MaterCommHandler_31
   1404                          uartprintf(pch,"\r\n当前车型：%d； 当前车号：%04d\r\n" , Mater.LocoTyp,Mater.LocoNbr);
   \   000004D4   0x.... 0x....      ADR.W    R1,?_35
   \   000004D8   0x4620             MOV      R0,R4
   \   000004DA   0x.... 0x....      BL       uartprintf
   \   000004DE   0xE004             B.N      ??APP_MaterCommHandler_32
   1405                      } else {
   1406                          uartprintf(pch,"\r\n未设置装车车型！\r\n");
   \                     ??APP_MaterCommHandler_31: (+1)
   \   000004E0   0x.... 0x....      ADR.W    R1,?_36
   \   000004E4   0x4620             MOV      R0,R4
   \   000004E6   0x.... 0x....      BL       uartprintf
   1407                      }
   1408                      
   1409                      //DOWNLOAD(g_Flash_Adr/sizeof(Mater));
   1410                      if(g_Flash_Adr == 0)
   \                     ??APP_MaterCommHandler_32: (+1)
   \   000004EA   0x6A28             LDR      R0,[R5, #+32]
   \   000004EC   0x2800             CMP      R0,#+0
   \   000004EE   0xF040 0x8230      BNE.W    ??APP_MaterCommHandler_3
   1411                          uartprintf(pch,"\r\nFLASH芯片中无有效数据！\r\n");
   \   000004F2   0x.... 0x....      ADR.W    R1,?_37
   \   000004F6   0x4620             MOV      R0,R4
   \   000004F8   0x.... 0x....      BL       uartprintf
   \   000004FC   0xE229             B.N      ??APP_MaterCommHandler_3
   1412                      break;
   1413                      
   1414                  case 0x55:
   1415                      uartprintf(pch,"\r\nFLASH芯片擦除中............\r\n");
   \                     ??APP_MaterCommHandler_15: (+1)
   \   000004FE   0x.... 0x....      ADR.W    R1,?_38
   \   00000502   0x4620             MOV      R0,R4
   \   00000504   0x.... 0x....      BL       uartprintf
   1416                      uartprintf(pch,"\r\n大约需要30秒，请耐心等待！\r\n");
   \   00000508   0x.... 0x....      ADR.W    R1,?_39
   \   0000050C   0x4620             MOV      R0,R4
   \   0000050E   0x.... 0x....      BL       uartprintf
   1417                      MX25L3206_Erase(0, 4096);
   \   00000512   0xF44F 0x5180      MOV      R1,#+4096
   \   00000516   0x2000             MOVS     R0,#+0
   \   00000518   0x.... 0x....      BL       MX25L3206_Erase
   1418                      uartprintf(pch,"\r\nFLASH芯片已擦除\r\n");
   \   0000051C   0x.... 0x....      ADR.W    R1,?_40
   \   00000520   0x4620             MOV      R0,R4
   \   00000522   0x.... 0x....      BL       uartprintf
   1419                      break;
   \   00000526   0xE214             B.N      ??APP_MaterCommHandler_3
   1420                      
   1421                  case 0x56:
   1422                      uartprintf(pch,"\r\nFRAM芯片擦除中...\r\n");
   \                     ??APP_MaterCommHandler_16: (+1)
   \   00000528   0x.... 0x....      ADR.W    R1,?_41
   \   0000052C   0x4620             MOV      R0,R4
   \   0000052E   0x.... 0x....      BL       uartprintf
   1423                      WriteFM24CL64(60, fram_clr, 4);
   \   00000532   0x2204             MOVS     R2,#+4
   \   00000534   0xA906             ADD      R1,SP,#+24
   \   00000536   0x203C             MOVS     R0,#+60
   \   00000538   0x.... 0x....      BL       WriteFM24CL64
   1424                      g_Flash_Adr = 0;
   \   0000053C   0x2000             MOVS     R0,#+0
   \   0000053E   0x.... 0x....      LDR.W    R1,??DataTable59_8
   \   00000542   0x6208             STR      R0,[R1, #+32]
   1425                      Mater.Record.Head  = 0;
   \   00000544   0x.... 0x....      LDR.W    R7,??DataTable59_7
   \   00000548   0xF107 0x0580      ADD      R5,R7,#+128
   \   0000054C   0x6068             STR      R0,[R5, #+4]
   1426                      Mater.Record.Tail  = 0;
   \   0000054E   0x60A8             STR      R0,[R5, #+8]
   1427                      Mater.RecordNbr  = 0;
   \   00000550   0x1CB9             ADDS     R1,R7,#+2
   \   00000552   0x6048             STR      R0,[R1, #+4]
   1428                      WriteFM24CL64(72, (uint8_t *)&Mater.Record.Head, 4); 
   \   00000554   0x2204             MOVS     R2,#+4
   \   00000556   0xF107 0x0184      ADD      R1,R7,#+132
   \   0000055A   0x2048             MOVS     R0,#+72
   \   0000055C   0x.... 0x....      BL       WriteFM24CL64
   1429                      WriteFM24CL64(76, (uint8_t *)&Mater.Record.Tail, 4);
   \   00000560   0x2204             MOVS     R2,#+4
   \   00000562   0xF107 0x0188      ADD      R1,R7,#+136
   \   00000566   0x204C             MOVS     R0,#+76
   \   00000568   0x.... 0x....      BL       WriteFM24CL64
   1430                      WriteFM24CL64(80, (uint8_t *)&Mater.RecordNbr, 4);
   \   0000056C   0x2204             MOVS     R2,#+4
   \   0000056E   0x1DB9             ADDS     R1,R7,#+6
   \   00000570   0x2050             MOVS     R0,#+80
   \   00000572   0x.... 0x....      BL       WriteFM24CL64
   1431              
   1432                      uartprintf(pch,"\r\nFRAM芯片已擦除\r\n");
   \   00000576   0x.... 0x....      ADR.W    R1,?_42
   \   0000057A   0x4620             MOV      R0,R4
   \   0000057C   0x.... 0x....      BL       uartprintf
   1433                      break;
   \   00000580   0xE1E7             B.N      ??APP_MaterCommHandler_3
   1434                  case 0x57:{
   1435                      float x =(float)((pch->RxFrameData[4] >> 4) & 0x0f) * 1
   1436                              + (float)((pch->RxFrameData[4] >> 0) & 0x0f) * 0.1
   1437                              + (float)((pch->RxFrameData[5] >> 4) & 0x0f) * 0.01
   1438                              + (float)((pch->RxFrameData[5] >> 0) & 0x0f) * 0.001
   1439                              + (float)((pch->RxFrameData[6] >> 4) & 0x0f) * 0.0001
   1440                              + (float)((pch->RxFrameData[6] >> 0) & 0x0f) * 0.00001
   1441                              + (float)((pch->RxFrameData[7] >> 4) & 0x0f) * 0.000001
   1442                              + (float)((pch->RxFrameData[7] >> 0) & 0x0f) * 0.0000001
   1443                              + (float)((pch->RxFrameData[8] >> 4) & 0x0f) * 0.00000001
   1444                              + (float)((pch->RxFrameData[8] >> 0) & 0x0f) * 0.000000001;
   1445                      
   1446                      AC.U_K = x; 
   \                     ??APP_MaterCommHandler_17: (+1)
   \   00000582   0xF504 0x7012      ADD      R0,R4,#+584
   \   00000586   0x1D01             ADDS     R1,R0,#+4
   \   00000588   0x780D             LDRB     R5,[R1, #+0]
   \   0000058A   0xF890 0xA003      LDRB     R10,[R0, #+3]
   \   0000058E   0xF890 0x8002      LDRB     R8,[R0, #+2]
   \   00000592   0x7846             LDRB     R6,[R0, #+1]
   \   00000594   0xF890 0x9000      LDRB     R9,[R0, #+0]
   \   00000598   0x.... 0x....      LDR.W    R7,??DataTable59_9
   \   0000059C   0x4648             MOV      R0,R9
   \   0000059E   0x0900             LSRS     R0,R0,#+4
   \   000005A0   0x.... 0x....      BL       __aeabi_ui2f
   \   000005A4   0x.... 0x....      BL       __aeabi_f2d
   \   000005A8   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   000005AC   0xF009 0x000F      AND      R0,R9,#0xF
   \   000005B0   0x.... 0x....      BL       __aeabi_i2f
   \   000005B4   0x.... 0x....      BL       __aeabi_f2d
   \   000005B8   0x.... 0x....      LDR.W    R2,??DataTable59_10  ;; 0x9999999a
   \   000005BC   0x.... 0x....      LDR.W    R3,??DataTable59_11  ;; 0x3fb99999
   \   000005C0   0x.... 0x....      BL       __aeabi_dmul
   \   000005C4   0xE9DD 0x2300      LDRD     R2,R3,[SP, #+0]
   \   000005C8   0x.... 0x....      BL       __aeabi_dadd
   \   000005CC   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   000005D0   0x4630             MOV      R0,R6
   \   000005D2   0x0900             LSRS     R0,R0,#+4
   \   000005D4   0x.... 0x....      BL       __aeabi_ui2f
   \   000005D8   0x.... 0x....      BL       __aeabi_f2d
   \   000005DC   0x.... 0x....      LDR.W    R2,??DataTable59_12  ;; 0x47ae147b
   \   000005E0   0x.... 0x....      LDR.W    R3,??DataTable59_13  ;; 0x3f847ae1
   \   000005E4   0x.... 0x....      BL       __aeabi_dmul
   \   000005E8   0xE9DD 0x2300      LDRD     R2,R3,[SP, #+0]
   \   000005EC   0x.... 0x....      BL       __aeabi_dadd
   \   000005F0   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   000005F4   0xF006 0x000F      AND      R0,R6,#0xF
   \   000005F8   0x.... 0x....      BL       __aeabi_i2f
   \   000005FC   0x.... 0x....      BL       __aeabi_f2d
   \   00000600   0x4A7B             LDR.N    R2,??APP_MaterCommHandler_0  ;; 0xd2f1a9fc
   \   00000602   0x.... 0x....      LDR.W    R3,??DataTable59_14  ;; 0x3f50624d
   \   00000606   0x.... 0x....      BL       __aeabi_dmul
   \   0000060A   0xE9DD 0x2300      LDRD     R2,R3,[SP, #+0]
   \   0000060E   0x.... 0x....      BL       __aeabi_dadd
   \   00000612   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   00000616   0x4640             MOV      R0,R8
   \   00000618   0x0900             LSRS     R0,R0,#+4
   \   0000061A   0x.... 0x....      BL       __aeabi_ui2f
   \   0000061E   0x.... 0x....      BL       __aeabi_f2d
   \   00000622   0x.... 0x....      LDR.W    R2,??DataTable59_15  ;; 0xeb1c432d
   \   00000626   0x.... 0x....      LDR.W    R3,??DataTable59_16  ;; 0x3f1a36e2
   \   0000062A   0x.... 0x....      BL       __aeabi_dmul
   \   0000062E   0xE9DD 0x2300      LDRD     R2,R3,[SP, #+0]
   \   00000632   0x.... 0x....      BL       __aeabi_dadd
   \   00000636   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   0000063A   0xF008 0x000F      AND      R0,R8,#0xF
   \   0000063E   0x.... 0x....      BL       __aeabi_i2f
   \   00000642   0x.... 0x....      BL       __aeabi_f2d
   \   00000646   0x.... 0x....      LDR.W    R2,??DataTable59_17  ;; 0x88e368f1
   \   0000064A   0x.... 0x....      LDR.W    R3,??DataTable59_18  ;; 0x3ee4f8b5
   \   0000064E   0x.... 0x....      BL       __aeabi_dmul
   \   00000652   0x4602             MOV      R2,R0
   \   00000654   0x460B             MOV      R3,R1
   \   00000656   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \   0000065A   0x.... 0x....      BL       __aeabi_dadd
   \   0000065E   0x4680             MOV      R8,R0
   \   00000660   0x4689             MOV      R9,R1
   \   00000662   0x4650             MOV      R0,R10
   \   00000664   0x0900             LSRS     R0,R0,#+4
   \   00000666   0x.... 0x....      BL       __aeabi_ui2f
   \   0000066A   0x.... 0x....      BL       __aeabi_f2d
   \   0000066E   0x.... 0x....      LDR.W    R2,??DataTable59_19  ;; 0xa0b5ed8d
   \   00000672   0x.... 0x....      LDR.W    R3,??DataTable59_20  ;; 0x3eb0c6f7
   \   00000676   0x.... 0x....      BL       __aeabi_dmul
   \   0000067A   0x4602             MOV      R2,R0
   \   0000067C   0x460B             MOV      R3,R1
   \   0000067E   0x4640             MOV      R0,R8
   \   00000680   0x4649             MOV      R1,R9
   \   00000682   0x.... 0x....      BL       __aeabi_dadd
   \   00000686   0x4680             MOV      R8,R0
   \   00000688   0x4689             MOV      R9,R1
   \   0000068A   0xF00A 0x000F      AND      R0,R10,#0xF
   \   0000068E   0x.... 0x....      BL       __aeabi_i2f
   \   00000692   0x.... 0x....      BL       __aeabi_f2d
   \   00000696   0x.... 0x....      LDR.W    R2,??DataTable59_21  ;; 0x9abcaf48
   \   0000069A   0x.... 0x....      LDR.W    R3,??DataTable59_22  ;; 0x3e7ad7f2
   \   0000069E   0x.... 0x....      BL       __aeabi_dmul
   \   000006A2   0x4602             MOV      R2,R0
   \   000006A4   0x460B             MOV      R3,R1
   \   000006A6   0x4640             MOV      R0,R8
   \   000006A8   0x4649             MOV      R1,R9
   \   000006AA   0x.... 0x....      BL       __aeabi_dadd
   \   000006AE   0x4680             MOV      R8,R0
   \   000006B0   0x4689             MOV      R9,R1
   \   000006B2   0x4628             MOV      R0,R5
   \   000006B4   0x0900             LSRS     R0,R0,#+4
   \   000006B6   0x.... 0x....      BL       __aeabi_ui2f
   \   000006BA   0x.... 0x....      BL       __aeabi_f2d
   \   000006BE   0x.... 0x....      LDR.W    R2,??DataTable59_23  ;; 0xe2308c3a
   \   000006C2   0x.... 0x....      LDR.W    R3,??DataTable59_24  ;; 0x3e45798e
   \   000006C6   0x.... 0x....      BL       __aeabi_dmul
   \   000006CA   0x4602             MOV      R2,R0
   \   000006CC   0x460B             MOV      R3,R1
   \   000006CE   0x4640             MOV      R0,R8
   \   000006D0   0x4649             MOV      R1,R9
   \   000006D2   0x.... 0x....      BL       __aeabi_dadd
   \   000006D6   0x4680             MOV      R8,R0
   \   000006D8   0x4689             MOV      R9,R1
   \   000006DA   0xF005 0x000F      AND      R0,R5,#0xF
   \   000006DE   0x.... 0x....      BL       __aeabi_i2f
   \   000006E2   0x.... 0x....      BL       __aeabi_f2d
   \   000006E6   0x.... 0x....      LDR.W    R2,??DataTable59_25  ;; 0xe826d695
   \   000006EA   0x.... 0x....      LDR.W    R3,??DataTable59_26  ;; 0x3e112e0b
   \   000006EE   0x.... 0x....      BL       __aeabi_dmul
   \   000006F2   0x4602             MOV      R2,R0
   \   000006F4   0x460B             MOV      R3,R1
   \   000006F6   0x4640             MOV      R0,R8
   \   000006F8   0x4649             MOV      R1,R9
   \   000006FA   0x.... 0x....      BL       __aeabi_dadd
   \   000006FE   0x.... 0x....      BL       __aeabi_d2f
   \   00000702   0x6678             STR      R0,[R7, #+100]
   1447                      WriteFM24CL64(160, (uint8_t *)&AC.U_K, 4);
   \   00000704   0x2204             MOVS     R2,#+4
   \   00000706   0xF107 0x0164      ADD      R1,R7,#+100
   \   0000070A   0x20A0             MOVS     R0,#+160
   \   0000070C   0x.... 0x....      BL       WriteFM24CL64
   1448                      uartprintf(pch,"\r\n电压补偿斜率 = %f\n", AC.U_K);
   \   00000710   0x6E78             LDR      R0,[R7, #+100]
   \   00000712   0x.... 0x....      BL       __aeabi_f2d
   \   00000716   0x4602             MOV      R2,R0
   \   00000718   0x460B             MOV      R3,R1
   \   0000071A   0x.... 0x....      ADR.W    R1,?_43
   \   0000071E   0x4620             MOV      R0,R4
   \   00000720   0x.... 0x....      BL       uartprintf
   1449                      } break;
   \   00000724   0xE115             B.N      ??APP_MaterCommHandler_3
   1450                  case 0x58:{
   1451                      float x =(float)((pch->RxFrameData[4] >> 4) & 0x0f) * 1
   1452                              + (float)((pch->RxFrameData[4] >> 0) & 0x0f) * 0.1
   1453                              + (float)((pch->RxFrameData[5] >> 4) & 0x0f) * 0.01
   1454                              + (float)((pch->RxFrameData[5] >> 0) & 0x0f) * 0.001
   1455                              + (float)((pch->RxFrameData[6] >> 4) & 0x0f) * 0.0001
   1456                              + (float)((pch->RxFrameData[6] >> 0) & 0x0f) * 0.00001
   1457                              + (float)((pch->RxFrameData[7] >> 4) & 0x0f) * 0.000001
   1458                              + (float)((pch->RxFrameData[7] >> 0) & 0x0f) * 0.0000001
   1459                              + (float)((pch->RxFrameData[8] >> 4) & 0x0f) * 0.00000001
   1460                              + (float)((pch->RxFrameData[8] >> 0) & 0x0f) * 0.000000001;
   1461                      
   1462                      AC.I_K = x; 
   \                     ??APP_MaterCommHandler_18: (+1)
   \   00000726   0xF504 0x7012      ADD      R0,R4,#+584
   \   0000072A   0x1D01             ADDS     R1,R0,#+4
   \   0000072C   0x780D             LDRB     R5,[R1, #+0]
   \   0000072E   0xF890 0xA003      LDRB     R10,[R0, #+3]
   \   00000732   0xF890 0x8002      LDRB     R8,[R0, #+2]
   \   00000736   0x7846             LDRB     R6,[R0, #+1]
   \   00000738   0xF890 0x9000      LDRB     R9,[R0, #+0]
   \   0000073C   0x.... 0x....      LDR.W    R7,??DataTable59_9
   \   00000740   0x4648             MOV      R0,R9
   \   00000742   0x0900             LSRS     R0,R0,#+4
   \   00000744   0x.... 0x....      BL       __aeabi_ui2f
   \   00000748   0x.... 0x....      BL       __aeabi_f2d
   \   0000074C   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   00000750   0xF009 0x000F      AND      R0,R9,#0xF
   \   00000754   0x.... 0x....      BL       __aeabi_i2f
   \   00000758   0x.... 0x....      BL       __aeabi_f2d
   \   0000075C   0x.... 0x....      LDR.W    R2,??DataTable59_10  ;; 0x9999999a
   \   00000760   0x.... 0x....      LDR.W    R3,??DataTable59_11  ;; 0x3fb99999
   \   00000764   0x.... 0x....      BL       __aeabi_dmul
   \   00000768   0xE9DD 0x2300      LDRD     R2,R3,[SP, #+0]
   \   0000076C   0x.... 0x....      BL       __aeabi_dadd
   \   00000770   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   00000774   0x4630             MOV      R0,R6
   \   00000776   0x0900             LSRS     R0,R0,#+4
   \   00000778   0x.... 0x....      BL       __aeabi_ui2f
   \   0000077C   0x.... 0x....      BL       __aeabi_f2d
   \   00000780   0x.... 0x....      LDR.W    R2,??DataTable59_12  ;; 0x47ae147b
   \   00000784   0x.... 0x....      LDR.W    R3,??DataTable59_13  ;; 0x3f847ae1
   \   00000788   0x.... 0x....      BL       __aeabi_dmul
   \   0000078C   0xE9DD 0x2300      LDRD     R2,R3,[SP, #+0]
   \   00000790   0x.... 0x....      BL       __aeabi_dadd
   \   00000794   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   00000798   0xF006 0x000F      AND      R0,R6,#0xF
   \   0000079C   0x.... 0x....      BL       __aeabi_i2f
   \   000007A0   0x.... 0x....      BL       __aeabi_f2d
   \   000007A4   0x4A12             LDR.N    R2,??APP_MaterCommHandler_0  ;; 0xd2f1a9fc
   \   000007A6   0x.... 0x....      LDR.W    R3,??DataTable59_14  ;; 0x3f50624d
   \   000007AA   0x.... 0x....      BL       __aeabi_dmul
   \   000007AE   0xE9DD 0x2300      LDRD     R2,R3,[SP, #+0]
   \   000007B2   0x.... 0x....      BL       __aeabi_dadd
   \   000007B6   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   000007BA   0x4640             MOV      R0,R8
   \   000007BC   0x0900             LSRS     R0,R0,#+4
   \   000007BE   0x.... 0x....      BL       __aeabi_ui2f
   \   000007C2   0x.... 0x....      BL       __aeabi_f2d
   \   000007C6   0x.... 0x....      LDR.W    R2,??DataTable59_15  ;; 0xeb1c432d
   \   000007CA   0x.... 0x....      LDR.W    R3,??DataTable59_16  ;; 0x3f1a36e2
   \   000007CE   0x.... 0x....      BL       __aeabi_dmul
   \   000007D2   0xE9DD 0x2300      LDRD     R2,R3,[SP, #+0]
   \   000007D6   0x.... 0x....      BL       __aeabi_dadd
   \   000007DA   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   000007DE   0xF008 0x000F      AND      R0,R8,#0xF
   \   000007E2   0x.... 0x....      BL       __aeabi_i2f
   \   000007E6   0x.... 0x....      BL       __aeabi_f2d
   \   000007EA   0x....             LDR.N    R2,??DataTable59_17  ;; 0x88e368f1
   \   000007EC   0x....             LDR.N    R3,??DataTable59_18  ;; 0x3ee4f8b5
   \   000007EE   0xE001             B.N      ??APP_MaterCommHandler_33
   \                     ??APP_MaterCommHandler_0:
   \   000007F0   0xD2F1A9FC         DC32     0xd2f1a9fc
   \                     ??APP_MaterCommHandler_33: (+1)
   \   000007F4   0x.... 0x....      BL       __aeabi_dmul
   \   000007F8   0x4602             MOV      R2,R0
   \   000007FA   0x460B             MOV      R3,R1
   \   000007FC   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \   00000800   0x.... 0x....      BL       __aeabi_dadd
   \   00000804   0x4680             MOV      R8,R0
   \   00000806   0x4689             MOV      R9,R1
   \   00000808   0x4650             MOV      R0,R10
   \   0000080A   0x0900             LSRS     R0,R0,#+4
   \   0000080C   0x.... 0x....      BL       __aeabi_ui2f
   \   00000810   0x.... 0x....      BL       __aeabi_f2d
   \   00000814   0x....             LDR.N    R2,??DataTable59_19  ;; 0xa0b5ed8d
   \   00000816   0x....             LDR.N    R3,??DataTable59_20  ;; 0x3eb0c6f7
   \   00000818   0x.... 0x....      BL       __aeabi_dmul
   \   0000081C   0x4602             MOV      R2,R0
   \   0000081E   0x460B             MOV      R3,R1
   \   00000820   0x4640             MOV      R0,R8
   \   00000822   0x4649             MOV      R1,R9
   \   00000824   0x.... 0x....      BL       __aeabi_dadd
   \   00000828   0x4680             MOV      R8,R0
   \   0000082A   0x4689             MOV      R9,R1
   \   0000082C   0xF00A 0x000F      AND      R0,R10,#0xF
   \   00000830   0x.... 0x....      BL       __aeabi_i2f
   \   00000834   0x.... 0x....      BL       __aeabi_f2d
   \   00000838   0x....             LDR.N    R2,??DataTable59_21  ;; 0x9abcaf48
   \   0000083A   0x....             LDR.N    R3,??DataTable59_22  ;; 0x3e7ad7f2
   \   0000083C   0x.... 0x....      BL       __aeabi_dmul
   \   00000840   0x4602             MOV      R2,R0
   \   00000842   0x460B             MOV      R3,R1
   \   00000844   0x4640             MOV      R0,R8
   \   00000846   0x4649             MOV      R1,R9
   \   00000848   0x.... 0x....      BL       __aeabi_dadd
   \   0000084C   0x4680             MOV      R8,R0
   \   0000084E   0x4689             MOV      R9,R1
   \   00000850   0x4628             MOV      R0,R5
   \   00000852   0x0900             LSRS     R0,R0,#+4
   \   00000854   0x.... 0x....      BL       __aeabi_ui2f
   \   00000858   0x.... 0x....      BL       __aeabi_f2d
   \   0000085C   0x....             LDR.N    R2,??DataTable59_23  ;; 0xe2308c3a
   \   0000085E   0x....             LDR.N    R3,??DataTable59_24  ;; 0x3e45798e
   \   00000860   0x.... 0x....      BL       __aeabi_dmul
   \   00000864   0x4602             MOV      R2,R0
   \   00000866   0x460B             MOV      R3,R1
   \   00000868   0x4640             MOV      R0,R8
   \   0000086A   0x4649             MOV      R1,R9
   \   0000086C   0x.... 0x....      BL       __aeabi_dadd
   \   00000870   0x4680             MOV      R8,R0
   \   00000872   0x4689             MOV      R9,R1
   \   00000874   0xF005 0x000F      AND      R0,R5,#0xF
   \   00000878   0x.... 0x....      BL       __aeabi_i2f
   \   0000087C   0x.... 0x....      BL       __aeabi_f2d
   \   00000880   0x....             LDR.N    R2,??DataTable59_25  ;; 0xe826d695
   \   00000882   0x....             LDR.N    R3,??DataTable59_26  ;; 0x3e112e0b
   \   00000884   0x.... 0x....      BL       __aeabi_dmul
   \   00000888   0x4602             MOV      R2,R0
   \   0000088A   0x460B             MOV      R3,R1
   \   0000088C   0x4640             MOV      R0,R8
   \   0000088E   0x4649             MOV      R1,R9
   \   00000890   0x.... 0x....      BL       __aeabi_dadd
   \   00000894   0x.... 0x....      BL       __aeabi_d2f
   \   00000898   0x66B8             STR      R0,[R7, #+104]
   1463                      WriteFM24CL64(164, (uint8_t *)&AC.I_K, 4);
   \   0000089A   0x2204             MOVS     R2,#+4
   \   0000089C   0xF107 0x0168      ADD      R1,R7,#+104
   \   000008A0   0x20A4             MOVS     R0,#+164
   \   000008A2   0x.... 0x....      BL       WriteFM24CL64
   1464                      uartprintf(pch,"\r\n电流补偿斜率 = %f\n", AC.I_K);
   \   000008A6   0x6EB8             LDR      R0,[R7, #+104]
   \   000008A8   0x.... 0x....      BL       __aeabi_f2d
   \   000008AC   0x4602             MOV      R2,R0
   \   000008AE   0x460B             MOV      R3,R1
   \   000008B0   0x.... 0x....      ADR.W    R1,?_44
   \   000008B4   0x4620             MOV      R0,R4
   \   000008B6   0x.... 0x....      BL       uartprintf
   1465                      } break;
   \   000008BA   0xE04A             B.N      ??APP_MaterCommHandler_3
   1466                  case 0x00: 
   1467                      utemp   = BUILD_INT32U(DataBuf[3],DataBuf[4],DataBuf[5],DataBuf[6]); 
   \                     ??APP_MaterCommHandler_8: (+1)
   \   000008BC   0x78E8             LDRB     R0,[R5, #+3]
   \   000008BE   0x7929             LDRB     R1,[R5, #+4]
   \   000008C0   0xEB00 0x2001      ADD      R0,R0,R1, LSL #+8
   \   000008C4   0x7969             LDRB     R1,[R5, #+5]
   \   000008C6   0xEB00 0x4001      ADD      R0,R0,R1, LSL #+16
   \   000008CA   0x79A9             LDRB     R1,[R5, #+6]
   \   000008CC   0xEB00 0x6001      ADD      R0,R0,R1, LSL #+24
   \   000008D0   0x9004             STR      R0,[SP, #+16]
   1468                      if ( utemp < 10 )
   \   000008D2   0x....             LDR.N    R7,??DataTable59_7
   \   000008D4   0xF107 0x0580      ADD      R5,R7,#+128
   \   000008D8   0x280A             CMP      R0,#+10
   \   000008DA   0xD203             BCS.N    ??APP_MaterCommHandler_34
   1469                          Mater.Record.RecordTime    = OS_TICKS_PER_SEC * 60;
   \   000008DC   0xF64E 0x2060      MOVW     R0,#+60000
   \   000008E0   0x6028             STR      R0,[R5, #+0]
   \   000008E2   0xE00A             B.N      ??APP_MaterCommHandler_35
   1470                      else if ( utemp > 300 )
   \                     ??APP_MaterCommHandler_34: (+1)
   \   000008E4   0xF5B0 0x7F96      CMP      R0,#+300
   \   000008E8   0xD903             BLS.N    ??APP_MaterCommHandler_36
   1471                          Mater.Record.RecordTime    = OS_TICKS_PER_SEC * 60;
   \   000008EA   0xF64E 0x2060      MOVW     R0,#+60000
   \   000008EE   0x6028             STR      R0,[R5, #+0]
   \   000008F0   0xE003             B.N      ??APP_MaterCommHandler_35
   1472                      else
   1473                          Mater.Record.RecordTime    = OS_TICKS_PER_SEC * utemp;
   \                     ??APP_MaterCommHandler_36: (+1)
   \   000008F2   0xF44F 0x717A      MOV      R1,#+1000
   \   000008F6   0x4348             MULS     R0,R1,R0
   \   000008F8   0x6028             STR      R0,[R5, #+0]
   1474                      
   1475                      WriteFM24CL64(84, (uint8_t *)&Mater.Record.RecordTime, 4);
   \                     ??APP_MaterCommHandler_35: (+1)
   \   000008FA   0x2204             MOVS     R2,#+4
   \   000008FC   0x4629             MOV      R1,R5
   \   000008FE   0x2054             MOVS     R0,#+84
   \   00000900   0x.... 0x....      BL       WriteFM24CL64
   1476                      ReadFM24CL64(84 , (uint8_t *)&utemp, 4);
   \   00000904   0x2204             MOVS     R2,#+4
   \   00000906   0xA904             ADD      R1,SP,#+16
   \   00000908   0x2054             MOVS     R0,#+84
   \   0000090A   0x.... 0x....      BL       ReadFM24CL64
   1477                      osal_start_timerRl( OS_TASK_ID_TMR, OS_EVT_TMR_MIN ,Mater.Record.RecordTime);
   \   0000090E   0x682A             LDR      R2,[R5, #+0]
   \   00000910   0x2108             MOVS     R1,#+8
   \   00000912   0x2000             MOVS     R0,#+0
   \   00000914   0x.... 0x....      BL       osal_start_timerRl
   1478                      uartprintf(pch,"\r\n设置数据记录/发送间隔时间为：%d秒\r\n",utemp / OS_TICKS_PER_SEC);
   \   00000918   0x9804             LDR      R0,[SP, #+16]
   \   0000091A   0xF44F 0x717A      MOV      R1,#+1000
   \   0000091E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000922   0x.... 0x....      ADR.W    R1,?_45
   \   00000926   0x4620             MOV      R0,R4
   \   00000928   0x.... 0x....      BL       uartprintf
   1479                      break;
   \   0000092C   0xE011             B.N      ??APP_MaterCommHandler_3
   1480                  case 0x01:    
   1481                      ReadFM24CL64(84 , (uint8_t *)&utemp, 4);
   \                     ??APP_MaterCommHandler_9: (+1)
   \   0000092E   0x2204             MOVS     R2,#+4
   \   00000930   0xA904             ADD      R1,SP,#+16
   \   00000932   0x2054             MOVS     R0,#+84
   \   00000934   0x.... 0x....      BL       ReadFM24CL64
   1482                      uartprintf(pch,"\r\n当前数据记录/发送间隔时间为：%d秒\r\n",utemp / OS_TICKS_PER_SEC);
   \   00000938   0x9804             LDR      R0,[SP, #+16]
   \   0000093A   0xF44F 0x717A      MOV      R1,#+1000
   \   0000093E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000942   0x.... 0x....      ADR.W    R1,?_46
   \   00000946   0x4620             MOV      R0,R4
   \   00000948   0x.... 0x....      BL       uartprintf
   1483                      break;
   \   0000094C   0xE001             B.N      ??APP_MaterCommHandler_3
   1484                  case 0xf0:
   1485                      SystemReset();							    //系统重启
   \                     ??APP_MaterCommHandler_29: (+1)
   \   0000094E   0x.... 0x....      BL       BSP_RST_SystemRst
   1486                      break;
   1487                  default:
   1488                      break;
   1489                  }
   1490              }
   1491              /***********************************************
   1492              * 描述： 调用串口数据处理回调函数
   1493              */ 
   1494              return TRUE;
   \                     ??APP_MaterCommHandler_3: (+1)
   \   00000952   0x2001             MOVS     R0,#+1
   \                     ??APP_MaterCommHandler_6: (+1)
   \   00000954   0xB00E             ADD      SP,SP,#+56
   \   00000956   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   1495          }
   1496          
   1497          /*******************************************************************************
   1498           * 名    称： APP_CSNC_CommHandler
   1499           * 功    能： 串口数据处理函数
   1500           * 入口参数： 无
   1501           * 出口参数： 无
   1502           * 作　　者： wumingshen.
   1503           * 创建日期： 2015-03-28
   1504           * 修    改：
   1505           * 修改日期：
   1506           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1507          CPU_BOOLEAN APP_CSNC_CommHandler (MODBUS_CH  *pch)
   1508          {   
   \                     APP_CSNC_CommHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1509              if ( pch->PortNbr == Ctrl.Dtu.pch->PortNbr ) {
   \   00000002   0x....             LDR.N    R4,??DataTable59_27
   \   00000004   0x7A41             LDRB     R1,[R0, #+9]
   \   00000006   0xF8D4 0x2415      LDR      R2,[R4, #+1045]
   \   0000000A   0x7A52             LDRB     R2,[R2, #+9]
   \   0000000C   0x4291             CMP      R1,R2
   \   0000000E   0xD001             BEQ.N    ??APP_CSNC_CommHandler_0
   1510          //        if ( GetRecvFrameNbr() == Ctrl.Com.Rd.Head.PacketSn ) {
   1511          //            /***********************************************
   1512          //            * 描述： 清除定时上传标志
   1513          //            */
   1514          //            SetSendFrameNbr();
   1515          //            extern void UpdateRecordPoint(uint8_t storeflag);
   1516          //            UpdateRecordPoint(1);
   1517          //            pch->StatNoRespCtr  = 0;
   1518          //            
   1519          //            osal_set_event( OS_TASK_ID_TMR, OS_EVT_TMR_MIN);
   1520          //        }
   1521              } else {
   1522                  /***********************************************
   1523                  * 描述： 将数据打包给发送结构
   1524                  */ 
   1525                  APP_MaterCommHandler(pch);
   \   00000010   0x.... 0x....      BL       APP_MaterCommHandler
   1526              }
   1527              
   1528              /***********************************************
   1529              * 描述： 串口接受COMM模组的消息并处理
   1530              */
   1531              Ctrl.Com.ConnectTimeOut    = 0;                // 超时计数器清零
   1532              Ctrl.Com.ConnectFlag       = TRUE;             // 转连接成功标志
   \                     ??APP_CSNC_CommHandler_0: (+1)
   \   00000014   0x2080             MOVS     R0,#+128
   \   00000016   0xF884 0x0209      STRB     R0,[R4, #+521]
   1533              
   1534              return TRUE;
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return
   1535          }
   1536          #endif
   1537          

   \                                 In section .text, align 2, keep-with-next
   1538          void SavePowerData(void)
   1539          {
   \                     SavePowerData: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1540              /***********************************************
   1541              * 描述： 保存正有功电量数据到FRAM
   1542              *       正有功电量    1kvarh      99999999 kvarh
   1543              */
   1544              if ( recordsfr.PPpower_NUM != AC.PPpower_NUM ) {	
   \   00000002   0x....             LDR.N    R4,??DataTable59_9
   \   00000004   0x....             LDR.N    R5,??DataTable59_8
   \   00000006   0x68A8             LDR      R0,[R5, #+8]
   \   00000008   0x6A21             LDR      R1,[R4, #+32]
   \   0000000A   0x4288             CMP      R0,R1
   \   0000000C   0xD011             BEQ.N    ??SavePowerData_0
   1545                  WriteFM24CL64(0, (uint8_t *)&AC.PPpower_NUM,4);
   \   0000000E   0x2204             MOVS     R2,#+4
   \   00000010   0xF104 0x0120      ADD      R1,R4,#+32
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      BL       WriteFM24CL64
   1546                  WriteFM24CL64(4, (uint8_t *)&AC.PPpower_NUM,4);
   \   0000001A   0x2204             MOVS     R2,#+4
   \   0000001C   0xF104 0x0120      ADD      R1,R4,#+32
   \   00000020   0x4610             MOV      R0,R2
   \   00000022   0x.... 0x....      BL       WriteFM24CL64
   1547                  WriteFM24CL64(8, (uint8_t *)&AC.PPpower_NUM,4);
   \   00000026   0x2204             MOVS     R2,#+4
   \   00000028   0xF104 0x0120      ADD      R1,R4,#+32
   \   0000002C   0x2008             MOVS     R0,#+8
   \   0000002E   0x.... 0x....      BL       WriteFM24CL64
   1548              }
   1549              /***********************************************
   1550              * 描述： 保存负有功电量数据到FRAM
   1551              *        负有功电量    1kvarh      99999999 kvarh 
   1552              */ 
   1553              if ( recordsfr.NPpower_NUM != AC.NPpower_NUM ) { 
   \                     ??SavePowerData_0: (+1)
   \   00000032   0x68E8             LDR      R0,[R5, #+12]
   \   00000034   0x6A61             LDR      R1,[R4, #+36]
   \   00000036   0x4288             CMP      R0,R1
   \   00000038   0xD011             BEQ.N    ??SavePowerData_1
   1554                  WriteFM24CL64(12, (uint8_t *)&AC.NPpower_NUM,4);
   \   0000003A   0x2204             MOVS     R2,#+4
   \   0000003C   0xF104 0x0124      ADD      R1,R4,#+36
   \   00000040   0x200C             MOVS     R0,#+12
   \   00000042   0x.... 0x....      BL       WriteFM24CL64
   1555                  WriteFM24CL64(16, (uint8_t *)&AC.NPpower_NUM,4);
   \   00000046   0x2204             MOVS     R2,#+4
   \   00000048   0xF104 0x0124      ADD      R1,R4,#+36
   \   0000004C   0x2010             MOVS     R0,#+16
   \   0000004E   0x.... 0x....      BL       WriteFM24CL64
   1556                  WriteFM24CL64(20, (uint8_t *)&AC.NPpower_NUM,4);
   \   00000052   0x2204             MOVS     R2,#+4
   \   00000054   0xF104 0x0124      ADD      R1,R4,#+36
   \   00000058   0x2014             MOVS     R0,#+20
   \   0000005A   0x.... 0x....      BL       WriteFM24CL64
   1557              }
   1558              /***********************************************
   1559              * 描述： 保存负有功电量数据到FRAM
   1560              *        正无功电量    1kvarh      99999999 kvarh 
   1561              */
   1562              if ( recordsfr.PQpower_NUM != AC.PQpower_NUM ) {
   \                     ??SavePowerData_1: (+1)
   \   0000005E   0x6928             LDR      R0,[R5, #+16]
   \   00000060   0x6C21             LDR      R1,[R4, #+64]
   \   00000062   0x4288             CMP      R0,R1
   \   00000064   0xD011             BEQ.N    ??SavePowerData_2
   1563                  WriteFM24CL64(100, (uint8_t *)&AC.PQpower_NUM,4);
   \   00000066   0x2204             MOVS     R2,#+4
   \   00000068   0xF104 0x0140      ADD      R1,R4,#+64
   \   0000006C   0x2064             MOVS     R0,#+100
   \   0000006E   0x.... 0x....      BL       WriteFM24CL64
   1564                  WriteFM24CL64(104, (uint8_t *)&AC.PQpower_NUM,4);
   \   00000072   0x2204             MOVS     R2,#+4
   \   00000074   0xF104 0x0140      ADD      R1,R4,#+64
   \   00000078   0x2068             MOVS     R0,#+104
   \   0000007A   0x.... 0x....      BL       WriteFM24CL64
   1565                  WriteFM24CL64(108, (uint8_t *)&AC.PQpower_NUM,4);
   \   0000007E   0x2204             MOVS     R2,#+4
   \   00000080   0xF104 0x0140      ADD      R1,R4,#+64
   \   00000084   0x206C             MOVS     R0,#+108
   \   00000086   0x.... 0x....      BL       WriteFM24CL64
   1566              }
   1567              /***********************************************
   1568              * 描述： 保存负有功电量数据到FRAM
   1569              *       负无功电量    1kvarh      99999999 kvarh 
   1570              */ 
   1571              if ( recordsfr.NQpower_NUM != AC.NQpower_NUM ) {
   \                     ??SavePowerData_2: (+1)
   \   0000008A   0x6968             LDR      R0,[R5, #+20]
   \   0000008C   0x6C61             LDR      R1,[R4, #+68]
   \   0000008E   0x4288             CMP      R0,R1
   \   00000090   0xD011             BEQ.N    ??SavePowerData_3
   1572                  WriteFM24CL64(112, (uint8_t *)&AC.NQpower_NUM,4);			  
   \   00000092   0x2204             MOVS     R2,#+4
   \   00000094   0xF104 0x0144      ADD      R1,R4,#+68
   \   00000098   0x2070             MOVS     R0,#+112
   \   0000009A   0x.... 0x....      BL       WriteFM24CL64
   1573                  WriteFM24CL64(116, (uint8_t *)&AC.NQpower_NUM,4);
   \   0000009E   0x2204             MOVS     R2,#+4
   \   000000A0   0xF104 0x0144      ADD      R1,R4,#+68
   \   000000A4   0x2074             MOVS     R0,#+116
   \   000000A6   0x.... 0x....      BL       WriteFM24CL64
   1574                  WriteFM24CL64(120, (uint8_t *)&AC.NQpower_NUM,4);
   \   000000AA   0x2204             MOVS     R2,#+4
   \   000000AC   0xF104 0x0144      ADD      R1,R4,#+68
   \   000000B0   0x2078             MOVS     R0,#+120
   \   000000B2   0x.... 0x....      BL       WriteFM24CL64
   1575              }    
   1576              
   1577              recordsfr.PPpower_NUM       = AC.PPpower_NUM;
   \                     ??SavePowerData_3: (+1)
   \   000000B6   0x6A20             LDR      R0,[R4, #+32]
   \   000000B8   0x60A8             STR      R0,[R5, #+8]
   1578              recordsfr.NPpower_NUM       = AC.NPpower_NUM;
   \   000000BA   0x6A60             LDR      R0,[R4, #+36]
   \   000000BC   0x60E8             STR      R0,[R5, #+12]
   1579              recordsfr.PQpower_NUM       = AC.PQpower_NUM;
   \   000000BE   0x6C20             LDR      R0,[R4, #+64]
   \   000000C0   0x6128             STR      R0,[R5, #+16]
   1580              recordsfr.NQpower_NUM       = AC.NQpower_NUM;
   \   000000C2   0x6C60             LDR      R0,[R4, #+68]
   \   000000C4   0x6168             STR      R0,[R5, #+20]
   1581          }
   \   000000C6   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   1582          

   \                                 In section .text, align 2, keep-with-next
   1583          void PVD_IRQHandler(void)
   1584          {
   \                     PVD_IRQHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1585              EXTI_ClearITPendingBit(EXTI_Line16);            //清中断
   \   00000002   0xF44F 0x3080      MOV      R0,#+65536
   \   00000006   0x.... 0x....      BL       EXTI_ClearITPendingBit
   1586              
   1587              //num = BKP_ReadBackupRegister(BKP_DR10);
   1588              //num++;   
   1589              
   1590              //用户添加紧急处理代码处    
   1591              //RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR | RCC_APB1Periph_BKP, ENABLE);//使能PWR和BKP外设时钟
   1592              //PWR_BackupAccessCmd(ENABLE);//使能后备寄存器访问
   1593              
   1594              //BKP_WriteBackupRegister(BKP_DR10, (u8)num);//启动界面
   1595              
   1596              WriteFM24CL64(0, (uint8_t *)&AC.PPpower_NUM,4);
   \   0000000A   0x....             LDR.N    R4,??DataTable59_9
   \   0000000C   0x2204             MOVS     R2,#+4
   \   0000000E   0xF104 0x0120      ADD      R1,R4,#+32
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       WriteFM24CL64
   1597              WriteFM24CL64(4, (uint8_t *)&AC.PPpower_NUM,4);
   \   00000018   0x2204             MOVS     R2,#+4
   \   0000001A   0xF104 0x0120      ADD      R1,R4,#+32
   \   0000001E   0x4610             MOV      R0,R2
   \   00000020   0x.... 0x....      BL       WriteFM24CL64
   1598              WriteFM24CL64(8, (uint8_t *)&AC.PPpower_NUM,4);
   \   00000024   0x2204             MOVS     R2,#+4
   \   00000026   0xF104 0x0120      ADD      R1,R4,#+32
   \   0000002A   0x2008             MOVS     R0,#+8
   \   0000002C   0x.... 0x....      BL       WriteFM24CL64
   1599              
   1600              //将负有功电量数据转存到缓冲区
   1601              WriteFM24CL64(12, (uint8_t *)&AC.NPpower_NUM,4);			  //低字节在前，高字节在后
   \   00000030   0x2204             MOVS     R2,#+4
   \   00000032   0xF104 0x0124      ADD      R1,R4,#+36
   \   00000036   0x200C             MOVS     R0,#+12
   \   00000038   0x.... 0x....      BL       WriteFM24CL64
   1602              WriteFM24CL64(16, (uint8_t *)&AC.NPpower_NUM,4);
   \   0000003C   0x2204             MOVS     R2,#+4
   \   0000003E   0xF104 0x0124      ADD      R1,R4,#+36
   \   00000042   0x2010             MOVS     R0,#+16
   \   00000044   0x.... 0x....      BL       WriteFM24CL64
   1603              WriteFM24CL64(20, (uint8_t *)&AC.NPpower_NUM,4);                
   \   00000048   0x2204             MOVS     R2,#+4
   \   0000004A   0xF104 0x0124      ADD      R1,R4,#+36
   \   0000004E   0x2014             MOVS     R0,#+20
   \   00000050   0x.... 0x....      BL       WriteFM24CL64
   1604              
   1605              WriteFM24CL64(100, (uint8_t *)&AC.PQpower_NUM,4);
   \   00000054   0x2204             MOVS     R2,#+4
   \   00000056   0xF104 0x0140      ADD      R1,R4,#+64
   \   0000005A   0x2064             MOVS     R0,#+100
   \   0000005C   0x.... 0x....      BL       WriteFM24CL64
   1606              WriteFM24CL64(104, (uint8_t *)&AC.PQpower_NUM,4);
   \   00000060   0x2204             MOVS     R2,#+4
   \   00000062   0xF104 0x0140      ADD      R1,R4,#+64
   \   00000066   0x2068             MOVS     R0,#+104
   \   00000068   0x.... 0x....      BL       WriteFM24CL64
   1607              WriteFM24CL64(108, (uint8_t *)&AC.PQpower_NUM,4);
   \   0000006C   0x2204             MOVS     R2,#+4
   \   0000006E   0xF104 0x0140      ADD      R1,R4,#+64
   \   00000072   0x206C             MOVS     R0,#+108
   \   00000074   0x.... 0x....      BL       WriteFM24CL64
   1608              
   1609              //将负有功电量数据转存到缓冲区
   1610              WriteFM24CL64(112, (uint8_t *)&AC.NQpower_NUM,4);			  //低字节在前，高字节在后
   \   00000078   0x2204             MOVS     R2,#+4
   \   0000007A   0xF104 0x0144      ADD      R1,R4,#+68
   \   0000007E   0x2070             MOVS     R0,#+112
   \   00000080   0x.... 0x....      BL       WriteFM24CL64
   1611              WriteFM24CL64(116, (uint8_t *)&AC.NQpower_NUM,4);
   \   00000084   0x2204             MOVS     R2,#+4
   \   00000086   0xF104 0x0144      ADD      R1,R4,#+68
   \   0000008A   0x2074             MOVS     R0,#+116
   \   0000008C   0x.... 0x....      BL       WriteFM24CL64
   1612              WriteFM24CL64(120, (uint8_t *)&AC.NQpower_NUM,4);
   \   00000090   0x2204             MOVS     R2,#+4
   \   00000092   0xF104 0x0144      ADD      R1,R4,#+68
   \   00000096   0x2078             MOVS     R0,#+120
   \   00000098   0xE8BD 0x4010      POP      {R4,LR}
   \   0000009C   0x.... 0x....      B.W      WriteFM24CL64
   1613          }
   1614          

   \                                 In section .text, align 2, keep-with-next
   1615          void PWR_PVD_Init(void)
   1616          {  
   \                     PWR_PVD_Init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
   1617              NVIC_InitTypeDef NVIC_InitStructure;
   1618              EXTI_InitTypeDef EXTI_InitStructure;    
   1619              
   1620              RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR, ENABLE);     //使能PWR时钟    
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0xF04F 0x5080      MOV      R0,#+268435456
   \   0000000A   0x.... 0x....      BL       RCC_APB1PeriphClockCmd
   1621              
   1622              //NVIC_InitStructure.NVIC_IRQChannel = PVD_IRQn;           //使能PVD所在的外部中断通道
   1623              //NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;//抢占优先级1
   1624              //NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;       //子优先级0
   1625              //NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;          //使能外部中断通道
   1626              //NVIC_Init(&NVIC_InitStructure);
   1627                      
   1628              /***********************************************
   1629              * 描述： 外部中断0 ~ 4向量
   1630              */ 
   1631              BSP_IntVectSet(BSP_INT_ID_PVD, PVD_IRQHandler);
   \   0000000E   0x....             LDR.N    R1,??DataTable59_28
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x.... 0x....      BL       BSP_IntVectSet
   1632              BSP_IntEn(BSP_INT_ID_PVD);    
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x.... 0x....      BL       BSP_IntEn
   1633              
   1634              EXTI_StructInit(&EXTI_InitStructure);
   \   0000001C   0x4668             MOV      R0,SP
   \   0000001E   0x.... 0x....      BL       EXTI_StructInit
   1635              EXTI_InitStructure.EXTI_Line = EXTI_Line16;             //PVD连接到中断线16上
   \   00000022   0xF44F 0x3080      MOV      R0,#+65536
   \   00000026   0x9000             STR      R0,[SP, #+0]
   1636              EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;     //使用中断模式
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0xF88D 0x0004      STRB     R0,[SP, #+4]
   1637              EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;  //电压低于阀值时产生中断
   \   0000002E   0x2008             MOVS     R0,#+8
   \   00000030   0xF88D 0x0005      STRB     R0,[SP, #+5]
   1638              EXTI_InitStructure.EXTI_LineCmd = ENABLE;               //使能中断线
   \   00000034   0x2001             MOVS     R0,#+1
   \   00000036   0xF88D 0x0006      STRB     R0,[SP, #+6]
   1639              EXTI_Init(&EXTI_InitStructure);                         //初始   
   \   0000003A   0x4668             MOV      R0,SP
   \   0000003C   0x.... 0x....      BL       EXTI_Init
   1640              
   1641              PWR_PVDLevelConfig(PWR_PVDLevel_2V9);                   //设定监控阀值
   \   00000040   0x20E0             MOVS     R0,#+224
   \   00000042   0x.... 0x....      BL       PWR_PVDLevelConfig
   1642              PWR_PVDCmd(ENABLE);                                     //使能PVD    
   \   00000046   0x2001             MOVS     R0,#+1
   \   00000048   0x.... 0x....      BL       PWR_PVDCmd
   1643          }
   \   0000004C   0xBD07             POP      {R0-R2,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x41 0x70          DC8 "App Task Mater"
   \              0x70 0x20    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x20 0x4D    
   \              0x61 0x74    
   \              0x65 0x72    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x41 0x70          DC8 "App_CommFlag"
   \              0x70 0x5F    
   \              0x43 0x6F    
   \              0x6D 0x6D    
   \              0x46 0x6C    
   \              0x61 0x67    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x52 0x78          DC8 "RxQ"
   \              0x51 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x0D 0x0A          DC8 0DH, 0AH, 0B5H, 0B1H, 0C7H, 0B0H, 0CDH, 0B7H
   \              0xB5 0xB1    
   \              0xC7 0xB0    
   \              0xCD 0xB7    
   \   00000008   0xB5 0xD8          DC8 0B5H, 0D8H, 0D6H, 0B7H, 0A3H, 0BAH, 30H, 78H
   \              0xD6 0xB7    
   \              0xA3 0xBA    
   \              0x30 0x78    
   \   00000010   0x25 0x30          DC8 25H, 30H, 38H, 58H, 0DH, 0AH, 0B5H, 0B1H
   \              0x38 0x58    
   \              0x0D 0x0A    
   \              0xB5 0xB1    
   \   00000018   0xC7 0xB0          DC8 0C7H, 0B0H, 0CEH, 0B2H, 0B5H, 0D8H, 0D6H, 0B7H
   \              0xCE 0xB2    
   \              0xB5 0xD8    
   \              0xD6 0xB7    
   \   00000020   0xA3 0xBA          DC8 0A3H, 0BAH, 30H, 78H, 25H, 30H, 38H, 58H
   \              0x30 0x78    
   \              0x25 0x30    
   \              0x38 0x58    
   \   00000028   0x0D 0x0A          DC8 0DH, 0AH, 0B5H, 0B1H, 0C7H, 0B0H, 0BCH, 0C7H
   \              0xB5 0xB1    
   \              0xC7 0xB0    
   \              0xBC 0xC7    
   \   00000030   0xC2 0xBC          DC8 0C2H, 0BCH, 0BAH, 0C5H, 0A3H, 0BAH, 25H, 64H
   \              0xBA 0xC5    
   \              0xA3 0xBA    
   \              0x25 0x64    
   \   00000038   0x00               DC8 0
   \   00000039   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x0D 0x0A          DC8 "\015\012\265\261\307\260\312\261\274\344\243\27220%02d-%02d-%02d  %02d:%02d:%02d"
   \              0xB5 0xB1    
   \              0xC7 0xB0    
   \              0xCA 0xB1    
   \              0xBC 0xE4    
   \              0xA3 0xBA    
   \              0x32 0x30    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x2D 0x25    
   \              0x30 0x32    
   \              0x64 0x2D    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x20 0x20    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x3A 0x25    
   \              0x30 0x32    
   \              0x64 0x3A    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x00         
   \   0000002D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x0D 0x0A          DC8 0DH, 0AH, 0B4H, 0E6H, 0B4H, 0A2H, 0CAH, 0FDH
   \              0xB4 0xE6    
   \              0xB4 0xA2    
   \              0xCA 0xFD    
   \   00000008   0xBE 0xDD          DC8 0BEH, 0DDH, 0B3H, 0C9H, 0B9H, 0A6H, 20H, 49H
   \              0xB3 0xC9    
   \              0xB9 0xA6    
   \              0x20 0x49    
   \   00000010   0x44 0x20          DC8 44H, 20H, 3DH, 20H, 25H, 64H, 0DH, 0AH
   \              0x3D 0x20    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \   00000018   0xD5 0xFD          DC8 0D5H, 0FDH, 0D3H, 0D0H, 0B9H, 0A6H, 20H, 3DH
   \              0xD3 0xD0    
   \              0xB9 0xA6    
   \              0x20 0x3D    
   \   00000020   0x20 0x25          DC8 20H, 25H, 64H, 3BH, 0DH, 0AH, 0B8H, 0BAH
   \              0x64 0x3B    
   \              0x0D 0x0A    
   \              0xB8 0xBA    
   \   00000028   0xD3 0xD0          DC8 0D3H, 0D0H, 0B9H, 0A6H, 20H, 3DH, 20H, 25H
   \              0xB9 0xA6    
   \              0x20 0x3D    
   \              0x20 0x25    
   \   00000030   0x64 0x3B          DC8 64H, 3BH, 0DH, 0AH, 0D5H, 0FDH, 0CEH, 0DEH
   \              0x0D 0x0A    
   \              0xD5 0xFD    
   \              0xCE 0xDE    
   \   00000038   0xB9 0xA6          DC8 0B9H, 0A6H, 20H, 3DH, 20H, 25H, 64H, 3BH
   \              0x20 0x3D    
   \              0x20 0x25    
   \              0x64 0x3B    
   \   00000040   0x0D 0x0A          DC8 0DH, 0AH, 0B8H, 0BAH, 0CEH, 0DEH, 0B9H, 0A6H
   \              0xB8 0xBA    
   \              0xCE 0xDE    
   \              0xB9 0xA6    
   \   00000048   0x20 0x3D          DC8 20H, 3DH, 20H, 25H, 64H, 3BH, 0DH, 0AH
   \              0x20 0x25    
   \              0x64 0x3B    
   \              0x0D 0x0A    
   \   00000050   0xB5 0xE7          DC8 0B5H, 0E7H, 20H, 20H, 0D1H, 0B9H, 20H, 3DH
   \              0x20 0x20    
   \              0xD1 0xB9    
   \              0x20 0x3D    
   \   00000058   0x20 0x25          DC8 20H, 25H, 64H, 3BH, 0DH, 0AH, 0B5H, 0E7H
   \              0x64 0x3B    
   \              0x0D 0x0A    
   \              0xB5 0xE7    
   \   00000060   0x20 0x20          DC8 20H, 20H, 0C1H, 0F7H, 20H, 3DH, 20H, 25H
   \              0xC1 0xF7    
   \              0x20 0x3D    
   \              0x20 0x25    
   \   00000068   0x64 0x3B          DC8 64H, 3BH, 0DH, 0AH, 0C6H, 0B5H, 20H, 20H
   \              0x0D 0x0A    
   \              0xC6 0xB5    
   \              0x20 0x20    
   \   00000070   0xC2 0xCA          DC8 0C2H, 0CAH, 20H, 3DH, 20H, 25H, 64H, 3BH
   \              0x20 0x3D    
   \              0x20 0x25    
   \              0x64 0x3B    
   \   00000078   0x0D 0x0A          DC8 0DH, 0AH, 0B9H, 0A6H, 0C2H, 0CAH, 0D2H, 0F2H
   \              0xB9 0xA6    
   \              0xC2 0xCA    
   \              0xD2 0xF2    
   \   00000080   0xCB 0xD8          DC8 0CBH, 0D8H, 20H, 3DH, 20H, 25H, 64H, 3BH
   \              0x20 0x3D    
   \              0x20 0x25    
   \              0x64 0x3B    
   \   00000088   0x0D 0x0A          DC8 0DH, 0AH, 0D3H, 0D0H, 0B9H, 0A6H, 0B9H, 0A6H
   \              0xD3 0xD0    
   \              0xB9 0xA6    
   \              0xB9 0xA6    
   \   00000090   0xC2 0xCA          DC8 0C2H, 0CAH, 20H, 3DH, 20H, 25H, 64H, 3BH
   \              0x20 0x3D    
   \              0x20 0x25    
   \              0x64 0x3B    
   \   00000098   0x0D 0x0A          DC8 0DH, 0AH, 0CEH, 0DEH, 0B9H, 0A6H, 0B9H, 0A6H
   \              0xCE 0xDE    
   \              0xB9 0xA6    
   \              0xB9 0xA6    
   \   000000A0   0xC2 0xCA          DC8 0C2H, 0CAH, 20H, 3DH, 20H, 25H, 64H, 0DH
   \              0x20 0x3D    
   \              0x20 0x25    
   \              0x64 0x0D    
   \   000000A8   0x0A 0x00          DC8 0AH, 0
   \   000000AA   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54:
   \   00000000   0x25 0x38          DC8      "%8d"
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_1:
   \   00000000   0x........         DC32     AppTaskMaterTCB

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_2:
   \   00000000   0x........         DC32     Ctrl+0x5BA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_3:
   \   00000000   0x........         DC32     Ctrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_4:
   \   00000000   0x........         DC32     AC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_5:
   \   00000000   0x........         DC32     Mater

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_6:
   \   00000000   0x........         DC32     Ctrl+0x606

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_7:
   \   00000000   0x000493E1         DC32     0x493e1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_8:
   \   00000000   0x459C4000         DC32     0x459c4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_9:
   \   00000000   0x469C4001         DC32     0x469c4001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_10:
   \   00000000   0x469C4000         DC32     0x469c4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_11:
   \   00000000   0x40000001         DC32     0x40000001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_12:
   \   00000000   0x00FFFF81         DC32     0xffff81

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_13:
   \   00000000   0x........         DC32     WdtFlagGRP

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_14:
   \   00000000   0x05F5E100         DC32     0x5f5e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_15:
   \   00000000   0x3F40624D         DC32     0x3f40624d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_16:
   \   00000000   0x3FE33333         DC32     0x3fe33333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_17:
   \   00000000   0x4187D784         DC32     0x4187d784

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_18:
   \   00000000   0x447A0000         DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x45 0x31          DC8 "E1      "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x45 0x32          DC8 "E2      "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56:
   \   00000000   0x40011400         DC32     0x40011400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57:
   \   00000000   0x........         DC32     WdtFlags

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable58:
   \   00000000   0x40011800         DC32     0x40011800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59:
   \   00000000   0x3FF00000         DC32     0x3ff00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_1:
   \   00000000   0xBF800000         DC32     0xbf800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_2:
   \   00000000   0xBFF00000         DC32     0xbff00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_3:
   \   00000000   0x408F4000         DC32     0x408f4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_4:
   \   00000000   0x........         DC32     OSSchedLockNestingCtr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_5:
   \   00000000   0x........         DC32     Mater+0xA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_6:
   \   00000000   0x........         DC32     OSIntQNbrEntries

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_7:
   \   00000000   0x........         DC32     Mater

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_8:
   \   00000000   0x........         DC32     recordsfr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_9:
   \   00000000   0x........         DC32     AC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_10:
   \   00000000   0x9999999A         DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_11:
   \   00000000   0x3FB99999         DC32     0x3fb99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_12:
   \   00000000   0x47AE147B         DC32     0x47ae147b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_13:
   \   00000000   0x3F847AE1         DC32     0x3f847ae1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_14:
   \   00000000   0x3F50624D         DC32     0x3f50624d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_15:
   \   00000000   0xEB1C432D         DC32     0xeb1c432d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_16:
   \   00000000   0x3F1A36E2         DC32     0x3f1a36e2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_17:
   \   00000000   0x88E368F1         DC32     0x88e368f1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_18:
   \   00000000   0x3EE4F8B5         DC32     0x3ee4f8b5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_19:
   \   00000000   0xA0B5ED8D         DC32     0xa0b5ed8d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_20:
   \   00000000   0x3EB0C6F7         DC32     0x3eb0c6f7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_21:
   \   00000000   0x9ABCAF48         DC32     0x9abcaf48

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_22:
   \   00000000   0x3E7AD7F2         DC32     0x3e7ad7f2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_23:
   \   00000000   0xE2308C3A         DC32     0xe2308c3a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_24:
   \   00000000   0x3E45798E         DC32     0x3e45798e

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_25:
   \   00000000   0xE826D695         DC32     0xe826d695

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_26:
   \   00000000   0x3E112E0B         DC32     0x3e112e0b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_27:
   \   00000000   0x........         DC32     Ctrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_28:
   \   00000000   0x........         DC32     PVD_IRQHandler

   \                                 In section .text, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x45 0x33          DC8 "E3      "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x45 0x34          DC8 "E4      "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x55 0x20          DC8 "U %6d"
   \              0x25 0x36    
   \              0x64 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \   00000000   0x41 0x20          DC8 "A %6d"
   \              0x25 0x36    
   \              0x64 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x50 0x20          DC8 "P   .1000"
   \              0x20 0x20    
   \              0x2E 0x31    
   \              0x30 0x30    
   \              0x30 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x50 0x20          DC8 "P  -.1000"
   \              0x20 0x2D    
   \              0x2E 0x31    
   \              0x30 0x30    
   \              0x30 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_19:
   \   00000000   0x50 0x20          DC8 "P  -.0%03d"
   \              0x20 0x2D    
   \              0x2E 0x30    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_20:
   \   00000000   0x50 0x20          DC8 "P   .0%03d"
   \              0x20 0x20    
   \              0x2E 0x30    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_23:
   \   00000000   0x0D 0x0A          DC8 "\015\012\261\276\327\260\326\303ID\311\350\326\303\316\252\243\272%d\015\012"
   \              0xB1 0xBE    
   \              0xD7 0xB0    
   \              0xD6 0xC3    
   \              0x49 0x44    
   \              0xC9 0xE8    
   \              0xD6 0xC3    
   \              0xCE 0xAA    
   \              0xA3 0xBA    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_24:
   \   00000000   0x0D 0x0A          DC8 "\015\012\265\261\307\260\263\265\320\315\243\272%d\243\273\265\261\307\260\263\265\272\305\243\272%d\015\012"
   \              0xB5 0xB1    
   \              0xC7 0xB0    
   \              0xB3 0xB5    
   \              0xD0 0xCD    
   \              0xA3 0xBA    
   \              0x25 0x64    
   \              0xA3 0xBB    
   \              0xB5 0xB1    
   \              0xC7 0xB0    
   \              0xB3 0xB5    
   \              0xBA 0xC5    
   \              0xA3 0xBA    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_25:
   \   00000000   0x0D 0x0A          DC8 "\015\012\265\261\307\260\312\261\274\344\316\252\243\27220%02d-%02d-%02d  %02d:%02d:%02d"
   \              0xB5 0xB1    
   \              0xC7 0xB0    
   \              0xCA 0xB1    
   \              0xBC 0xE4    
   \              0xCE 0xAA    
   \              0xA3 0xBA    
   \              0x32 0x30    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x2D 0x25    
   \              0x30 0x32    
   \              0x64 0x2D    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x20 0x20    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x3A 0x25    
   \              0x30 0x32    
   \              0x64 0x3A    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x00         
   \   0000002F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_26:
   \   00000000   0x0D 0x0A          DC8 "\015\012\265\367\312\324\312\375\276\335\322\321\307\345\263\375\012"
   \              0xB5 0xF7    
   \              0xCA 0xD4    
   \              0xCA 0xFD    
   \              0xBE 0xDD    
   \              0xD2 0xD1    
   \              0xC7 0xE5    
   \              0xB3 0xFD    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_27:
   \   00000000   0x0D 0x0A          DC8 "\015\012\325\375\323\320\271\246\265\347\301\277\322\321\307\345\301\343\012"
   \              0xD5 0xFD    
   \              0xD3 0xD0    
   \              0xB9 0xA6    
   \              0xB5 0xE7    
   \              0xC1 0xBF    
   \              0xD2 0xD1    
   \              0xC7 0xE5    
   \              0xC1 0xE3    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_28:
   \   00000000   0x0D 0x0A          DC8 "\015\012\270\272\323\320\271\246\265\347\301\277\322\321\307\345\301\343\012"
   \              0xB8 0xBA    
   \              0xD3 0xD0    
   \              0xB9 0xA6    
   \              0xB5 0xE7    
   \              0xC1 0xBF    
   \              0xD2 0xD1    
   \              0xC7 0xE5    
   \              0xC1 0xE3    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_29:
   \   00000000   0x0D 0x0A          DC8 "\015\012\325\375\316\336\271\246\265\347\301\277\322\321\307\345\301\343\012"
   \              0xD5 0xFD    
   \              0xCE 0xDE    
   \              0xB9 0xA6    
   \              0xB5 0xE7    
   \              0xC1 0xBF    
   \              0xD2 0xD1    
   \              0xC7 0xE5    
   \              0xC1 0xE3    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_30:
   \   00000000   0x0D 0x0A          DC8 "\015\012\270\272\316\336\271\246\265\347\301\277\322\321\307\345\301\343\012"
   \              0xB8 0xBA    
   \              0xCE 0xDE    
   \              0xB9 0xA6    
   \              0xB5 0xE7    
   \              0xC1 0xBF    
   \              0xD2 0xD1    
   \              0xC7 0xE5    
   \              0xC1 0xE3    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_31:
   \   00000000   0x0D 0x0A          DC8 "\015\012\324\255\261\337\266\356\266\250\265\347\321\271\311\350\326\303\316\252\243\272%dV\015\012"
   \              0xD4 0xAD    
   \              0xB1 0xDF    
   \              0xB6 0xEE    
   \              0xB6 0xA8    
   \              0xB5 0xE7    
   \              0xD1 0xB9    
   \              0xC9 0xE8    
   \              0xD6 0xC3    
   \              0xCE 0xAA    
   \              0xA3 0xBA    
   \              0x25 0x64    
   \              0x56 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_32:
   \   00000000   0x0D 0x0A          DC8 "\015\012\324\255\261\337\266\356\266\250\265\347\301\367\311\350\326\303\316\252\243\272%dA\015\012"
   \              0xD4 0xAD    
   \              0xB1 0xDF    
   \              0xB6 0xEE    
   \              0xB6 0xA8    
   \              0xB5 0xE7    
   \              0xC1 0xF7    
   \              0xC9 0xE8    
   \              0xD6 0xC3    
   \              0xCE 0xAA    
   \              0xA3 0xBA    
   \              0x25 0x64    
   \              0x41 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_33:
   \   00000000   0x0D 0x0A          DC8 "\015\012\301\343\321\271\267\247\326\265\311\350\326\303\316\252\243\272%fV\015\012"
   \              0xC1 0xE3    
   \              0xD1 0xB9    
   \              0xB7 0xA7    
   \              0xD6 0xB5    
   \              0xC9 0xE8    
   \              0xD6 0xC3    
   \              0xCE 0xAA    
   \              0xA3 0xBA    
   \              0x25 0x66    
   \              0x56 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_34:
   \   00000000   0x0D 0x0A          DC8 "\015\012\261\276\327\260\326\303ID\316\252\243\272%d\015\012"
   \              0xB1 0xBE    
   \              0xD7 0xB0    
   \              0xD6 0xC3    
   \              0x49 0x44    
   \              0xCE 0xAA    
   \              0xA3 0xBA    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_35:
   \   00000000   0x0D 0x0A          DC8 "\015\012\265\261\307\260\263\265\320\315\243\272%d\243\273 \265\261\307\260\263\265\272\305\243\272%04d\015\012"
   \              0xB5 0xB1    
   \              0xC7 0xB0    
   \              0xB3 0xB5    
   \              0xD0 0xCD    
   \              0xA3 0xBA    
   \              0x25 0x64    
   \              0xA3 0xBB    
   \              0x20 0xB5    
   \              0xB1 0xC7    
   \              0xB0 0xB3    
   \              0xB5 0xBA    
   \              0xC5 0xA3    
   \              0xBA 0x25    
   \              0x30 0x34    
   \              0x64 0x0D    
   \              0x0A 0x00    
   \   00000022   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_36:
   \   00000000   0x0D 0x0A          DC8 "\015\012\316\264\311\350\326\303\327\260\263\265\263\265\320\315\243\241\015\012"
   \              0xCE 0xB4    
   \              0xC9 0xE8    
   \              0xD6 0xC3    
   \              0xD7 0xB0    
   \              0xB3 0xB5    
   \              0xB3 0xB5    
   \              0xD0 0xCD    
   \              0xA3 0xA1    
   \              0x0D 0x0A    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_37:
   \   00000000   0x0D 0x0A          DC8 "\015\012FLASH\320\276\306\254\326\320\316\336\323\320\320\247\312\375\276\335\243\241\015\012"
   \              0x46 0x4C    
   \              0x41 0x53    
   \              0x48 0xD0    
   \              0xBE 0xC6    
   \              0xAC 0xD6    
   \              0xD0 0xCE    
   \              0xDE 0xD3    
   \              0xD0 0xD0    
   \              0xA7 0xCA    
   \              0xFD 0xBE    
   \              0xDD 0xA3    
   \              0xA1 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_38:
   \   00000000   0x0D 0x0A          DC8 "\015\012FLASH\320\276\306\254\262\301\263\375\326\320............\015\012"
   \              0x46 0x4C    
   \              0x41 0x53    
   \              0x48 0xD0    
   \              0xBE 0xC6    
   \              0xAC 0xB2    
   \              0xC1 0xB3    
   \              0xFD 0xD6    
   \              0xD0 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_39:
   \   00000000   0x0D 0x0A          DC8 "\015\012\264\363\324\274\320\350\322\25230\303\353\243\254\307\353\304\315\320\304\265\310\264\375\243\241\015\012"
   \              0xB4 0xF3    
   \              0xD4 0xBC    
   \              0xD0 0xE8    
   \              0xD2 0xAA    
   \              0x33 0x30    
   \              0xC3 0xEB    
   \              0xA3 0xAC    
   \              0xC7 0xEB    
   \              0xC4 0xCD    
   \              0xD0 0xC4    
   \              0xB5 0xC8    
   \              0xB4 0xFD    
   \              0xA3 0xA1    
   \              0x0D 0x0A    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_40:
   \   00000000   0x0D 0x0A          DC8 "\015\012FLASH\320\276\306\254\322\321\262\301\263\375\015\012"
   \              0x46 0x4C    
   \              0x41 0x53    
   \              0x48 0xD0    
   \              0xBE 0xC6    
   \              0xAC 0xD2    
   \              0xD1 0xB2    
   \              0xC1 0xB3    
   \              0xFD 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_41:
   \   00000000   0x0D 0x0A          DC8 "\015\012FRAM\320\276\306\254\262\301\263\375\326\320...\015\012"
   \              0x46 0x52    
   \              0x41 0x4D    
   \              0xD0 0xBE    
   \              0xC6 0xAC    
   \              0xB2 0xC1    
   \              0xB3 0xFD    
   \              0xD6 0xD0    
   \              0x2E 0x2E    
   \              0x2E 0x0D    
   \              0x0A 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_42:
   \   00000000   0x0D 0x0A          DC8 "\015\012FRAM\320\276\306\254\322\321\262\301\263\375\015\012"
   \              0x46 0x52    
   \              0x41 0x4D    
   \              0xD0 0xBE    
   \              0xC6 0xAC    
   \              0xD2 0xD1    
   \              0xB2 0xC1    
   \              0xB3 0xFD    
   \              0x0D 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_43:
   \   00000000   0x0D 0x0A          DC8 "\015\012\265\347\321\271\262\271\263\245\320\261\302\312 = %f\012"
   \              0xB5 0xE7    
   \              0xD1 0xB9    
   \              0xB2 0xB9    
   \              0xB3 0xA5    
   \              0xD0 0xB1    
   \              0xC2 0xCA    
   \              0x20 0x3D    
   \              0x20 0x25    
   \              0x66 0x0A    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_44:
   \   00000000   0x0D 0x0A          DC8 "\015\012\265\347\301\367\262\271\263\245\320\261\302\312 = %f\012"
   \              0xB5 0xE7    
   \              0xC1 0xF7    
   \              0xB2 0xB9    
   \              0xB3 0xA5    
   \              0xD0 0xB1    
   \              0xC2 0xCA    
   \              0x20 0x3D    
   \              0x20 0x25    
   \              0x66 0x0A    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_45:
   \   00000000   0x0D 0x0A          DC8 "\015\012\311\350\326\303\312\375\276\335\274\307\302\274/\267\242\313\315\274\344\270\364\312\261\274\344\316\252\243\272%d\303\353\015\012"
   \              0xC9 0xE8    
   \              0xD6 0xC3    
   \              0xCA 0xFD    
   \              0xBE 0xDD    
   \              0xBC 0xC7    
   \              0xC2 0xBC    
   \              0x2F 0xB7    
   \              0xA2 0xCB    
   \              0xCD 0xBC    
   \              0xE4 0xB8    
   \              0xF4 0xCA    
   \              0xB1 0xBC    
   \              0xE4 0xCE    
   \              0xAA 0xA3    
   \              0xBA 0x25    
   \              0x64 0xC3    
   \              0xEB 0x0D    
   \              0x0A 0x00    
   \   00000026   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_46:
   \   00000000   0x0D 0x0A          DC8 "\015\012\265\261\307\260\312\375\276\335\274\307\302\274/\267\242\313\315\274\344\270\364\312\261\274\344\316\252\243\272%d\303\353\015\012"
   \              0xB5 0xB1    
   \              0xC7 0xB0    
   \              0xCA 0xFD    
   \              0xBE 0xDD    
   \              0xBC 0xC7    
   \              0xC2 0xBC    
   \              0x2F 0xB7    
   \              0xA2 0xCB    
   \              0xCD 0xBC    
   \              0xE4 0xB8    
   \              0xF4 0xCA    
   \              0xB1 0xBC    
   \              0xE4 0xCE    
   \              0xAA 0xA3    
   \              0xBA 0x25    
   \              0x64 0xC3    
   \              0xEB 0x0D    
   \              0x0A 0x00    
   \   00000026   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x25 0x38          DC8 "%8d"
   \              0x64 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_21:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_22:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00               DC8 0
   1644          
   1645          /*******************************************************************************
   1646           * 				end of file
   1647           *******************************************************************************/
   1648          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   AC_COUNTInit
        24   -> BSP_IntEn
        24   -> BSP_IntVectSet
        24   -> EXTI_ClearITPendingBit
        24   -> EXTI_Init
        24   -> GPIO_EXTILineConfig
        24   -> GPIO_Init
        24   -> RCC_APB2PeriphClockCmd
       8   APP_CSNC_CommHandler
         8   -> APP_MaterCommHandler
      88   APP_MaterCommHandler
        88   -> BSP_RST_SystemRst
        88   -> CPU_IntDisMeasStart
        88   -> CPU_IntDisMeasStop
        88   -> CPU_SR_Restore
        88   -> CPU_SR_Save
        88   -> GetCrc16Chk1
        88   -> GetSumChk
        88   -> GetTime
        88   -> MX25L3206_Erase
        88   -> NMB_Tx
        88   -> OS_Sched0
        88   -> ReadFM24CL64
        88   -> WriteFM24CL64
        88   -> WriteTime
        88   -> __aeabi_d2f
        88   -> __aeabi_dadd
        88   -> __aeabi_dmul
        88   -> __aeabi_f2d
        88   -> __aeabi_i2f
        88   -> __aeabi_memclr4
        88   -> __aeabi_memcpy
        88   -> __aeabi_ui2f
        88   -> osal_start_timerRl
        88   -> uartprintf
      16   APP_MaterDispHandler
        16   -> BSP_DispClrAll
        16   -> __aeabi_d2iz
        16   -> __aeabi_dmul
        16   -> __aeabi_f2d
        16   -> __aeabi_f2uiz
        16   -> abs
        16   -> uprintf
        16 __aeabi_cfcmpeq
        16 __aeabi_cfcmple
       8   APP_MaterInit
         8   -> AC_COUNTInit
         8   -> BSP_OS_TimeDly
         8   -> EEP_OS_Init
         8   -> I2C_GPIO_Config
         8   -> InitDS3231
         8   -> PWR_PVD_Init
         8   -> SPI_FLASH_Init
     160   AppTaskMater
       160   -> APP_MaterCommHandler
       160   -> APP_MaterInit
       160   -> App_SaveDataToHistory
       160   -> BSP_OS_TimeDly
       160   -> OSFlagCreate
       160   -> OSFlagPend
       160   -> OSFlagPost
       160   -> OSQCreate
       160   -> OSQPend
       160   -> OSTimeGet
       160   -> OS_FlagPost
       160   -> ReadFM24CL64
       160   -> SavePowerData
       160   -> __aeabi_d2f
       160   -> __aeabi_ddiv
       160   -> __aeabi_dmul
       160   -> __aeabi_f2d
       160   -> __aeabi_f2iz
       160   -> __aeabi_f2uiz
       160   -> __aeabi_fdiv
       160   -> __aeabi_fmul
       160   -> __aeabi_memclr4
       160   -> __aeabi_ui2f
       160   -> uartprintf
       160 __aeabi_cdcmple
       160 __aeabi_cfcmpeq
       160 __aeabi_cfcmple
       160 __aeabi_cfrcmple
      48   App_TaskMaterCreate
        48   -> OSTaskCreate
      24   DC_COUNTInit
        24   -> BSP_IntEn
        24   -> BSP_IntVectSet
        24   -> EXTI_ClearITPendingBit
        24   -> EXTI_Init
        24   -> GPIO_EXTILineConfig
        24   -> GPIO_Init
        24   -> RCC_APB2PeriphClockCmd
       8   EXTI0_ISRHandler
         0   -> EXTI_ClearITPendingBit
         8   -> EXTI_GetITStatus
         8   -> GPIO_ReadInputDataBit
       8   EXTI9_5_ISRHandler
         0   -> EXTI_ClearITPendingBit
         8   -> EXTI_GetITStatus
         8   -> GPIO_ReadInputDataBit
       8   PVD_IRQHandler
         8   -> EXTI_ClearITPendingBit
         0   -> WriteFM24CL64
         8   -> WriteFM24CL64
      16   PWR_PVD_Init
        16   -> BSP_IntEn
        16   -> BSP_IntVectSet
        16   -> EXTI_Init
        16   -> EXTI_StructInit
        16   -> PWR_PVDCmd
        16   -> PWR_PVDLevelConfig
        16   -> RCC_APB1PeriphClockCmd
      16   SavePowerData
        16   -> WriteFM24CL64


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable54
       4  ??DataTable54_1
       4  ??DataTable54_10
       4  ??DataTable54_11
       4  ??DataTable54_12
       4  ??DataTable54_13
       4  ??DataTable54_14
       4  ??DataTable54_15
       4  ??DataTable54_16
       4  ??DataTable54_17
       4  ??DataTable54_18
       4  ??DataTable54_2
       4  ??DataTable54_3
       4  ??DataTable54_4
       4  ??DataTable54_5
       4  ??DataTable54_6
       4  ??DataTable54_7
       4  ??DataTable54_8
       4  ??DataTable54_9
       4  ??DataTable56
       4  ??DataTable57
       4  ??DataTable58
       4  ??DataTable59
       4  ??DataTable59_1
       4  ??DataTable59_10
       4  ??DataTable59_11
       4  ??DataTable59_12
       4  ??DataTable59_13
       4  ??DataTable59_14
       4  ??DataTable59_15
       4  ??DataTable59_16
       4  ??DataTable59_17
       4  ??DataTable59_18
       4  ??DataTable59_19
       4  ??DataTable59_2
       4  ??DataTable59_20
       4  ??DataTable59_21
       4  ??DataTable59_22
       4  ??DataTable59_23
       4  ??DataTable59_24
       4  ??DataTable59_25
       4  ??DataTable59_26
       4  ??DataTable59_27
       4  ??DataTable59_28
       4  ??DataTable59_3
       4  ??DataTable59_4
       4  ??DataTable59_5
       4  ??DataTable59_6
       4  ??DataTable59_7
       4  ??DataTable59_8
       4  ??DataTable59_9
      16  ?_0
      16  ?_1
      12  ?_10
       4  ?_11
      12  ?_12
      12  ?_13
      12  ?_14
       8  ?_15
       8  ?_16
      12  ?_17
      12  ?_18
      12  ?_19
       4  ?_2
      12  ?_20
       4  ?_21
      24  ?_22
      24  ?_23
      32  ?_24
      48  ?_25
      20  ?_26
      20  ?_27
      20  ?_28
      20  ?_29
      16  ?_3
      20  ?_30
      28  ?_31
      28  ?_32
      24  ?_33
      20  ?_34
      36  ?_35
      24  ?_36
      28  ?_37
      32  ?_38
      32  ?_39
      16  ?_4
      20  ?_40
      24  ?_41
      20  ?_42
      24  ?_43
      24  ?_44
      40  ?_45
      40  ?_46
      16  ?_5
      16  ?_6
      60  ?_7
      48  ?_8
     172  ?_9
     144  AC
          MTR_RxQ
     212  AC_COUNTInit
      30  APP_CSNC_CommHandler
    2394  APP_MaterCommHandler
     312  APP_MaterDispHandler
      98  APP_MaterInit
    1772  AppTaskMater
    1208  AppTaskMaterTCB
          AppTaskMaterStk
      62  App_TaskMaterCreate
      96  DC_COUNTInit
      92  EXTI0_ISRHandler
      96  EXTI9_5_ISRHandler
     140  History
     140  Mater
     160  PVD_IRQHandler
      78  PWR_PVD_Init
     200  SavePowerData
      40  g_DipDisVal
      36  recordsfr
          g_Flash_Adr

 
 1 708 bytes in section .bss
   100 bytes in section .rodata
 6 878 bytes in section .text
 
 6 878 bytes of CODE  memory
   100 bytes of CONST memory
 1 708 bytes of DATA  memory

Errors: none
Warnings: 4
