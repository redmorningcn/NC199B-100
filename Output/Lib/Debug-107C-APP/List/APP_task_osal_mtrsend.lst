###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       26/Dec/2017  20:53:06
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC199B-100\Library\Source\APP\Tasks\APP_task_osal_mtrsend.c
#    Command line =  
#        F:\iar\NC199B-100\Library\Source\APP\Tasks\APP_task_osal_mtrsend.c -D
#        USE_STDPERIPH_DRIVER -D STM32F10X_CL -D DEBUG -D IMAGE_A -D
#        STM32F103RC -D STM32_FLASH_SIZE=256 -D HSE_VALUE=25000000 -lCN
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-107C-APP\List\
#        -o
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-107C-APP\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC199B-100\Library\Project\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\AES\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Config\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Port\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\OS\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Config\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Protocol\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Iap\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Driver\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\uCOS-III\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\CoreSupport\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\STM32F10x_StdPeriph_Driver\inc\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\ARM-Cortex-M3\IAR\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-LIB\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\OSAL\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\OSAL\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Source\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\option\ -Om
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-107C-APP\List\APP_task_osal_mtrsend.lst
#    Object file  =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-107C-APP\Obj\APP_task_osal_mtrsend.o
#
###############################################################################

F:\iar\NC199B-100\Library\Source\APP\Tasks\APP_task_osal_mtrsend.c
      1          /*******************************************************************************
      2           *   Revised:        All copyrights reserved to redmorningcn.
      3           *   Revision:       v1.0
      4           *   Writer:	     redmorningcn.
      5           *
      6           *   Description:    双击选中 store 按 Ctrl + H, 钩选 Match the case, Replace with
      7           *                   输入您要的名字，点击 Replace All
      8           *                   双击选中 Store 按 Ctrl + H, 钩选 Match the case, Replace with
      9           *                   输入您要的名字，点击 Replace All
     10           *                   双击选中 STORE 按 Ctrl + H, 钩选 Match the case, Replace with
     11           *                   输入您要的名字，点击 Replace All
     12           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_STORE_PRIO ）
     13           *                                            和 任务堆栈（ APP_TASK_STORE_STK_SIZE ）大小
     14           *                   在 app.h 中声明本任务的     创建函数（ void  App_TaskStoreCreate(void) ）
     15           *                                            和 看门狗标志位 （ WDTFLAG_Store ）
     16           *
     17           *   Notes:
     18           *     				E-mail: redmorningcn@qq.com
     19           *
     20           *******************************************************************************/
     21          
     22          /*******************************************************************************
     23           * INCLUDES
     24           */
     25          #include <includes.h>
     26          #include <global.h>
     27          #include <app_ctrl.h>
     28          #include <cpu.h>
     29          
     30               
     31          /*******************************************************************************
     32           * CONSTANTS
     33           */
     34          
     35          /*******************************************************************************
     36           * MACROS
     37           */
     38          
     39          /*******************************************************************************
     40           * TYPEDEFS
     41           */
     42          
     43          /*******************************************************************************
     44           * LOCAL VARIABLES
     45           */
     46          
     47          #if ( OSAL_EN == DEF_ENABLED )
     48          #else
     49          /***********************************************
     50          * 描述： 任务控制块（TCB）
     51          */
     52          //static  OS_TCB   AppTaskStoreTCB;
     53          
     54          /***********************************************
     55          * 描述： 任务堆栈（STACKS）
     56          */
     57          //static  CPU_STK  AppTaskStoreStk[ APP_TASK_STORE_STK_SIZE ];
     58          
     59          #endif
     60          /*******************************************************************************
     61           * GLOBAL VARIABLES
     62           */
     63          
     64          /*******************************************************************************
     65           * LOCAL FUNCTIONS
     66           */
     67          #if ( OSAL_EN == DEF_ENABLED )
     68          #else
     69          //extern	void    BSP_StoreInit(void);
     70          #endif
     71          
     72          /*******************************************************************************
     73           * GLOBAL FUNCTIONS
     74           */
     75          
     76          /*******************************************************************************
     77           * EXTERN VARIABLES
     78           */
     79          /*******************************************************************************/
     80          
     81          /*******************************************************************************
     82           * 功    能：  任务初始化
     83           * 入口参数： 	无
     84           * 出口参数： 	无
     85           * 作　 　者： 	redmornigcn
     86           * 创建日期： 	2017-12-15
     87           * 修    改：
     88           * 修改日期：
     89           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     90          void TaskInitMtrSend(void)
     91          {    
     92          //    /***********************************************
     93          //    * 描述： 初始化本任务用到的相关硬件
     94          //    */
     95          
     96          //初始化定时器
     97              osal_start_timerEx( OS_TASK_ID_MTRSNED,
     98                                OS_EVT_MTRSEND_TICKS,
     99                                1000);                                 //1秒后再存储
   \                     TaskInitMtrSend: (+1)
   \   00000000   0xF44F 0x727A      MOV      R2,#+1000
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x2005             MOVS     R0,#+5
   \   00000008   0x.... 0x....      B.W      osal_start_timerEx
    100          }
    101          
    102          /*******************************************************************************
    103           * 作　 　者： 	redmorningcn.
    104           * 创建日期： 	2017-05-15
    105           * 修    改：
    106           * 修改日期：
    107           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    108          osalEvt  TaskMtrSendEvtProcess(osalTid task_id, osalEvt task_event)
    109          {
   \                     TaskMtrSendEvtProcess: (+1)
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
   \   00000002   0x460C             MOV      R4,R1
    110              OS_ERR      err;
    111          
    112              if( task_event & OS_EVT_STORE_TICKS ) {
   \   00000004   0x07E0             LSLS     R0,R4,#+31
   \   00000006   0xD510             BPL.N    ??TaskMtrSendEvtProcess_0
    113          
    114                  OS_FlagPost(( OS_FLAG_GRP *)&Ctrl.Os.CommEvtFlagGrp,
    115                              ( OS_FLAGS     ) COMM_EVT_FLAG_MTR_TIMEOUT,
    116                              ( OS_OPT       ) OS_OPT_POST_FLAG_SET,
    117                              ( CPU_TS       ) 0,
    118                              ( OS_ERR      *) &err);        
   \   00000008   0xA801             ADD      R0,SP,#+4
   \   0000000A   0x9000             STR      R0,[SP, #+0]
   \   0000000C   0x2300             MOVS     R3,#+0
   \   0000000E   0x461A             MOV      R2,R3
   \   00000010   0x2108             MOVS     R1,#+8
   \   00000012   0x....             LDR.N    R0,??DataTable0
   \   00000014   0x.... 0x....      BL       OS_FlagPost
    119                  
    120                  osal_start_timerEx( OS_TASK_ID_MTRSNED,
    121                                     OS_EVT_MTRSEND_TICKS,
    122                                     1000);
   \   00000018   0xF44F 0x727A      MOV      R2,#+1000
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x2005             MOVS     R0,#+5
   \   00000020   0x.... 0x....      BL       osal_start_timerEx
    123                  //1000);
    124                  return ( task_event ^ OS_EVT_MTRSEND_TICKS );
   \   00000024   0xF084 0x0001      EOR      R0,R4,#0x1
   \   00000028   0xBD16             POP      {R1,R2,R4,PC}
    125              }
    126              
    127              return  task_event;
   \                     ??TaskMtrSendEvtProcess_0: (+1)
   \   0000002A   0x4620             MOV      R0,R4
   \   0000002C   0xBD16             POP      {R1,R2,R4,PC}    ;; return
    128          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     Ctrl+0x462
    129          
    130          
    131          
    132          /*******************************************************************************
    133           * 				                    end of file                                *
    134           *******************************************************************************/
    135          //#endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   TaskInitMtrSend
         0   -> osal_start_timerEx
      16   TaskMtrSendEvtProcess
        16   -> OS_FlagPost
        16   -> osal_start_timerEx


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
      12  TaskInitMtrSend
      46  TaskMtrSendEvtProcess

 
 62 bytes in section .text
 
 62 bytes of CODE memory

Errors: none
Warnings: none
