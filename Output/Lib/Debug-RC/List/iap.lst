###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       20/Nov/2017  11:04:11
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC199B-100\Library\Source\APP\Iap\iap.c
#    Command line =  
#        F:\iar\NC199B-100\Library\Source\APP\Iap\iap.c -D USE_STDPERIPH_DRIVER
#        -D _STM32F10X_HD -D STM32F10X_CL -D DEBUG -D STM32F103RC -D
#        STM32_FLASH_SIZE=256 -D HSE_VALUE=25000000 -lCN
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\
#        -o
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC199B-100\Library\Project\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\AES\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Config\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Port\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\OS\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Config\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Protocol\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Iap\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Driver\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\uCOS-III\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\CoreSupport\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\STM32F10x_StdPeriph_Driver\inc\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\ARM-Cortex-M3\IAR\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-LIB\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\OSAL\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\OSAL\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Source\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\option\ -Om
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\iap.lst
#    Object file  =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\iap.o
#
###############################################################################

F:\iar\NC199B-100\Library\Source\APP\Iap\iap.c
      1          /*******************************************************************************
      2           *   Filename:       iap.c
      3           *   Revised:        $Date: 2014-04-23
      4           *   Revision:       $
      5           *	 Writer:		 Wuming Shen.
      6           *
      7           *   Description:    
      8           *
      9           *   Notes:        
     10           *					   
     11           *			
     12           *   All copyrights reserved to Wuming Shen.
     13           *
     14           *******************************************************************************/
     15          
     16          /*******************************************************************************
     17           * INCLUDES
     18           */
     19          #include <includes.h>
     20          #include <global.h>
     21          #include <iap.h>
     22          #include <os.h>
     23          
     24          #define BSP_IAP_MODULE_EN 1
     25          #if BSP_IAP_MODULE_EN > 0
     26          /*******************************************************************************
     27           * CONSTANTS
     28           */
     29          
     30          /*******************************************************************************
     31           * MACROS
     32           */
     33          
     34          /*******************************************************************************
     35           * TYPEDEFS
     36           */
     37          typedef  void (*pFunction)(void);			    //定义一个函数类型的参数.
     38          

   \                                 In section .bss, align 4
     39          StrIapState Iap  = {0};
   \                     Iap:
   \   00000000                      DS8 52
     40          /*******************************************************************************
     41           * LOCAL VARIABLES
     42           */
     43          /***********************************************
     44          * 描述：定义函数指针
     45          */

   \                                 In section .bss, align 4
     46          pFunction   pApp;
   \                     pApp:
   \   00000000                      DS8 4
     47          
     48          /*******************************************************************************
     49           * GLOBAL VARIABLES
     50           */
     51          
     52          /*******************************************************************************
     53           * LOCAL FUNCTIONS
     54           */
     55          
     56          /*******************************************************************************
     57           * GLOBAL FUNCTIONS
     58           */
     59          
     60          /*******************************************************************************
     61           * EXTERN VARIABLES
     62           */
     63          
     64           /*******************************************************************************
     65           * EXTERN FUNCTIONS
     66           */
     67           
     68          /*******************************************************************************/
     69          
     70          /*******************************************************************************
     71           * 名    称： IAP_DevDeInit()
     72           * 功    能： 设备恢复默认值
     73           * 入口参数：
     74           * 出口参数： 无
     75           * 作    者： 无名沈
     76           * 创建日期： 2014-04-23
     77           * 修    改： 
     78           * 修改日期： 
     79           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     80          void IAP_DevDeInit(void)
     81          {    
   \                     IAP_DevDeInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     82              /***********************************************
     83              * 描述： 端口恢复默认
     84              */
     85              GPIO_DeInit(GPIOA);
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable14  ;; 0x40010800
   \   00000006   0x.... 0x....      BL       GPIO_DeInit
     86              GPIO_DeInit(GPIOB);
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable14_1  ;; 0x40010c00
   \   0000000E   0x.... 0x....      BL       GPIO_DeInit
     87              GPIO_DeInit(GPIOC);
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable14_2  ;; 0x40011000
   \   00000016   0x.... 0x....      BL       GPIO_DeInit
     88              GPIO_DeInit(GPIOD);
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable14_3  ;; 0x40011400
   \   0000001E   0x.... 0x....      BL       GPIO_DeInit
     89              GPIO_DeInit(GPIOE);
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable14_4  ;; 0x40011800
   \   00000026   0x.... 0x....      BL       GPIO_DeInit
     90              
     91              /***********************************************
     92              * 描述： 串口恢复默认
     93              */
     94              USART_DeInit(USART1);
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable14_5  ;; 0x40013800
   \   0000002E   0x.... 0x....      BL       USART_DeInit
     95              USART_DeInit(USART2);
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable14_6  ;; 0x40004400
   \   00000036   0x.... 0x....      BL       USART_DeInit
     96              USART_DeInit(USART3);
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable14_7  ;; 0x40004800
   \   0000003E   0x.... 0x....      BL       USART_DeInit
     97                  
     98              /***********************************************
     99              * 描述： 定时器恢复默认
    100              */
    101              TIM_DeInit(TIM1);
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable14_8  ;; 0x40012c00
   \   00000046   0x.... 0x....      BL       TIM_DeInit
    102              TIM_DeInit(TIM2);
   \   0000004A   0xF04F 0x4080      MOV      R0,#+1073741824
   \   0000004E   0x.... 0x....      BL       TIM_DeInit
    103              TIM_DeInit(TIM2);
   \   00000052   0xF04F 0x4080      MOV      R0,#+1073741824
   \   00000056   0x.... 0x....      BL       TIM_DeInit
    104              TIM_DeInit(TIM3);
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable14_9  ;; 0x40000400
   \   0000005E   0x.... 0x....      BL       TIM_DeInit
    105              TIM_DeInit(TIM4);
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable14_10  ;; 0x40000800
   \   00000066   0x.... 0x....      BL       TIM_DeInit
    106              TIM_DeInit(TIM5);
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable14_11  ;; 0x40000c00
   \   0000006E   0x.... 0x....      BL       TIM_DeInit
    107              TIM_DeInit(TIM6);
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable14_12  ;; 0x40001000
   \   00000076   0x.... 0x....      BL       TIM_DeInit
    108              TIM_DeInit(TIM7);
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable14_13  ;; 0x40001400
   \   0000007E   0x.... 0x....      BL       TIM_DeInit
    109              TIM_DeInit(TIM8);
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable14_14  ;; 0x40013400
   \   00000086   0xE8BD 0x4002      POP      {R1,LR}
   \   0000008A   0x.... 0x....      B.W      TIM_DeInit
    110          }
    111          
    112          /*******************************************************************************
    113           * 名    称： IAP_GetStatus()
    114           * 功    能： 获取程序状态
    115           * 入口参数：
    116           * 出口参数： 无
    117           * 作    者： 无名沈
    118           * 创建日期： 2014-04-23
    119           * 修    改： 
    120           * 修改日期： 
    121           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    122          u8 IAP_GetStatus(void)
    123          {
   \                     IAP_GetStatus: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    124              BSP_FlashReadBytes(FLASH_APP_STATUS, (u8 *)&Iap.Status, 1);
   \   00000002   0x.... 0x....      LDR.W    R4,??DataTable14_15
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x1D21             ADDS     R1,R4,#+4
   \   0000000A   0xF643 0x70FB      MOVW     R0,#+16379
   \   0000000E   0x.... 0x....      BL       BSP_FlashReadBytes
    125              
    126              if ( Iap.Status > IAP_STS_SUCCEED ) 
   \   00000012   0x7920             LDRB     R0,[R4, #+4]
   \   00000014   0x2807             CMP      R0,#+7
   \   00000016   0xDB01             BLT.N    ??IAP_GetStatus_0
    127                  Iap.Status = 0;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x7120             STRB     R0,[R4, #+4]
    128              
    129              return  Iap.Status;
   \                     ??IAP_GetStatus_0: (+1)
   \   0000001C   0x7920             LDRB     R0,[R4, #+4]
   \   0000001E   0xBD10             POP      {R4,PC}          ;; return
    130          }
    131          
    132          /*******************************************************************************
    133           * 名    称： IAP_SetStatus()
    134           * 功    能： 设置程序状态
    135           * 入口参数：
    136           * 出口参数： 无
    137           * 作    者： 无名沈
    138           * 创建日期： 2014-04-23
    139           * 修    改： 
    140           * 修改日期： 
    141           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    142          void IAP_SetStatus(u8 status)
    143          {
   \                     IAP_SetStatus: (+1)
   \   00000000   0xB501             PUSH     {R0,LR}
    144              if ( Iap.Status == status )
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable14_15
   \   00000006   0x7901             LDRB     R1,[R0, #+4]
   \   00000008   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   0000000C   0x4291             CMP      R1,R2
   \   0000000E   0xD007             BEQ.N    ??IAP_SetStatus_0
    145                  return;
    146              Iap.Status  = status;
   \   00000010   0x4611             MOV      R1,R2
   \   00000012   0x7101             STRB     R1,[R0, #+4]
    147              BSP_FlashWriteBytes(FLASH_APP_STATUS, (u8 *)&status, 1);
   \   00000014   0x2201             MOVS     R2,#+1
   \   00000016   0x4669             MOV      R1,SP
   \   00000018   0xF643 0x70FB      MOVW     R0,#+16379
   \   0000001C   0x.... 0x....      BL       BSP_FlashWriteBytes
    148          }
   \                     ??IAP_SetStatus_0: (+1)
   \   00000020   0xBD01             POP      {R0,PC}          ;; return
    149          
    150          /*******************************************************************************
    151           * 名    称： IAP_GetAppAddr()
    152           * 功    能： 获取应用程序地址
    153           * 入口参数：
    154           * 出口参数： 无
    155           * 作    者： 无名沈
    156           * 创建日期： 2014-04-23
    157           * 修    改： 
    158           * 修改日期： 
    159           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    160          u32 IAP_GetAppAddr(void)
    161          {
   \                     IAP_GetAppAddr: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    162              u32     chkAddr;
    163              BSP_FlashReadBytes(FLASH_APP_ADDR_SAVE, (u8 *)&chkAddr, 4);
   \   00000002   0x2204             MOVS     R2,#+4
   \   00000004   0x4669             MOV      R1,SP
   \   00000006   0xF643 0x70FC      MOVW     R0,#+16380
   \   0000000A   0x.... 0x....      BL       BSP_FlashReadBytes
    164              return  chkAddr;
   \   0000000E   0x9800             LDR      R0,[SP, #+0]
   \   00000010   0xBD02             POP      {R1,PC}          ;; return
    165          }
    166          
    167          /*******************************************************************************
    168           * 名    称： IAP_SetAppAddr()
    169           * 功    能： 设置应用程序地址
    170           * 入口参数：
    171           * 出口参数： 无
    172           * 作    者： 无名沈
    173           * 创建日期： 2014-04-23
    174           * 修    改： 
    175           * 修改日期： 
    176           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    177          u8 IAP_SetAppAddr(u32 appAddr)
    178          {   
   \                     IAP_SetAppAddr: (+1)
   \   00000000   0xB501             PUSH     {R0,LR}
    179              /***********************************************
    180              * 描述： 保存程序地址
    181              */
    182              if ( appAddr != IAP_GetAppAddr() ) {
   \   00000002   0x.... 0x....      BL       IAP_GetAppAddr
   \   00000006   0x9900             LDR      R1,[SP, #+0]
   \   00000008   0x4281             CMP      R1,R0
   \   0000000A   0xD009             BEQ.N    ??IAP_SetAppAddr_0
    183                  if ( 4 == 
    184                      BSP_FlashWriteBytes(FLASH_APP_ADDR_SAVE, (u8 *)&appAddr, 4) )
   \   0000000C   0x2204             MOVS     R2,#+4
   \   0000000E   0x4669             MOV      R1,SP
   \   00000010   0xF643 0x70FC      MOVW     R0,#+16380
   \   00000014   0x.... 0x....      BL       BSP_FlashWriteBytes
   \   00000018   0x2804             CMP      R0,#+4
   \   0000001A   0xD101             BNE.N    ??IAP_SetAppAddr_0
    185                      return TRUE;
   \   0000001C   0x2001             MOVS     R0,#+1
   \   0000001E   0xBD02             POP      {R1,PC}
    186              }
    187              return FALSE;
   \                     ??IAP_SetAppAddr_0: (+1)
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0xBD02             POP      {R1,PC}          ;; return
    188          }
    189          
    190          /*******************************************************************************
    191           * 名    称： IAP_JumpTo()
    192           * 功    能： 跳转到应用程序段
    193           * 入口参数：
    194           * 出口参数： 无
    195           * 作    者： 无名沈
    196           * 创建日期： 2014-04-23
    197           * 修    改： 
    198           * 修改日期： 
    199           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    200          void IAP_JumpTo(u32 appAddr)
    201          {    
   \                     IAP_JumpTo: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
    202              u32     JumpAddress = 0;
    203              u8      cpu_sr;
    204                  
    205              /***********************************************
    206              * 描述： 保存程序地址
    207              */
    208              IAP_SetAppAddr(appAddr);
   \   00000004   0x.... 0x....      BL       IAP_SetAppAddr
    209              /***********************************************
    210              * 描述： 关中断，防止值被中断修改
    211              */
    212              CPU_CRITICAL_ENTER();
   \   00000008   0x.... 0x....      BL       CPU_SR_Save
   \   0000000C   0x4605             MOV      R5,R0
   \   0000000E   0x.... 0x....      BL       CPU_IntDisMeasStart
    213              /***********************************************
    214              * 描述： 外设恢复默认，避免进入应用程序后影响程序正常运行
    215              */
    216              IAP_DevDeInit();  
   \   00000012   0x.... 0x....      BL       IAP_DevDeInit
    217              /***********************************************
    218              * 描述： 获取应用入口及初始化堆栈指针
    219              */
    220              JumpAddress   =*(volatile u32*) (appAddr + 4); // 地址+4为PC地址
   \   00000016   0x6860             LDR      R0,[R4, #+4]
    221              pApp          = (pFunction)JumpAddress;         // 函数指针指向APP
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable14_16
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    222              __set_MSP       (*(volatile u32*) appAddr);    // 初始化主堆栈指针（MSP）
   \   0000001E   0x6820             LDR      R0,[R4, #+0]
   \   00000020   0xF380 0x8808      MSR      MSP,R0
    223              __set_PSP       (*(volatile u32*) appAddr);    // 初始化进程堆栈指针（PSP）
   \   00000024   0x6820             LDR      R0,[R4, #+0]
   \   00000026   0xF380 0x8809      MSR      PSP,R0
    224              __set_CONTROL   (0);                            // 清零CONTROL
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0xF380 0x8814      MSR      CONTROL,R0
    225              /***********************************************
    226              * 描述： 跳转到APP程序
    227              */
    228              pApp();
   \   00000030   0x6808             LDR      R0,[R1, #+0]
   \   00000032   0x4780             BLX      R0
    229              
    230              CPU_CRITICAL_EXIT();
   \   00000034   0x.... 0x....      BL       CPU_IntDisMeasStop
   \   00000038   0xB2ED             UXTB     R5,R5
   \   0000003A   0x4628             MOV      R0,R5
   \   0000003C   0xE8BD 0x4032      POP      {R1,R4,R5,LR}
   \   00000040   0x.... 0x....      B.W      CPU_SR_Restore
    231          }
    232          
    233          /*******************************************************************************
    234           * 名    称： IAP_GetAppAStatus()
    235           * 功    能： 检查程序A是否OK
    236           * 入口参数：
    237           * 出口参数： 无
    238           * 作　　 者： 无名沈
    239           * 创建日期： 2014-04-23
    240           * 修    改： 
    241           * 修改日期： 
    242           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    243          u8 IAP_GetAppAStatus(void)
    244          {
    245              /***********************************************
    246              * 描述： 检查堆栈是否合法
    247              */
    248              if (((*(volatile u32*)FLASH_ADDR_APP_A) & 0x2FFE0000 ) == 0x20000000) {
   \                     IAP_GetAppAStatus: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable14_17  ;; 0x8014000
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable14_18  ;; 0x2ffe0000
   \   0000000A   0x4008             ANDS     R0,R1,R0
   \   0000000C   0xF1B0 0x5F00      CMP      R0,#+536870912
   \   00000010   0xD101             BNE.N    ??IAP_GetAppAStatus_0
    249                  /***********************************************
    250                  * 描述： 关中断，防止值被中断修改
    251                  */
    252                  return TRUE;
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0x4770             BX       LR
    253              }
    254              
    255              return FALSE;
   \                     ??IAP_GetAppAStatus_0: (+1)
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x4770             BX       LR               ;; return
    256          }
    257          
    258          /*******************************************************************************
    259           * 名    称： IAP_GetAppAStatus()
    260           * 功    能： 检查程序A是否OK
    261           * 入口参数：
    262           * 出口参数： 无
    263           * 作　　 者： 无名沈
    264           * 创建日期： 2014-04-23
    265           * 修    改： 
    266           * 修改日期： 
    267           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    268          u8 IAP_GetAppBStatus(void)
    269          {
    270              /***********************************************
    271              * 描述： 检查堆栈是否合法
    272              */
    273              if (((*(volatile u32*)FLASH_ADDR_APP_B) & 0x2FFE0000 ) == 0x20000000) {
   \                     IAP_GetAppBStatus: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable14_19  ;; 0x8028000
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable14_18  ;; 0x2ffe0000
   \   0000000A   0x4008             ANDS     R0,R1,R0
   \   0000000C   0xF1B0 0x5F00      CMP      R0,#+536870912
   \   00000010   0xD101             BNE.N    ??IAP_GetAppBStatus_0
    274                  /***********************************************
    275                  * 描述： 关中断，防止值被中断修改
    276                  */
    277                  return TRUE;
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0x4770             BX       LR
    278              }
    279              
    280              return FALSE;
   \                     ??IAP_GetAppBStatus_0: (+1)
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x4770             BX       LR               ;; return
    281          }
    282          
    283          /*******************************************************************************
    284           * 名    称： IAP_JumpToAppA()
    285           * 功    能： 跳转到应用程序段
    286           * 入口参数：
    287           * 出口参数： 无
    288           * 作　　 者： 无名沈
    289           * 创建日期： 2014-04-23
    290           * 修    改： 
    291           * 修改日期： 
    292           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    293          u8 IAP_JumpToAppA(void)
    294          {
   \                     IAP_JumpToAppA: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    295              /***********************************************
    296              * 描述： 检查堆栈是否合法
    297              */
    298              if ( IAP_GetAppAStatus() ) {
   \   00000002   0x.... 0x....      BL       IAP_GetAppAStatus
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD003             BEQ.N    ??IAP_JumpToAppA_0
    299                  /***********************************************
    300                  * 描述： 关中断，防止值被中断修改
    301                  */
    302                  IAP_JumpTo(FLASH_ADDR_APP_A);
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable14_17  ;; 0x8014000
   \   0000000E   0x.... 0x....      BL       IAP_JumpTo
    303              }
    304              
    305              return FALSE;
   \                     ??IAP_JumpToAppA_0: (+1)
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xBD02             POP      {R1,PC}          ;; return
    306          }
    307          
    308          /*******************************************************************************
    309           * 名    称： IAP_JumpToAppB()
    310           * 功    能： 跳转到应用程序段
    311           * 入口参数：
    312           * 出口参数： 无
    313           * 作　　 者： 无名沈
    314           * 创建日期： 2014-04-23
    315           * 修    改： 
    316           * 修改日期： 
    317           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    318          u8 IAP_JumpToAppB(void)
    319          {
   \                     IAP_JumpToAppB: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    320              /***********************************************
    321              * 描述： 检查堆栈是否合法
    322              */
    323              if ( IAP_GetAppBStatus() ) {
   \   00000002   0x.... 0x....      BL       IAP_GetAppBStatus
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD003             BEQ.N    ??IAP_JumpToAppB_0
    324                  /***********************************************
    325                  * 描述： 关中断，防止值被中断修改
    326                  */
    327                  IAP_JumpTo(FLASH_ADDR_APP_B);
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable14_19  ;; 0x8028000
   \   0000000E   0x.... 0x....      BL       IAP_JumpTo
    328              }
    329              
    330              return FALSE;
   \                     ??IAP_JumpToAppB_0: (+1)
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xBD02             POP      {R1,PC}          ;; return
    331          }
    332          
    333          /*******************************************************************************
    334           * 名    称： IAP_JumpToApp()
    335           * 功    能： 跳转到应用程序段地址
    336           * 入口参数： appxaddr:用户代码起始地址.
    337           * 出口参数： 无
    338           * 作　　 者： 无名沈
    339           * 创建日期： 2014-04-23
    340           * 修    改： 
    341           * 修改日期： 
    342           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    343          u8 IAP_JumpToAddr(u32 appAddr)
    344          {    
   \                     IAP_JumpToAddr: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    345              /***********************************************
    346              * 描述： 如果跳转程序为本身则不跳转
    347              */
    348              if ( appAddr == IAP_SELF_APP_ADDR ) {
   \   00000002   0xF1B0 0x6F00      CMP      R0,#+134217728
   \   00000006   0xD105             BNE.N    ??IAP_JumpToAddr_0
    349                  /***********************************************
    350                  * 描述： 保存程序地址
    351                  */
    352                  IAP_SetAppAddr(appAddr);
   \   00000008   0xF04F 0x6000      MOV      R0,#+134217728
   \   0000000C   0x.... 0x....      BL       IAP_SetAppAddr
    353                  return FALSE;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xBD02             POP      {R1,PC}
    354              }
    355              /***********************************************
    356              * 描述： 检查堆栈是否合法
    357              */
    358              if (((*(volatile u32*)appAddr) & 0x2FFE0000 ) == 0x20000000) {
   \                     ??IAP_JumpToAddr_0: (+1)
   \   00000014   0x6801             LDR      R1,[R0, #+0]
   \   00000016   0x.... 0x....      LDR.W    R2,??DataTable14_18  ;; 0x2ffe0000
   \   0000001A   0x4011             ANDS     R1,R2,R1
   \   0000001C   0xF1B1 0x5F00      CMP      R1,#+536870912
   \   00000020   0xD101             BNE.N    ??IAP_JumpToAddr_1
    359                  IAP_JumpTo(appAddr);
   \   00000022   0x.... 0x....      BL       IAP_JumpTo
    360              }
    361              
    362              IAP_SetStatus(IAP_STS_FAILED);
   \                     ??IAP_JumpToAddr_1: (+1)
   \   00000026   0x2005             MOVS     R0,#+5
   \   00000028   0x.... 0x....      BL       IAP_SetStatus
    363              return FALSE;
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0xBD02             POP      {R1,PC}          ;; return
    364          }
    365          
    366          /*******************************************************************************
    367           * 名    称： IAP_Programing()
    368           * 功    能： IAP_编程中，复位超时计数器
    369           * 入口参数：
    370           * 出口参数： 无
    371           * 作    者： 无名沈
    372           * 创建日期： 2016-01-09
    373           * 修    改： 
    374           * 修改日期： 
    375           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    376          void IAP_Programing(void)
    377          {
   \                     IAP_Programing: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    378              IAP_SetStatus(IAP_STS_PROGRAMING);
   \   00000002   0x2003             MOVS     R0,#+3
   \   00000004   0x.... 0x....      BL       IAP_SetStatus
    379              /***********************************************
    380              * 描述： 串口通讯超时计数器，收到口数据时会清零，此处只增加
    381              */
    382              Iap.TimeOut = 0;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable14_15
   \   0000000E   0x8148             STRH     R0,[R1, #+10]
    383          }
   \   00000010   0xBD01             POP      {R0,PC}          ;; return
    384          
    385          /*******************************************************************************
    386           * 名    称： IAP_Exit()
    387           * 功    能： 退出IAP检测
    388           * 入口参数：
    389           * 出口参数： 无
    390           * 作    者： 无名沈
    391           * 创建日期： 2016-01-09
    392           * 修    改： 
    393           * 修改日期： 
    394           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    395          void IAP_Exit(u8 timeout)
    396          {    
    397              if ( Iap.Status == IAP_STS_DEF )
   \                     IAP_Exit: (+1)
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable14_15
   \   00000004   0x790A             LDRB     R2,[R1, #+4]
   \   00000006   0x2A00             CMP      R2,#+0
   \   00000008   0xD100             BNE.N    ??IAP_Exit_0
   \   0000000A   0x4770             BX       LR
    398                  return;
    399              if ( Iap.Status == IAP_STS_SUCCEED )
   \                     ??IAP_Exit_0: (+1)
   \   0000000C   0xB580             PUSH     {R7,LR}
   \   0000000E   0x2A06             CMP      R2,#+6
   \   00000010   0xD010             BEQ.N    ??IAP_Exit_1
    400                  return;
    401              if ( Iap.Status == IAP_STS_FAILED )
   \   00000012   0x2A05             CMP      R2,#+5
   \   00000014   0xD00E             BEQ.N    ??IAP_Exit_1
    402                  return;
    403              /***********************************************
    404              * 描述： 串口通讯超时计数器，收到口数据时会清零，此处只增加
    405              */
    406              if ( Iap.TimeOut < timeout ) {
   \   00000016   0x894A             LDRH     R2,[R1, #+10]
   \   00000018   0x4282             CMP      R2,R0
   \   0000001A   0xD202             BCS.N    ??IAP_Exit_2
    407                  Iap.TimeOut++;
   \   0000001C   0x1C50             ADDS     R0,R2,#+1
   \   0000001E   0x8148             STRH     R0,[R1, #+10]
   \   00000020   0xBD01             POP      {R0,PC}
    408              } else {
    409                  /***********************************************
    410                  * 描述： 
    411                  */ 
    412                  IAP_JumpToApp(0);        
   \                     ??IAP_Exit_2: (+1)
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x.... 0x....      BL       IAP_JumpToApp
    413                  IAP_SetStatus(IAP_STS_FAILED);
   \   00000028   0x2005             MOVS     R0,#+5
   \   0000002A   0x.... 0x....      BL       IAP_SetStatus
    414                  IAP_FileInfoInit();
   \   0000002E   0xE8BD 0x4001      POP      {R0,LR}
   \   00000032   0x....             B.N      IAP_FileInfoInit
    415              }
    416          }
   \                     ??IAP_Exit_1: (+1)
   \   00000034   0xBD01             POP      {R0,PC}          ;; return
    417          
    418          /*******************************************************************************
    419           * 名    称： IAP_Reset()
    420           * 功    能： IAP复位，如果是引导程序，则不复位，只更新状态
    421           * 入口参数：
    422           * 出口参数： 无
    423           * 作    者： 无名沈
    424           * 创建日期： 2014-04-23
    425           * 修    改： 
    426           * 修改日期： 
    427           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    428          void IAP_Reset(void)
    429          {    
   \                     IAP_Reset: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    430              
    431              IAP_FileInfoInit();                             // 初始化升级信息
   \   00000002   0x.... 0x....      BL       IAP_FileInfoInit
    432              IAP_SetStatus(IAP_STS_RST); 
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0x.... 0x....      BL       IAP_SetStatus
    433          #if defined     (IMAGE_A)
    434              /***********************************************
    435              * 描述： 程序A
    436              */
    437              //IAP_JumpToAddr(FLASH_BOOT_ADDR);
    438              NVIC_SystemReset();
    439          #elif defined   (IMAGE_B)
    440              /***********************************************
    441              * 描述： 程序B
    442              */ 
    443              //IAP_JumpToAddr(FLASH_BOOT_ADDR);
    444              NVIC_SystemReset();
    445          #else
    446              /***********************************************
    447              * 描述： 程序引导
    448              */
    449              //IAP_JumpToAddr(FLASH_BOOT_ADDR);
    450              
    451              /***********************************************
    452              * 描述： FLASH解锁
    453              */
    454              FLASH_Unlock();
   \   0000000C   0x.... 0x....      BL       FLASH_Unlock
    455              /***********************************************
    456              * 描述： FLASH擦除整页
    457              */
    458              for ( int i = 0; i < FLASH_SIZE_A / STM_SECTOR_SIZE; i++ ) {
   \   00000010   0x2400             MOVS     R4,#+0
   \   00000012   0xE007             B.N      ??IAP_Reset_0
    459                  FLASH_ErasePage (FLASH_ADDR_APP_A + i * STM_SECTOR_SIZE);
   \                     ??IAP_Reset_1: (+1)
   \   00000014   0x02E0             LSLS     R0,R4,#+11
   \   00000016   0xF100 0x6000      ADD      R0,R0,#+134217728
   \   0000001A   0xF500 0x30A0      ADD      R0,R0,#+81920
   \   0000001E   0x.... 0x....      BL       FLASH_ErasePage
    460              } 
   \   00000022   0x1C64             ADDS     R4,R4,#+1
   \                     ??IAP_Reset_0: (+1)
   \   00000024   0x2C28             CMP      R4,#+40
   \   00000026   0xDBF5             BLT.N    ??IAP_Reset_1
    461              /***********************************************
    462              * 描述： FLASH上锁
    463              */ 
    464              FLASH_Lock(); 
   \   00000028   0x.... 0x....      BL       FLASH_Lock
    465          #endif
    466              IAP_SetStatus(IAP_STS_START);  
   \   0000002C   0x2002             MOVS     R0,#+2
   \   0000002E   0xE8BD 0x4010      POP      {R4,LR}
   \   00000032   0x....             B.N      IAP_SetStatus
    467          }
    468          
    469          /*******************************************************************************
    470           * 名    称： IAP_Restart()
    471           * 功    能： IAP复位，如果是引导程序，则不复位，只更新状态
    472           * 入口参数：
    473           * 出口参数： 无
    474           * 作    者： 无名沈
    475           * 创建日期： 2014-04-23
    476           * 修    改： 
    477           * 修改日期： 
    478           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    479          void IAP_Restart(void)
    480          {    
   \                     IAP_Restart: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    481              IAP_FileInfoInit();                          // 初始化升级信息
   \   00000002   0x.... 0x....      BL       IAP_FileInfoInit
    482              IAP_SetStatus(IAP_STS_START); 
   \   00000006   0x2002             MOVS     R0,#+2
   \   00000008   0x.... 0x....      BL       IAP_SetStatus
    483          #if defined     (IMAGE_A)
    484              /***********************************************
    485              * 描述： 程序A
    486              */
    487              //IAP_JumpToAddr(FLASH_BOOT_ADDR);
    488              NVIC_SystemReset();
    489          #elif defined   (IMAGE_B)
    490              /***********************************************
    491              * 描述： 程序B
    492              */ 
    493              //IAP_JumpToAddr(FLASH_BOOT_ADDR);
    494              NVIC_SystemReset();
    495          #else
    496              /***********************************************
    497              * 描述： 程序引导
    498              */
    499              //IAP_JumpToAddr(FLASH_BOOT_ADDR);
    500          
    501              /***********************************************
    502              * 描述： FLASH解锁
    503              */
    504              FLASH_Unlock(); 
   \   0000000C   0x.... 0x....      BL       FLASH_Unlock
    505              /***********************************************
    506              * 描述： FLASH擦除整页
    507              */
    508              for ( int i = 0; i < FLASH_SIZE_A / STM_SECTOR_SIZE; i++ ) {
   \   00000010   0x2400             MOVS     R4,#+0
   \   00000012   0xE007             B.N      ??IAP_Restart_0
    509                  FLASH_ErasePage (FLASH_ADDR_APP_A + i * STM_SECTOR_SIZE);
   \                     ??IAP_Restart_1: (+1)
   \   00000014   0x02E0             LSLS     R0,R4,#+11
   \   00000016   0xF100 0x6000      ADD      R0,R0,#+134217728
   \   0000001A   0xF500 0x30A0      ADD      R0,R0,#+81920
   \   0000001E   0x.... 0x....      BL       FLASH_ErasePage
    510              } 
   \   00000022   0x1C64             ADDS     R4,R4,#+1
   \                     ??IAP_Restart_0: (+1)
   \   00000024   0x2C28             CMP      R4,#+40
   \   00000026   0xDBF5             BLT.N    ??IAP_Restart_1
    511              /***********************************************
    512              * 描述： FLASH上锁
    513              */ 
    514              FLASH_Lock(); 
   \   00000028   0xE8BD 0x4010      POP      {R4,LR}
   \   0000002C   0x.... 0x....      B.W      FLASH_Lock
    515          #endif   
    516          }
    517          /*******************************************************************************
    518           * 名    称： IAP_Finish()
    519           * 功    能： IAP升级结束
    520           * 入口参数：
    521           * 出口参数： 无
    522           * 作    者： 无名沈
    523           * 创建日期： 2014-04-23
    524           * 修    改： 
    525           * 修改日期： 
    526           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    527          void IAP_Finish(void)
    528          {        
   \                     IAP_Finish: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    529              /***********************************************
    530              * 描述： FLASH上锁
    531              */
    532              //FLASH_Lock(); 
    533              IAP_SetStatus(IAP_STS_FINISH);
   \   00000002   0x2004             MOVS     R0,#+4
   \   00000004   0x.... 0x....      BL       IAP_SetStatus
    534              //return;
    535              
    536          #if defined     (IMAGE_A)
    537              /***********************************************
    538              * 描述： 程序A
    539              */
    540              IAP_JumpToAddr(FLASH_ADDR_APP_B);
    541          #elif defined   (IMAGE_B)
    542              /***********************************************
    543              * 描述： 程序B
    544              */ 
    545              IAP_JumpToAddr(FLASH_ADDR_APP_A);
    546          #else
    547              /***********************************************
    548              * 描述： 程序引导
    549              */
    550              IAP_JumpToAddr(FLASH_ADDR_APP_A);
   \   00000008   0x....             LDR.N    R0,??DataTable14_17  ;; 0x8014000
   \   0000000A   0x.... 0x....      BL       IAP_JumpToAddr
    551          #endif
    552              IAP_FileInfoInit();                          // 初始化升级信息
   \   0000000E   0xE8BD 0x4001      POP      {R0,LR}
   \   00000012   0x....             B.N      IAP_FileInfoInit
    553          }
    554          
    555          /*******************************************************************************
    556           * 名    称： IAP_JumpToApp()
    557           * 功    能： 跳转到应用程序段
    558           *            跳转逻辑：检查升级状态，如果升级状态为成功或未知，则跳转到B程序，
    559           *            其他状态不跳转
    560           * 入口参数：
    561           * 出口参数： 无
    562           * 作    者： 无名沈
    563           * 创建日期： 2014-04-23
    564           * 修    改： 
    565           * 修改日期： 
    566           *******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    567          u8 IAP_JumpToApp(u32 flag)
    568          {
   \                     IAP_JumpToApp: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
    569              u8  status  = IAP_GetStatus();
   \   00000004   0x.... 0x....      BL       IAP_GetStatus
   \   00000008   0x4605             MOV      R5,R0
    570              u32 appAddr = IAP_GetAppAddr();
   \   0000000A   0x.... 0x....      BL       IAP_GetAppAddr
   \   0000000E   0x4606             MOV      R6,R0
    571              
    572              if ( flag == 1 ) {
   \   00000010   0x2C01             CMP      R4,#+1
   \   00000012   0xD101             BNE.N    ??IAP_JumpToApp_1
    573                  IAP_FileInfoInit();
   \   00000014   0x.... 0x....      BL       IAP_FileInfoInit
    574              }
    575              
    576              switch ( status ) { 
   \                     ??IAP_JumpToApp_1: (+1)
   \   00000018   0x2D06             CMP      R5,#+6
   \   0000001A   0xD82A             BHI.N    ??IAP_JumpToApp_2
   \   0000001C   0xE8DF 0xF005      TBB      [PC, R5]
   \                     ??IAP_JumpToApp_0:
   \   00000020   0x2C 0x04          DC8      0x2C,0x4,0x29,0xA
   \              0x29 0x0A    
   \   00000024   0x0E 0x1B          DC8      0xE,0x1B,0x1F,0x0
   \              0x1F 0x00    
    577              /***********************************************
    578              * 描述： 0未升级
    579              */
    580              case IAP_STS_DEF:
    581          #if defined     (IMAGE_A)
    582                  /***********************************************
    583                  * 描述： 程序A
    584                  */
    585          #elif defined   (IMAGE_B)
    586                  /***********************************************
    587                  * 描述： 程序B
    588                  */
    589          #else
    590                  /***********************************************
    591                  * 描述： 程序引导
    592                  */
    593                  //IAP_JumpToAddr(FLASH_ADDR_APP_A);
    594          #endif   
    595                  break;
    596              /***********************************************
    597              * 描述： 1重启
    598              */
    599              case IAP_STS_RST:
    600                  IAP_SetStatus(IAP_STS_START);
   \                     ??IAP_JumpToApp_3: (+1)
   \   00000028   0x2002             MOVS     R0,#+2
   \   0000002A   0x.... 0x....      BL       IAP_SetStatus
    601                  IAP_FileInfoInit();                          // 初始化升级信息
   \   0000002E   0x.... 0x....      BL       IAP_FileInfoInit
    602                  break;
   \   00000032   0xE021             B.N      ??IAP_JumpToApp_4
    603              /***********************************************
    604              * 描述： 2开始
    605              */
    606              case IAP_STS_START:
    607                  IAP_SetStatus(IAP_STS_DEF);
    608          #if defined     (IMAGE_A)
    609                  /***********************************************
    610                  * 描述： 程序A
    611                  */
    612          #elif defined   (IMAGE_B)
    613                  /***********************************************
    614                  * 描述： 程序B
    615                  */
    616          #else
    617                  /***********************************************
    618                  * 描述： 程序引导
    619                  */
    620          #endif
    621                  break;
    622              /***********************************************
    623              * 描述： 3升级中
    624              */
    625              case IAP_STS_PROGRAMING:
    626          #if defined     (IMAGE_A)
    627                  /***********************************************
    628                  * 描述： 程序A
    629                  */
    630          #elif defined   (IMAGE_B)
    631                  /***********************************************
    632                  * 描述： 程序B
    633                  */
    634          #else
    635                  /***********************************************
    636                  * 描述： 程序引导
    637                  */
    638          #endif  
    639                  //IAP_SetStatus(IAP_STS_SUCCEED);
    640                  //IAP_JumpToAddr(appAddr);
    641                  //IAP_JumpToAddr(FLASH_ADDR_APP_A);
    642                  IAP_SetStatus(IAP_STS_FAILED);
   \                     ??IAP_JumpToApp_5: (+1)
   \   00000034   0x2005             MOVS     R0,#+5
   \   00000036   0x.... 0x....      BL       IAP_SetStatus
    643                  break;
   \   0000003A   0xE01D             B.N      ??IAP_JumpToApp_4
    644              /***********************************************
    645              * 描述： 4结束
    646              */
    647              case IAP_STS_FINISH:
    648                  Iap.TimeOut = 0;
   \                     ??IAP_JumpToApp_6: (+1)
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x....             LDR.N    R1,??DataTable14_15
   \   00000040   0x8148             STRH     R0,[R1, #+10]
    649                  IAP_SetStatus(IAP_STS_SUCCEED);
   \   00000042   0x2006             MOVS     R0,#+6
   \   00000044   0x.... 0x....      BL       IAP_SetStatus
    650                  //IAP_JumpToAddr(appAddr);
    651                  IAP_JumpToAddr(FLASH_ADDR_APP_A);
   \   00000048   0x....             LDR.N    R0,??DataTable14_17  ;; 0x8014000
   \   0000004A   0x.... 0x....      BL       IAP_JumpToAddr
    652                  IAP_SetStatus(IAP_STS_FAILED);
   \   0000004E   0x2005             MOVS     R0,#+5
   \   00000050   0x.... 0x....      BL       IAP_SetStatus
    653                  break;
   \   00000054   0xE010             B.N      ??IAP_JumpToApp_4
    654              /***********************************************
    655              * 描述： 5失败
    656              */
    657              case IAP_STS_FAILED:
    658                  Iap.TimeOut = 0;
   \                     ??IAP_JumpToApp_7: (+1)
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x....             LDR.N    R1,??DataTable14_15
   \   0000005A   0x8148             STRH     R0,[R1, #+10]
    659                  break;
   \   0000005C   0xE00C             B.N      ??IAP_JumpToApp_4
    660              /***********************************************
    661              * 描述： 6成功
    662              */
    663              case IAP_STS_SUCCEED:
    664          #if defined     (IMAGE_A)
    665                  /***********************************************
    666                  * 描述： 程序A
    667                  */
    668          #elif defined   (IMAGE_B)
    669                  /***********************************************
    670                  * 描述： 程序B
    671                  */
    672          #else
    673                  /***********************************************
    674                  * 描述： 程序引导
    675                  */
    676                  //IAP_SetStatus(IAP_STS_SUCCEED);
    677                  IAP_JumpToAddr(appAddr);
   \                     ??IAP_JumpToApp_8: (+1)
   \   0000005E   0x4630             MOV      R0,R6
   \   00000060   0x.... 0x....      BL       IAP_JumpToAddr
    678                  IAP_JumpToAddr(FLASH_ADDR_APP_A);
   \   00000064   0x....             LDR.N    R0,??DataTable14_17  ;; 0x8014000
   \   00000066   0x.... 0x....      BL       IAP_JumpToAddr
    679                  IAP_SetStatus(IAP_STS_FAILED);
   \   0000006A   0x2005             MOVS     R0,#+5
   \   0000006C   0x.... 0x....      BL       IAP_SetStatus
    680          #endif  
    681                  break;
   \   00000070   0xE002             B.N      ??IAP_JumpToApp_4
    682              /***********************************************
    683              * 描述： 其他：无程序
    684              */
    685              default:
    686                  IAP_SetStatus(IAP_STS_DEF);
   \                     ??IAP_JumpToApp_2: (+1)
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x.... 0x....      BL       IAP_SetStatus
    687                  //IAP_JumpToAddr(FLASH_ADDR_APP_A);
    688                  break;
    689              }
    690              return FALSE;
   \                     ??IAP_JumpToApp_4: (+1)
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0xBD70             POP      {R4-R6,PC}       ;; return
    691          }
    692          
    693          /*******************************************************************************
    694           * 名    称： IAP_Program
    695           * 功    能： 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 
    696           * 入口参数： 
    697           * 出口参数： 
    698           * 作　　者： 无名沈
    699           * 创建日期： 2014-04-23
    700           * 修    改：
    701           * 修改日期：
    702           *******************************************************************************/	

   \                                 In section .text, align 2, keep-with-next
    703          BOOL IAP_FileInfoInit(void)
    704          {   
    705              Iap.Sectors     = Iap.FileSize / STM_SECTOR_SIZE;       // 整扇区数
   \                     IAP_FileInfoInit: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable14_15
   \   00000002   0x68C1             LDR      R1,[R0, #+12]
   \   00000004   0x0ACA             LSRS     R2,R1,#+11
   \   00000006   0x61C2             STR      R2,[R0, #+28]
    706              Iap.FileSize    = Iap.FileSize % STM_SECTOR_SIZE;       // 余字节数
   \   00000008   0x0549             LSLS     R1,R1,#+21
   \   0000000A   0x0D49             LSRS     R1,R1,#+21
   \   0000000C   0x60C1             STR      R1,[R0, #+12]
    707              Iap.Sectors    += Iap.FileSize > 0 ? 1 : 0;             // 如果余字数不为0，扇区数+1
   \   0000000E   0x1E49             SUBS     R1,R1,#+1
   \   00000010   0x4189             SBCS     R1,R1,R1
   \   00000012   0x43C9             MVNS     R1,R1
   \   00000014   0xEB12 0x71D1      ADDS     R1,R2,R1, LSR #+31
   \   00000018   0x61C1             STR      R1,[R0, #+28]
    708              Iap.FrameIdx    = 0;
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0x80C1             STRH     R1,[R0, #+6]
    709              Iap.SysNbr      = 0;
   \   0000001E   0x8101             STRH     R1,[R0, #+8]
    710              Iap.WrittenSize = 0;
   \   00000020   0x6101             STR      R1,[R0, #+16]
    711              
    712          #if defined     (IMAGE_A)
    713              /***********************************************
    714              * 描述： 程序A   
    715              */
    716              INT32U num_sector   = (FLASH_ADDR_APP_B - STM32_FLASH_BASE) / STM_SECTOR_SIZE;
    717              Iap.SectorAddr      = num_sector * STM_SECTOR_SIZE + STM32_FLASH_BASE;  // 获取超始页
    718          #elif defined   (IMAGE_B)
    719              /***********************************************
    720              * 描述： 程序B
    721              */
    722              INT32U num_sector   = (FLASH_ADDR_APP_A - STM32_FLASH_BASE) / STM_SECTOR_SIZE;
    723              Iap.SectorAddr      = num_sector * STM_SECTOR_SIZE + STM32_FLASH_BASE;  // 获取超始页
    724          #else
    725              /***********************************************
    726              * 描述： 程序引导
    727              */
    728              INT32U num_sector   = (FLASH_ADDR_APP_A - STM32_FLASH_BASE) / STM_SECTOR_SIZE;
    729              Iap.SectorAddr      = num_sector * STM_SECTOR_SIZE + STM32_FLASH_BASE;  // 获取超始页
   \   00000022   0x....             LDR.N    R1,??DataTable14_17  ;; 0x8014000
   \   00000024   0x6141             STR      R1,[R0, #+20]
    730          #endif    
    731              Iap.pBuf        = (INT16U *)FlashBuf.buf2;
   \   00000026   0x....             LDR.N    R1,??DataTable14_20
   \   00000028   0xF8C0 0x1021      STR      R1,[R0, #+33]
    732              
    733              return TRUE;
   \   0000002C   0x2001             MOVS     R0,#+1
   \   0000002E   0x4770             BX       LR               ;; return
    734          }
    735          
    736          /*******************************************************************************
    737           * 名    称： IAP_Program
    738           * 功    能： 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 
    739           * 入口参数： 
    740           * 出口参数： 
    741           * 作　　者： 无名沈
    742           * 创建日期： 2014-04-23
    743           * 修    改：
    744           * 修改日期：
    745           *******************************************************************************/	
    746          //BOOL IAP_Program(StrIapState *iap, INT16U *buf, INT16U len, INT16U idx )
    747          //{  
    748          //    /***********************************************
    749          //    * 描述： 
    750          //    */
    751          //    int     i   = 0;
    752          //    INT08U  add = 0;                                // 奇数字节数，长度补1
    753          //    
    754          //    /***********************************************
    755          //    * 描述： 将值放入写FLASH缓冲区
    756          //    */
    757          //    for( ; i < len/2 ; i++) {
    758          //        iap->pBuf[i] = buf[i];
    759          //    }
    760          //    if ( ( len % 2 == 1 ) && ( i < 64) ) {
    761          //        add = 1;
    762          //        iap->pBuf[i] = ( buf[i] & 0xff ) | 0xff00;
    763          //    }
    764          //    /***********************************************
    765          //    * 描述： FLASH解锁
    766          //    */
    767          //    FLASH_Unlock(); 
    768          //    
    769          //    /***********************************************
    770          //    * 描述： FLASH页首地址时整页擦除
    771          //    *
    772          //    if( ( iap->FrameIdx % 16 == 0 ) ||
    773          //        ( iap->SectorAddr % STM_SECTOR_SIZE == 0 ) ) {
    774          //        /***********************************************
    775          //        * 描述： FLASH擦除整页
    776          //        * 
    777          //        if ( FLASH_COMPLETE != FLASH_ErasePage (iap->SectorAddr) ) {
    778          //            //FLASH_Lock(); 
    779          //            //return FALSE;
    780          //        }
    781          //    }
    782          //    /***********************************************
    783          //    * 描述： 直接将要写入的数据写入flash
    784          //    */ 
    785          //    if ( TRUE == FlashWriteNoCheck(iap->SectorAddr,iap->pBuf, len/2 + add) ) {
    786          //    }
    787          //        
    788          //    if ( ( Iap.SysNbr == 0 ) || ( Iap.SysNbr != idx ) ) {
    789          //        Iap.SysNbr = idx;
    790          //        /***********************************************
    791          //        * 描述： 计数值增加
    792          //        */ 
    793          //        iap->SectorAddr  += len;
    794          //        iap->WrittenSize += len;
    795          //        iap->FrameIdx++;
    796          //    }
    797          //    /***********************************************
    798          //    * 描述： FLASH上锁
    799          //    */ 
    800          //    FLASH_Lock(); 
    801          //    return TRUE;
    802          //}
    803          /*******************************************************************************
    804           * 名    称： IAP_Program
    805           * 功    能： 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 
    806           * 入口参数： 
    807           * 出口参数： 
    808           * 作　　者： 无名沈
    809           * 创建日期： 2014-04-23
    810           * 修    改：
    811           * 修改日期：
    812           *******************************************************************************/	

   \                                 In section .text, align 2, keep-with-next
    813          BOOL IAP_Program(StrIapState *iap, INT16U *buf, INT16U len, INT16U idx )
    814          {  
   \                     IAP_Program: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460F             MOV      R7,R1
   \   00000008   0x4615             MOV      R5,R2
   \   0000000A   0x461E             MOV      R6,R3
    815              /***********************************************
    816              * 描述： 
    817              */
    818              INT08U  add = 0;                                // 奇数字节数，长度补1
   \   0000000C   0xF04F 0x0800      MOV      R8,#+0
    819              
    820              /***********************************************
    821              * 描述： 将值放入写FLASH缓冲区
    822              */
    823              if ( len % 2 == 1 ) {
   \   00000010   0x07E8             LSLS     R0,R5,#+31
   \   00000012   0xD504             BPL.N    ??IAP_Program_0
    824                  add         = 1;
   \   00000014   0xF04F 0x0801      MOV      R8,#+1
    825                  buf[len]    = 0xff;
   \   00000018   0x20FF             MOVS     R0,#+255
   \   0000001A   0xF827 0x0015      STRH     R0,[R7, R5, LSL #+1]
    826              }
    827              /***********************************************
    828              * 描述： FLASH解锁
    829              */
    830              FLASH_Unlock(); 
   \                     ??IAP_Program_0: (+1)
   \   0000001E   0x.... 0x....      BL       FLASH_Unlock
    831              
    832              /***********************************************
    833              * 描述： 直接将要写入的数据写入flash
    834              */ 
    835              if ( TRUE == FlashWriteNoCheck(iap->SectorAddr,buf, len/2 + add) ) {
   \   00000022   0x4628             MOV      R0,R5
   \   00000024   0xEB08 0x0250      ADD      R2,R8,R0, LSR #+1
   \   00000028   0xB292             UXTH     R2,R2
   \   0000002A   0x4639             MOV      R1,R7
   \   0000002C   0x6960             LDR      R0,[R4, #+20]
   \   0000002E   0x.... 0x....      BL       FlashWriteNoCheck
    836              }
    837                  
    838              /***********************************************
    839              * 描述： FLASH上锁
    840              */ 
    841              FLASH_Lock(); 
   \   00000032   0x.... 0x....      BL       FLASH_Lock
    842              if ( iap->FrameIdx+1 == idx ) {
   \   00000036   0x88E0             LDRH     R0,[R4, #+6]
   \   00000038   0x1C40             ADDS     R0,R0,#+1
   \   0000003A   0x42B0             CMP      R0,R6
   \   0000003C   0xD108             BNE.N    ??IAP_Program_1
    843                  /***********************************************
    844                  * 描述： 计数值增加
    845                  */ 
    846                  iap->SectorAddr  += len;
   \   0000003E   0x6960             LDR      R0,[R4, #+20]
   \   00000040   0x1828             ADDS     R0,R5,R0
   \   00000042   0x6160             STR      R0,[R4, #+20]
    847                  iap->WrittenSize += len;
   \   00000044   0x6920             LDR      R0,[R4, #+16]
   \   00000046   0x1828             ADDS     R0,R5,R0
   \   00000048   0x6120             STR      R0,[R4, #+16]
    848                  iap->FrameIdx++;
   \   0000004A   0x88E0             LDRH     R0,[R4, #+6]
   \   0000004C   0x1C40             ADDS     R0,R0,#+1
   \   0000004E   0x80E0             STRH     R0,[R4, #+6]
    849              }
    850              return TRUE;
   \                     ??IAP_Program_1: (+1)
   \   00000050   0x2001             MOVS     R0,#+1
   \   00000052   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    851          }
    852          
    853          typedef struct {
    854              INT08U      Cmd;                    // 升级命令
    855              INT08U      Sts;                    // 状态
    856              INT16U      HwVer;                  // 硬件版本
    857              INT16U      SwVer;                  // 软件版本
    858              INT32U      FileSize;               // 程序大小
    859              INT32U      CurAddr;                // 当前地址
    860              INT16U      CurIdx;                 // 当前帧号
    861              INT32U      Chk;                    // 校验信息
    862          } StrConfirm;   

   \                                 In section .bss, align 4
    863          StrConfirm IapConfirm;
   \                     IapConfirm:
   \   00000000                      DS8 24
    864          
    865          /*******************************************************************************
    866           * 名    称： 首字母大写
    867           * 功    能： 升级数据接收及处理
    868           * 入口参数： 无
    869           * 出口参数： 无
    870           * 作    者： 无名沈
    871           * 创建日期： 2017/8/19
    872           * 修    改： 
    873           * 修改日期： 
    874           * 备    注： 
    875           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    876          INT08U IAP_CommRxDataDealCB(MODBUS_CH  *pch, StrNcProtocol  *pack)
    877          {
   \                     IAP_CommRxDataDealCB: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    878              INT08U         *pdat        = pack->Data;
   \   00000006   0xF8D5 0x0006      LDR      R0,[R5, #+6]
    879              INT08U          status      = pdat[1];
   \   0000000A   0x7841             LDRB     R1,[R0, #+1]
    880              INT08U          addr        = pack->DstAddr;
   \   0000000C   0x786B             LDRB     R3,[R5, #+1]
    881              
    882              pack->DstAddr   = pack->SrcAddr;
   \   0000000E   0x782E             LDRB     R6,[R5, #+0]
   \   00000010   0x706E             STRB     R6,[R5, #+1]
    883              pack->SrcAddr   = addr;
   \   00000012   0x702B             STRB     R3,[R5, #+0]
    884              /***********************************************
    885              * 描述： 2017/8/19：升级命令解析
    886              */
    887              switch ( status ) {
   \   00000014   0x2901             CMP      R1,#+1
   \   00000016   0xD005             BEQ.N    ??IAP_CommRxDataDealCB_0
   \   00000018   0xF0C0 0x80C0      BCC.W    ??IAP_CommRxDataDealCB_1
   \   0000001C   0x2903             CMP      R1,#+3
   \   0000001E   0xD06D             BEQ.N    ??IAP_CommRxDataDealCB_2
   \   00000020   0xD353             BCC.N    ??IAP_CommRxDataDealCB_3
   \   00000022   0xE0BB             B.N      ??IAP_CommRxDataDealCB_1
    888              /***********************************************
    889              * 描述： 升级握手信息
    890              */
    891              case IAP_CMD_START: 
    892                  StrConfirm     *pConfirm    = (StrConfirm *)pdat; 
    893                  
    894                  /***********************************************
    895                  * 描述： 重新开始下载，从零开始
    896                  */
    897                  if( pConfirm->Sts == IAP_SR_START_START ) {
   \                     ??IAP_CommRxDataDealCB_0: (+1)
   \   00000024   0x7841             LDRB     R1,[R0, #+1]
   \   00000026   0x2901             CMP      R1,#+1
   \   00000028   0xD11C             BNE.N    ??IAP_CommRxDataDealCB_4
    898                      /***********************************************
    899                      * 描述： 硬件版本不一致
    900                      */
    901                      if ( IapConfirm.HwVer != pConfirm->HwVer ) {
   \   0000002A   0x....             LDR.N    R1,??DataTable14_21
   \   0000002C   0x884A             LDRH     R2,[R1, #+2]
   \   0000002E   0x8843             LDRH     R3,[R0, #+2]
   \   00000030   0x429A             CMP      R2,R3
   \   00000032   0xD002             BEQ.N    ??IAP_CommRxDataDealCB_5
    902                          pConfirm->Sts   = 3;
   \   00000034   0x2103             MOVS     R1,#+3
   \   00000036   0x7041             STRB     R1,[R0, #+1]
    903                          break;
   \   00000038   0xE0B0             B.N      ??IAP_CommRxDataDealCB_1
    904                      }
    905                      IapConfirm.FileSize = pConfirm->FileSize;
   \                     ??IAP_CommRxDataDealCB_5: (+1)
   \   0000003A   0x6882             LDR      R2,[R0, #+8]
   \   0000003C   0x608A             STR      R2,[R1, #+8]
    906                      IapConfirm.CurAddr  = pConfirm->CurAddr = 0;
   \   0000003E   0x2200             MOVS     R2,#+0
   \   00000040   0x60C2             STR      R2,[R0, #+12]
   \   00000042   0x60CA             STR      R2,[R1, #+12]
    907                      IapConfirm.CurIdx   = pConfirm->CurIdx  = 0;
   \   00000044   0x8202             STRH     R2,[R0, #+16]
   \   00000046   0x820A             STRH     R2,[R1, #+16]
    908                      IapConfirm.Chk      = pConfirm->Chk;
   \   00000048   0x6942             LDR      R2,[R0, #+20]
   \   0000004A   0x614A             STR      R2,[R1, #+20]
    909                      
    910                      pConfirm->Sts       = 1;
   \   0000004C   0x2101             MOVS     R1,#+1
   \   0000004E   0x7041             STRB     R1,[R0, #+1]
    911                      Iap.FrameIdx        = 0;
   \   00000050   0x....             LDR.N    R0,??DataTable14_15
   \   00000052   0x2100             MOVS     R1,#+0
   \   00000054   0x80C1             STRH     R1,[R0, #+6]
    912                      Iap.CurAddr         = FLASH_ADDR_APP_A;
   \   00000056   0x....             LDR.N    R1,??DataTable14_17  ;; 0x8014000
   \   00000058   0xF8C0 0x102D      STR      R1,[R0, #+45]
    913                      Iap.CurIdx          = 0;
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0xF8A0 0x1031      STRH     R1,[R0, #+49]
   \   00000062   0xE09B             B.N      ??IAP_CommRxDataDealCB_1
    914                  /***********************************************
    915                  * 描述： 续传
    916                  */
    917                  } else if ( pConfirm->Sts == IAP_SR_START_CONTINUE ) {
   \                     ??IAP_CommRxDataDealCB_4: (+1)
   \   00000064   0x2902             CMP      R1,#+2
   \   00000066   0xF040 0x8099      BNE.W    ??IAP_CommRxDataDealCB_1
    918                      /***********************************************
    919                      * 描述： 硬件版本不一致
    920                      */
    921                      if ( IapConfirm.HwVer != pConfirm->HwVer ) {
   \   0000006A   0x....             LDR.N    R1,??DataTable14_21
   \   0000006C   0x884A             LDRH     R2,[R1, #+2]
   \   0000006E   0x8843             LDRH     R3,[R0, #+2]
   \   00000070   0x429A             CMP      R2,R3
   \   00000072   0xD002             BEQ.N    ??IAP_CommRxDataDealCB_6
    922                          pConfirm->Sts   = IAP_SR_START_ERR_HV;
   \   00000074   0x2103             MOVS     R1,#+3
   \   00000076   0x7041             STRB     R1,[R0, #+1]
    923                          break;
   \   00000078   0xE090             B.N      ??IAP_CommRxDataDealCB_1
    924                      }
    925                      if ( IapConfirm.FileSize != pConfirm->FileSize ) {
   \                     ??IAP_CommRxDataDealCB_6: (+1)
   \   0000007A   0x688A             LDR      R2,[R1, #+8]
   \   0000007C   0x6883             LDR      R3,[R0, #+8]
   \   0000007E   0x429A             CMP      R2,R3
   \   00000080   0xD002             BEQ.N    ??IAP_CommRxDataDealCB_7
    926                          pConfirm->Sts   = IAP_SR_START_ERR_SV;
   \   00000082   0x2104             MOVS     R1,#+4
   \   00000084   0x7041             STRB     R1,[R0, #+1]
    927                          break;
   \   00000086   0xE089             B.N      ??IAP_CommRxDataDealCB_1
    928                      }
    929                      if ( IapConfirm.CurAddr != pConfirm->CurAddr ) {
   \                     ??IAP_CommRxDataDealCB_7: (+1)
   \   00000088   0x68CA             LDR      R2,[R1, #+12]
   \   0000008A   0x68C3             LDR      R3,[R0, #+12]
   \   0000008C   0x429A             CMP      R2,R3
   \   0000008E   0xD002             BEQ.N    ??IAP_CommRxDataDealCB_8
    930                          pConfirm->Sts   = IAP_SR_START_ERR_ADDR;
   \   00000090   0x2106             MOVS     R1,#+6
   \   00000092   0x7041             STRB     R1,[R0, #+1]
    931                          break;
   \   00000094   0xE082             B.N      ??IAP_CommRxDataDealCB_1
    932                      }
    933                      if ( IapConfirm.CurIdx != pConfirm->CurIdx ) {
   \                     ??IAP_CommRxDataDealCB_8: (+1)
   \   00000096   0x8A0A             LDRH     R2,[R1, #+16]
   \   00000098   0x8A03             LDRH     R3,[R0, #+16]
   \   0000009A   0x429A             CMP      R2,R3
   \   0000009C   0xD002             BEQ.N    ??IAP_CommRxDataDealCB_9
    934                          pConfirm->Sts   = IAP_SR_START_ERR_IDX;
   \   0000009E   0x2107             MOVS     R1,#+7
   \   000000A0   0x7041             STRB     R1,[R0, #+1]
    935                          break;
   \   000000A2   0xE07B             B.N      ??IAP_CommRxDataDealCB_1
    936                      }
    937                      if ( IapConfirm.Chk != pConfirm->Chk ) {
   \                     ??IAP_CommRxDataDealCB_9: (+1)
   \   000000A4   0x6949             LDR      R1,[R1, #+20]
   \   000000A6   0x6942             LDR      R2,[R0, #+20]
   \   000000A8   0x4291             CMP      R1,R2
   \   000000AA   0xD002             BEQ.N    ??IAP_CommRxDataDealCB_10
    938                          pConfirm->Sts   = IAP_SR_START_ERR_CHK;
   \   000000AC   0x2108             MOVS     R1,#+8
   \   000000AE   0x7041             STRB     R1,[R0, #+1]
    939                          break;
   \   000000B0   0xE074             B.N      ??IAP_CommRxDataDealCB_1
    940                      }
    941                      
    942                      pConfirm->Sts   = IAP_SR_START_OK;
   \                     ??IAP_CommRxDataDealCB_10: (+1)
   \   000000B2   0x2101             MOVS     R1,#+1
   \   000000B4   0x7041             STRB     R1,[R0, #+1]
    943                      Iap.FrameIdx    = 0;
   \   000000B6   0x....             LDR.N    R0,??DataTable14_15
   \   000000B8   0x2100             MOVS     R1,#+0
   \   000000BA   0x80C1             STRH     R1,[R0, #+6]
    944                      Iap.CurAddr     = IAP_ADDR_BACK;
   \   000000BC   0x....             LDR.N    R1,??DataTable14_19  ;; 0x8028000
   \   000000BE   0xF8C0 0x102D      STR      R1,[R0, #+45]
    945                      Iap.CurIdx      = 0;
   \   000000C2   0x2100             MOVS     R1,#+0
   \   000000C4   0xF8A0 0x1031      STRH     R1,[R0, #+49]
   \   000000C8   0xE068             B.N      ??IAP_CommRxDataDealCB_1
    946                  } else {
    947                      
    948                  }
    949                  
    950                  //BSP_FlashReadBytes(FLASH_APP_STATUS, (u8 *)&status, 1);
    951                  //BSP_FlashWriteBytes(FLASH_APP_STATUS, (u8 *)&status, 1);
    952                  
    953                  break;
    954              /***********************************************
    955              * 描述： 2017/8/19：升级程序信息
    956              */
    957              case IAP_CMD_PRG: {
    958                  /***********************************************
    959                  * 描述： 2017/8/19：写数据到Flash
    960                  */
    961                  INT16U  idx = BUILD_INT16U(pack->Data[2],pack->Data[3]);
    962                  IAP_Program((StrIapState   *)&Iap, 
    963                              (INT16U        *)&pack->Data[4], 
    964                              (INT16U         ) pack->Len, idx);
   \                     ??IAP_CommRxDataDealCB_3: (+1)
   \   000000CA   0xF8D5 0x0006      LDR      R0,[R5, #+6]
   \   000000CE   0x7881             LDRB     R1,[R0, #+2]
   \   000000D0   0x78C2             LDRB     R2,[R0, #+3]
   \   000000D2   0xEB01 0x2102      ADD      R1,R1,R2, LSL #+8
   \   000000D6   0x460B             MOV      R3,R1
   \   000000D8   0xB29B             UXTH     R3,R3
   \   000000DA   0x796A             LDRB     R2,[R5, #+5]
   \   000000DC   0x1D01             ADDS     R1,R0,#+4
   \   000000DE   0x....             LDR.N    R0,??DataTable14_15
   \   000000E0   0x.... 0x....      BL       IAP_Program
    965                  pack->Data[4]   = 0;
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0xF8D5 0x1006      LDR      R1,[R5, #+6]
   \   000000EA   0x7108             STRB     R0,[R1, #+4]
    966                  pack->Data[5]   = 0;
   \   000000EC   0xF8D5 0x1006      LDR      R1,[R5, #+6]
   \   000000F0   0x7148             STRB     R0,[R1, #+5]
    967                  pack->Len       = 6;
   \   000000F2   0x2006             MOVS     R0,#+6
   \   000000F4   0x7168             STRB     R0,[R5, #+5]
    968                  pack->SendSn    = pack->RecvSn;
   \   000000F6   0x78E8             LDRB     R0,[R5, #+3]
   \   000000F8   0x70A8             STRB     R0,[R5, #+2]
    969              } break;
   \   000000FA   0xE04F             B.N      ??IAP_CommRxDataDealCB_1
    970              /***********************************************
    971              * 描述： 2017/8/19：升级结束信息
    972              */
    973              case IAP_CMD_FINISH:        
    974                  /***********************************************
    975                  * 描述： 2017/8/19：不运行
    976                  */
    977                  if( pConfirm->Sts == IAP_SR_FINISH_NO_RUN ) {
   \                     ??IAP_CommRxDataDealCB_2: (+1)
   \   000000FC   0x7850             LDRB     R0,[R2, #+1]
   \   000000FE   0x2800             CMP      R0,#+0
   \   00000100   0xD119             BNE.N    ??IAP_CommRxDataDealCB_11
    978                      /***********************************************
    979                      * 描述： 硬件版本不一致
    980                      */
    981                      if ( IapConfirm.HwVer != pConfirm->HwVer ) {
   \   00000102   0x....             LDR.N    R1,??DataTable14_21
   \   00000104   0x8848             LDRH     R0,[R1, #+2]
   \   00000106   0x8853             LDRH     R3,[R2, #+2]
   \   00000108   0x4298             CMP      R0,R3
   \   0000010A   0xD11B             BNE.N    ??IAP_CommRxDataDealCB_12
    982                          pConfirm->Sts   = IAP_SR_START_ERR_HV;
    983                          break;
    984                      }
    985                      IapConfirm.FileSize = pConfirm->FileSize;
   \   0000010C   0x6890             LDR      R0,[R2, #+8]
   \   0000010E   0x6088             STR      R0,[R1, #+8]
    986                      IapConfirm.CurAddr  = pConfirm->CurAddr = 0;
   \   00000110   0x2000             MOVS     R0,#+0
   \   00000112   0x60D0             STR      R0,[R2, #+12]
   \   00000114   0x60C8             STR      R0,[R1, #+12]
    987                      IapConfirm.CurIdx   = pConfirm->CurIdx  = 0;
   \   00000116   0x8210             STRH     R0,[R2, #+16]
   \   00000118   0x8208             STRH     R0,[R1, #+16]
    988                      IapConfirm.Chk      = pConfirm->Chk;
   \   0000011A   0x6950             LDR      R0,[R2, #+20]
   \   0000011C   0x6148             STR      R0,[R1, #+20]
    989                      
    990                      pConfirm->Sts       = 1;
   \   0000011E   0x2001             MOVS     R0,#+1
   \   00000120   0x7050             STRB     R0,[R2, #+1]
    991                      Iap.FrameIdx        = 0;
   \   00000122   0x....             LDR.N    R0,??DataTable14_15
   \   00000124   0x2100             MOVS     R1,#+0
   \   00000126   0x80C1             STRH     R1,[R0, #+6]
    992                      Iap.CurAddr         = FLASH_ADDR_APP_A;
   \   00000128   0x....             LDR.N    R1,??DataTable14_17  ;; 0x8014000
   \   0000012A   0xF8C0 0x102D      STR      R1,[R0, #+45]
    993                      Iap.CurIdx          = 0;
   \   0000012E   0x2100             MOVS     R1,#+0
   \   00000130   0xF8A0 0x1031      STRH     R1,[R0, #+49]
   \   00000134   0xE030             B.N      ??IAP_CommRxDataDealCB_13
    994                  /***********************************************
    995                  * 描述： 2017/8/19：立即运行
    996                  */
    997                  } else if ( pConfirm->Sts == IAP_SR_FINISH_RUN ) {
   \                     ??IAP_CommRxDataDealCB_11: (+1)
   \   00000136   0x2801             CMP      R0,#+1
   \   00000138   0xD12E             BNE.N    ??IAP_CommRxDataDealCB_13
    998                      /***********************************************
    999                      * 描述： 硬件版本不一致
   1000                      */
   1001                      if ( IapConfirm.HwVer != pConfirm->HwVer ) {
   \   0000013A   0x....             LDR.N    R1,??DataTable14_21
   \   0000013C   0x8848             LDRH     R0,[R1, #+2]
   \   0000013E   0x8853             LDRH     R3,[R2, #+2]
   \   00000140   0x4298             CMP      R0,R3
   \   00000142   0xD002             BEQ.N    ??IAP_CommRxDataDealCB_14
   1002                          pConfirm->Sts   = IAP_SR_START_ERR_HV;
   \                     ??IAP_CommRxDataDealCB_12: (+1)
   \   00000144   0x2003             MOVS     R0,#+3
   \   00000146   0x7050             STRB     R0,[R2, #+1]
   1003                          break;
   \   00000148   0xE028             B.N      ??IAP_CommRxDataDealCB_1
   1004                      }
   1005                      if ( IapConfirm.FileSize != pConfirm->FileSize ) {
   \                     ??IAP_CommRxDataDealCB_14: (+1)
   \   0000014A   0x6888             LDR      R0,[R1, #+8]
   \   0000014C   0x6893             LDR      R3,[R2, #+8]
   \   0000014E   0x4298             CMP      R0,R3
   \   00000150   0xD002             BEQ.N    ??IAP_CommRxDataDealCB_15
   1006                          pConfirm->Sts   = IAP_SR_START_ERR_SV;
   \   00000152   0x2004             MOVS     R0,#+4
   \   00000154   0x7050             STRB     R0,[R2, #+1]
   1007                          break;
   \   00000156   0xE021             B.N      ??IAP_CommRxDataDealCB_1
   1008                      }
   1009                      if ( IapConfirm.CurAddr != pConfirm->CurAddr ) {
   \                     ??IAP_CommRxDataDealCB_15: (+1)
   \   00000158   0x68C8             LDR      R0,[R1, #+12]
   \   0000015A   0x68D3             LDR      R3,[R2, #+12]
   \   0000015C   0x4298             CMP      R0,R3
   \   0000015E   0xD002             BEQ.N    ??IAP_CommRxDataDealCB_16
   1010                          pConfirm->Sts   = IAP_SR_START_ERR_ADDR;
   \   00000160   0x2006             MOVS     R0,#+6
   \   00000162   0x7050             STRB     R0,[R2, #+1]
   1011                          break;
   \   00000164   0xE01A             B.N      ??IAP_CommRxDataDealCB_1
   1012                      }
   1013                      if ( IapConfirm.CurIdx != pConfirm->CurIdx ) {
   \                     ??IAP_CommRxDataDealCB_16: (+1)
   \   00000166   0x8A08             LDRH     R0,[R1, #+16]
   \   00000168   0x8A13             LDRH     R3,[R2, #+16]
   \   0000016A   0x4298             CMP      R0,R3
   \   0000016C   0xD002             BEQ.N    ??IAP_CommRxDataDealCB_17
   1014                          pConfirm->Sts   = IAP_SR_START_ERR_IDX;
   \   0000016E   0x2007             MOVS     R0,#+7
   \   00000170   0x7050             STRB     R0,[R2, #+1]
   1015                          break;
   \   00000172   0xE013             B.N      ??IAP_CommRxDataDealCB_1
   1016                      }
   1017                      if ( IapConfirm.Chk != pConfirm->Chk ) {
   \                     ??IAP_CommRxDataDealCB_17: (+1)
   \   00000174   0x6948             LDR      R0,[R1, #+20]
   \   00000176   0x6951             LDR      R1,[R2, #+20]
   \   00000178   0x4288             CMP      R0,R1
   \   0000017A   0xD002             BEQ.N    ??IAP_CommRxDataDealCB_18
   1018                          pConfirm->Sts   = IAP_SR_START_ERR_CHK;
   \   0000017C   0x2008             MOVS     R0,#+8
   \   0000017E   0x7050             STRB     R0,[R2, #+1]
   1019                          break;
   \   00000180   0xE00C             B.N      ??IAP_CommRxDataDealCB_1
   1020                      }
   1021                      
   1022                      pConfirm->Sts   = IAP_SR_START_OK;
   \                     ??IAP_CommRxDataDealCB_18: (+1)
   \   00000182   0x2001             MOVS     R0,#+1
   \   00000184   0x7050             STRB     R0,[R2, #+1]
   1023                      Iap.FrameIdx    = 0;
   \   00000186   0x....             LDR.N    R0,??DataTable14_15
   \   00000188   0x2100             MOVS     R1,#+0
   \   0000018A   0x80C1             STRH     R1,[R0, #+6]
   1024                      Iap.CurAddr     = IAP_ADDR_BACK;
   \   0000018C   0x....             LDR.N    R1,??DataTable14_19  ;; 0x8028000
   \   0000018E   0xF8C0 0x102D      STR      R1,[R0, #+45]
   1025                      Iap.CurIdx      = 0;
   \   00000192   0x2100             MOVS     R1,#+0
   \   00000194   0xF8A0 0x1031      STRH     R1,[R0, #+49]
   1026                  /***********************************************
   1027                  * 描述： 2017/8/19：重启后运行
   1028                  */
   1029                  } else if ( pConfirm->Sts == IAP_SR_FINISH_RESTART ) {
   1030                      
   1031                  } else {
   1032                      
   1033                  }
   1034                  IAP_Reset();
   \                     ??IAP_CommRxDataDealCB_13: (+1)
   \   00000198   0x.... 0x....      BL       IAP_Reset
   1035                  break;
   1036              /***********************************************
   1037              * 描述： 2017/8/19：升级中止或暂停
   1038              */
   1039              case IAP_CMD_STOP:
   1040                  break;
   1041              /***********************************************
   1042              * 描述： 其他信息
   1043              */
   1044              default:
   1045                  break;
   1046              }
   1047          #if defined     (IMAGE_A) || defined   (IMAGE_B)
   1048          
   1049          #else 
   1050              
   1051          #endif
   1052          
   1053              /***********************************************
   1054              * 描述： 发送数据处理
   1055              */    
   1056              CSNC_SendData( (MODBUS_CH      *) pch,
   1057                             (StrNcProtocol  *) pack);
   \                     ??IAP_CommRxDataDealCB_1: (+1)
   \   0000019C   0x4629             MOV      R1,R5
   \   0000019E   0x4620             MOV      R0,R4
   \   000001A0   0x.... 0x....      BL       CSNC_SendData
   1058              return TRUE;
   \   000001A4   0x2001             MOVS     R0,#+1
   \   000001A6   0xBD70             POP      {R4-R6,PC}       ;; return
   1059          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x40010800         DC32     0x40010800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \   00000000   0x40010C00         DC32     0x40010c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_2:
   \   00000000   0x40011000         DC32     0x40011000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_3:
   \   00000000   0x40011400         DC32     0x40011400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_4:
   \   00000000   0x40011800         DC32     0x40011800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_5:
   \   00000000   0x40013800         DC32     0x40013800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_6:
   \   00000000   0x40004400         DC32     0x40004400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_7:
   \   00000000   0x40004800         DC32     0x40004800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_8:
   \   00000000   0x40012C00         DC32     0x40012c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_9:
   \   00000000   0x40000400         DC32     0x40000400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_10:
   \   00000000   0x40000800         DC32     0x40000800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_11:
   \   00000000   0x40000C00         DC32     0x40000c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_12:
   \   00000000   0x40001000         DC32     0x40001000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_13:
   \   00000000   0x40001400         DC32     0x40001400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_14:
   \   00000000   0x40013400         DC32     0x40013400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_15:
   \   00000000   0x........         DC32     Iap

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_16:
   \   00000000   0x........         DC32     pApp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_17:
   \   00000000   0x08014000         DC32     0x8014000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_18:
   \   00000000   0x2FFE0000         DC32     0x2ffe0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_19:
   \   00000000   0x08028000         DC32     0x8028000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_20:
   \   00000000   0x........         DC32     FlashBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_21:
   \   00000000   0x........         DC32     IapConfirm
   1060          
   1061          /*******************************************************************************
   1062           * 				end of file
   1063           *******************************************************************************/ 
   1064          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   IAP_CommRxDataDealCB
        16   -> CSNC_SendData
        16   -> IAP_Program
        16   -> IAP_Reset
       8   IAP_DevDeInit
         8   -> GPIO_DeInit
         0   -> TIM_DeInit
         8   -> TIM_DeInit
         8   -> USART_DeInit
       8   IAP_Exit
         0   -> IAP_FileInfoInit
         8   -> IAP_JumpToApp
         8   -> IAP_SetStatus
       0   IAP_FileInfoInit
       8   IAP_Finish
         0   -> IAP_FileInfoInit
         8   -> IAP_JumpToAddr
         8   -> IAP_SetStatus
       0   IAP_GetAppAStatus
       8   IAP_GetAppAddr
         8   -> BSP_FlashReadBytes
       0   IAP_GetAppBStatus
       8   IAP_GetStatus
         8   -> BSP_FlashReadBytes
      16   IAP_JumpTo
        16   -- Indirect call
        16   -> CPU_IntDisMeasStart
        16   -> CPU_IntDisMeasStop
         0   -> CPU_SR_Restore
        16   -> CPU_SR_Save
        16   -> IAP_DevDeInit
        16   -> IAP_SetAppAddr
       8   IAP_JumpToAddr
         8   -> IAP_JumpTo
         8   -> IAP_SetAppAddr
         8   -> IAP_SetStatus
      16   IAP_JumpToApp
        16   -> IAP_FileInfoInit
        16   -> IAP_GetAppAddr
        16   -> IAP_GetStatus
        16   -> IAP_JumpToAddr
        16   -> IAP_SetStatus
       8   IAP_JumpToAppA
         8   -> IAP_GetAppAStatus
         8   -> IAP_JumpTo
       8   IAP_JumpToAppB
         8   -> IAP_GetAppBStatus
         8   -> IAP_JumpTo
      24   IAP_Program
        24   -> FLASH_Lock
        24   -> FLASH_Unlock
        24   -> FlashWriteNoCheck
       8   IAP_Programing
         8   -> IAP_SetStatus
       8   IAP_Reset
         8   -> FLASH_ErasePage
         8   -> FLASH_Lock
         8   -> FLASH_Unlock
         8   -> IAP_FileInfoInit
         0   -> IAP_SetStatus
         8   -> IAP_SetStatus
       8   IAP_Restart
         8   -> FLASH_ErasePage
         0   -> FLASH_Lock
         8   -> FLASH_Unlock
         8   -> IAP_FileInfoInit
         8   -> IAP_SetStatus
       8   IAP_SetAppAddr
         8   -> BSP_FlashWriteBytes
         8   -> IAP_GetAppAddr
       8   IAP_SetStatus
         8   -> BSP_FlashWriteBytes


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_10
       4  ??DataTable14_11
       4  ??DataTable14_12
       4  ??DataTable14_13
       4  ??DataTable14_14
       4  ??DataTable14_15
       4  ??DataTable14_16
       4  ??DataTable14_17
       4  ??DataTable14_18
       4  ??DataTable14_19
       4  ??DataTable14_2
       4  ??DataTable14_20
       4  ??DataTable14_21
       4  ??DataTable14_3
       4  ??DataTable14_4
       4  ??DataTable14_5
       4  ??DataTable14_6
       4  ??DataTable14_7
       4  ??DataTable14_8
       4  ??DataTable14_9
     424  IAP_CommRxDataDealCB
     142  IAP_DevDeInit
      54  IAP_Exit
      48  IAP_FileInfoInit
      20  IAP_Finish
      26  IAP_GetAppAStatus
      18  IAP_GetAppAddr
      26  IAP_GetAppBStatus
      32  IAP_GetStatus
      68  IAP_JumpTo
      48  IAP_JumpToAddr
     124  IAP_JumpToApp
      22  IAP_JumpToAppA
      22  IAP_JumpToAppB
      86  IAP_Program
      18  IAP_Programing
      52  IAP_Reset
      48  IAP_Restart
      36  IAP_SetAppAddr
      34  IAP_SetStatus
      52  Iap
      24  IapConfirm
       4  pApp

 
    80 bytes in section .bss
 1 436 bytes in section .text
 
 1 436 bytes of CODE memory
    80 bytes of DATA memory

Errors: none
Warnings: 9
