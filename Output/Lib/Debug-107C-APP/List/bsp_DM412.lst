###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       26/Dec/2017  20:53:07
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC199B-100\Library\Source\BSP\Driver\bsp_DM412.c
#    Command line =  
#        F:\iar\NC199B-100\Library\Source\BSP\Driver\bsp_DM412.c -D
#        USE_STDPERIPH_DRIVER -D STM32F10X_CL -D DEBUG -D IMAGE_A -D
#        STM32F103RC -D STM32_FLASH_SIZE=256 -D HSE_VALUE=25000000 -lCN
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-107C-APP\List\
#        -o
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-107C-APP\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC199B-100\Library\Project\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\AES\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Config\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Port\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\OS\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Config\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Protocol\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Iap\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Driver\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\uCOS-III\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\CoreSupport\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\STM32F10x_StdPeriph_Driver\inc\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\ARM-Cortex-M3\IAR\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-LIB\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\OSAL\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\OSAL\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Source\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\option\ -Om
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-107C-APP\List\bsp_DM412.lst
#    Object file  =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-107C-APP\Obj\bsp_DM412.o
#
###############################################################################

F:\iar\NC199B-100\Library\Source\BSP\Driver\bsp_DM412.c
      1          /*******************************************************************************
      2           *   Revised:       $Date: 2017-11-12$
      3           *   Revision:      $
      4           *   Writer:	    redmorningcn.
      5           *
      6           *   Description:
      7           *   Notes:
      8           *     				E-mail:redmorningcn@qq.com
      9           *
     10           *   All copyrights reserved to redmorningcn.
     11           *
     12           *******************************************************************************/
     13          
     14          
     15          /*******************************************************************************
     16          * INCLUDES
     17          */
     18          #include    <includes.h>
     19          #include    <bsp_gpio.h>
     20          //#include "bsp_DM412.h"
     21          
     22          /*******************************************************************************
     23           * CONSTANTS
     24           */
     25          /***********************************************/
     26          //IO
     27          
     28          #define LED1_MOSI               402
     29          #define LED1_SCK                403
     30          
     31          #define LED2_MOSI               405
     32          #define LED2_SCK                404
     33          
     34          #define LED3_MOSI               406
     35          #define LED3_SCK                213
     36          
     37          #define LED_MAX                 3
     38          
     39          
     40          /**-------------------------------------------------------
     41          * @函数名  bsp_DM412Init
     42          * @功能    初始化LED1的端口
     43          author:    redmorningcn
     44          data:      2017-11-13
     45          ***------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
     46          void bsp_DM412Init(void)
     47          {
   \                     bsp_DM412Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     48              GPIO_PinselConfig(LED1_MOSI,0);
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0xF44F 0x70C9      MOV      R0,#+402
   \   00000008   0x.... 0x....      BL       GPIO_PinselConfig
     49              GPIO_PinselConfig(LED1_SCK,0);
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0xF240 0x1093      MOVW     R0,#+403
   \   00000012   0x.... 0x....      BL       GPIO_PinselConfig
     50          
     51              GPIO_PinselConfig(LED2_MOSI,0);
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0xF240 0x1095      MOVW     R0,#+405
   \   0000001C   0x.... 0x....      BL       GPIO_PinselConfig
     52              GPIO_PinselConfig(LED2_SCK,0);
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0xF44F 0x70CA      MOV      R0,#+404
   \   00000026   0x.... 0x....      BL       GPIO_PinselConfig
     53          
     54              GPIO_PinselConfig(LED3_MOSI,0);
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0xF44F 0x70CB      MOV      R0,#+406
   \   00000030   0x.... 0x....      BL       GPIO_PinselConfig
     55              GPIO_PinselConfig(LED3_SCK,0);
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x20D5             MOVS     R0,#+213
   \   00000038   0xE8BD 0x4004      POP      {R2,LR}
   \   0000003C   0x.... 0x....      B.W      GPIO_PinselConfig
     56          }
     57          
     58          //---------------------------------------------------------------------------------
     59          //功    能:             SPI发送Lantch,将前面发送的数据装置到DM412
     60          //入口参数:             无
     61          //出口参数:             无
     62          //说    明:				以模拟SPI总线方式发送数据
     63          //----------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
     64          void SentLantch_LED(uint8 lednum)
     65          {
   \                     SentLantch_LED: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x4604             MOV      R4,R0
     66          	uint8_t i; 
     67              uint16  MosiBuf[LED_MAX] = {    LED1_MOSI,
     68                                              LED2_MOSI,
     69                                              LED3_MOSI
     70                                          };
   \   00000006   0xA802             ADD      R0,SP,#+8
   \   00000008   0x.... 0x....      ADR.W    R1,?_0
   \   0000000C   0xC90C             LDM      R1!,{R2,R3}
   \   0000000E   0xC00C             STM      R0!,{R2,R3}
     71              
     72              uint16  SckBuf[LED_MAX] = {     LED1_SCK,
     73                                              LED2_SCK,
     74                                              LED3_SCK
     75                                          };
   \   00000010   0x4668             MOV      R0,SP
   \   00000012   0x.... 0x....      ADR.W    R1,?_1
   \   00000016   0xC90C             LDM      R1!,{R2,R3}
   \   00000018   0xC00C             STM      R0!,{R2,R3}
     76          	
     77          	Delay_Nus(2);
   \   0000001A   0x2002             MOVS     R0,#+2
   \   0000001C   0x.... 0x....      BL       Delay_Nus
     78              
     79              GPIO_SetOrClearValue(SckBuf[lednum],1);       	
   \   00000020   0x4668             MOV      R0,SP
   \   00000022   0xF830 0x5014      LDRH     R5,[R0, R4, LSL #+1]
   \   00000026   0x2101             MOVS     R1,#+1
   \   00000028   0x4628             MOV      R0,R5
   \   0000002A   0x.... 0x....      BL       GPIO_SetOrClearValue
     80          
     81              for (i=0;i<8;i++)
   \   0000002E   0x2600             MOVS     R6,#+0
   \   00000030   0xE00E             B.N      ??SentLantch_LED_0
     82              {
     83                  GPIO_SetOrClearValue(MosiBuf[lednum],0);       	
   \                     ??SentLantch_LED_1: (+1)
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x4638             MOV      R0,R7
   \   00000036   0x.... 0x....      BL       GPIO_SetOrClearValue
     84          		Delay_Nus(10);
   \   0000003A   0x200A             MOVS     R0,#+10
   \   0000003C   0x.... 0x....      BL       Delay_Nus
     85                  
     86                  GPIO_SetOrClearValue(MosiBuf[lednum],1);       	
   \   00000040   0x2101             MOVS     R1,#+1
   \   00000042   0x4638             MOV      R0,R7
   \   00000044   0x.... 0x....      BL       GPIO_SetOrClearValue
     87          		Delay_Nus(10);	
   \   00000048   0x200A             MOVS     R0,#+10
   \   0000004A   0x.... 0x....      BL       Delay_Nus
     88              }
   \   0000004E   0x1C76             ADDS     R6,R6,#+1
   \                     ??SentLantch_LED_0: (+1)
   \   00000050   0xA802             ADD      R0,SP,#+8
   \   00000052   0xF830 0x7014      LDRH     R7,[R0, R4, LSL #+1]
   \   00000056   0x2E08             CMP      R6,#+8
   \   00000058   0xDBEB             BLT.N    ??SentLantch_LED_1
     89              
     90              GPIO_SetOrClearValue(SckBuf[lednum],1);       	
   \   0000005A   0x2101             MOVS     R1,#+1
   \   0000005C   0x4628             MOV      R0,R5
   \   0000005E   0x.... 0x....      BL       GPIO_SetOrClearValue
     91          	Delay_Nus(20);
   \   00000062   0x2014             MOVS     R0,#+20
   \   00000064   0x.... 0x....      BL       Delay_Nus
     92          
     93              GPIO_SetOrClearValue(MosiBuf[lednum],0);
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x4638             MOV      R0,R7
   \   0000006C   0x.... 0x....      BL       GPIO_SetOrClearValue
     94              GPIO_SetOrClearValue(SckBuf[lednum],0);       	
   \   00000070   0x2100             MOVS     R1,#+0
   \   00000072   0x4628             MOV      R0,R5
   \   00000074   0x.... 0x....      BL       GPIO_SetOrClearValue
     95              Delay_Nus(2);
   \   00000078   0x2002             MOVS     R0,#+2
   \   0000007A   0x.... 0x....      BL       Delay_Nus
     96          }
   \   0000007E   0xB005             ADD      SP,SP,#+20
   \   00000080   0xBDF0             POP      {R4-R7,PC}       ;; return
     97          
     98          //---------------------------------------------------------------------------------
     99          //功    能:  对led的SPI发送数据
    100          //入口参数:             
    101          //author:    redmorningcn
    102          //data:      2017-11-13
    103          //----------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    104          void SentTwoByte_LED(uint8 lednum,uint16 ch)
    105          {
   \                     SentTwoByte_LED: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
    106              uint32  i,temp = 0;   
    107              uint8   typelen;
    108              
    109              uint16   MosiBuf[LED_MAX] = {   LED1_MOSI,
    110                                              LED2_MOSI,
    111                                              LED3_MOSI
    112                                          };
   \   00000008   0xA802             ADD      R0,SP,#+8
   \   0000000A   0x.... 0x....      ADR.W    R1,?_2
   \   0000000E   0xC90C             LDM      R1!,{R2,R3}
   \   00000010   0xC00C             STM      R0!,{R2,R3}
    113              
    114              uint16   SckBuf[LED_MAX] = {    LED1_SCK,
    115                                              LED2_SCK,
    116                                              LED3_SCK
    117                                          };
   \   00000012   0x4668             MOV      R0,SP
   \   00000014   0x.... 0x....      ADR.W    R1,?_3
   \   00000018   0xC90C             LDM      R1!,{R2,R3}
   \   0000001A   0xC00C             STM      R0!,{R2,R3}
    118          
    119              if(lednum > LED_MAX - 1)
   \   0000001C   0x2C03             CMP      R4,#+3
   \   0000001E   0xDA36             BGE.N    ??SentTwoByte_LED_0
    120                  return;
   \   00000020   0x4668             MOV      R0,SP
   \   00000022   0xF830 0x6014      LDRH     R6,[R0, R4, LSL #+1]
   \   00000026   0x2100             MOVS     R1,#+0
   \   00000028   0x4630             MOV      R0,R6
    121          	
    122              typelen = sizeof(ch);           //字符长度
    123              GPIO_SetOrClearValue(SckBuf[lednum],0);
   \   0000002A   0x.... 0x....      BL       GPIO_SetOrClearValue
    124                  
    125          	Delay_Nus(2);
   \   0000002E   0x2002             MOVS     R0,#+2
   \   00000030   0x.... 0x....      BL       Delay_Nus
    126              for (i=0;i<8*typelen;i++)           
   \   00000034   0x2700             MOVS     R7,#+0
   \   00000036   0xE014             B.N      ??SentTwoByte_LED_1
    127              {
    128                  temp = 0; 
    129          		temp=ch&(0x01<<(8*typelen - 1));
    130          
    131              	ch=ch<<1;
    132                  if(temp)
    133                  {
    134                      GPIO_SetOrClearValue(MosiBuf[lednum],1);       	
    135                  }
    136                  else
    137                  {
    138                      GPIO_SetOrClearValue(MosiBuf[lednum],0);
   \                     ??SentTwoByte_LED_2: (+1)
   \   00000038   0x2100             MOVS     R1,#+0
   \   0000003A   0x.... 0x....      BL       GPIO_SetOrClearValue
    139                  }
    140                  
    141                  Delay_Nus(10);	
   \                     ??SentTwoByte_LED_3: (+1)
   \   0000003E   0x200A             MOVS     R0,#+10
   \   00000040   0x.... 0x....      BL       Delay_Nus
    142          
    143                  GPIO_SetOrClearValue(SckBuf[lednum],0);
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0x4630             MOV      R0,R6
   \   00000048   0x.... 0x....      BL       GPIO_SetOrClearValue
    144                  Delay_Nus(5);
   \   0000004C   0x2005             MOVS     R0,#+5
   \   0000004E   0x.... 0x....      BL       Delay_Nus
    145          
    146                  GPIO_SetOrClearValue(SckBuf[lednum],1);
   \   00000052   0x2101             MOVS     R1,#+1
   \   00000054   0x4630             MOV      R0,R6
   \   00000056   0x.... 0x....      BL       GPIO_SetOrClearValue
    147                  Delay_Nus(20);	 
   \   0000005A   0x2014             MOVS     R0,#+20
   \   0000005C   0x.... 0x....      BL       Delay_Nus
   \   00000060   0x1C7F             ADDS     R7,R7,#+1
   \                     ??SentTwoByte_LED_1: (+1)
   \   00000062   0x2F10             CMP      R7,#+16
   \   00000064   0xD20C             BCS.N    ??SentTwoByte_LED_4
   \   00000066   0xB2AD             UXTH     R5,R5
   \   00000068   0xF405 0x4100      AND      R1,R5,#0x8000
   \   0000006C   0x006D             LSLS     R5,R5,#+1
   \   0000006E   0xA802             ADD      R0,SP,#+8
   \   00000070   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000074   0x2900             CMP      R1,#+0
   \   00000076   0xD0DF             BEQ.N    ??SentTwoByte_LED_2
   \   00000078   0x2101             MOVS     R1,#+1
   \   0000007A   0x.... 0x....      BL       GPIO_SetOrClearValue
   \   0000007E   0xE7DE             B.N      ??SentTwoByte_LED_3
    148              }   
    149              
    150              GPIO_SetOrClearValue(SckBuf[lednum],0);
   \                     ??SentTwoByte_LED_4: (+1)
   \   00000080   0x2100             MOVS     R1,#+0
   \   00000082   0x4630             MOV      R0,R6
   \   00000084   0x.... 0x....      BL       GPIO_SetOrClearValue
    151          	Delay_Nus(2);
   \   00000088   0x2002             MOVS     R0,#+2
   \   0000008A   0x.... 0x....      BL       Delay_Nus
    152          }
   \                     ??SentTwoByte_LED_0: (+1)
   \   0000008E   0xB005             ADD      SP,SP,#+20
   \   00000090   0xBDF0             POP      {R4-R7,PC}       ;; return
    153          
    154          //---------------------------------------------------------------------------------
    155          //功    能:  对led进行颜色设置
    156          //入口参数:  需要连续发送三次，再发送一次装载指令，才能将数据下载至DM412           
    157          //author:    redmorningcn，颜色为RGB，
    158          //data:      2017-11-13
    159          //----------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    160          void    SetLedColor(uint8 lenuum,uint16  red,uint16  green,uint16  blue)
    161          {
   \                     SetLedColor: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
   \   00000008   0x4616             MOV      R6,R2
   \   0000000A   0x461F             MOV      R7,R3
    162              for(uint8 i=0;i<3;i++)
   \   0000000C   0xF04F 0x0800      MOV      R8,#+0
   \   00000010   0xE00D             B.N      ??SetLedColor_0
    163              {
    164                 SentTwoByte_LED(lenuum,red);
   \                     ??SetLedColor_1: (+1)
   \   00000012   0x4629             MOV      R1,R5
   \   00000014   0x4620             MOV      R0,R4
   \   00000016   0x.... 0x....      BL       SentTwoByte_LED
    165                 SentTwoByte_LED(lenuum,green);
   \   0000001A   0x4631             MOV      R1,R6
   \   0000001C   0x4620             MOV      R0,R4
   \   0000001E   0x.... 0x....      BL       SentTwoByte_LED
    166                 SentTwoByte_LED(lenuum,blue);
   \   00000022   0x4639             MOV      R1,R7
   \   00000024   0x4620             MOV      R0,R4
   \   00000026   0x.... 0x....      BL       SentTwoByte_LED
    167              }
   \   0000002A   0xF108 0x0801      ADD      R8,R8,#+1
   \                     ??SetLedColor_0: (+1)
   \   0000002E   0xF1B8 0x0F03      CMP      R8,#+3
   \   00000032   0xDBEE             BLT.N    ??SetLedColor_1
    168              
    169              SentLantch_LED(lenuum);
   \   00000034   0x4620             MOV      R0,R4
   \   00000036   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000003A   0x....             B.N      SentLantch_LED
    170          }
    171          
    172          
    173          //---------------------------------------------------------------------------------
    174          //功    能:  对led进行颜色设置
    175          //入口参数:  需要连续发送三次，再发送一次装载指令，才能将数据下载至DM412           
    176          //author:    redmorningcn，颜色为RGB，
    177          //data:      2017-11-13
    178          //----------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    179          void test_DM412_Led(void)
    180          {
   \                     test_DM412_Led: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    181              static  uint16   red = 0x5555,green =0xAAAA,blue =0xffff;
    182              
    183              bsp_DM412Init();
   \   00000002   0x.... 0x....      BL       bsp_DM412Init
    184              
    185              uint8  i = 10;
   \   00000006   0x240A             MOVS     R4,#+10
   \   00000008   0x....             LDR.N    R5,??DataTable4
   \   0000000A   0xE01E             B.N      ??test_DM412_Led_0
    186              while(i--)
    187              {
    188          
    189                  red     +=  0x7ff;
   \                     ??test_DM412_Led_1: (+1)
   \   0000000C   0x8828             LDRH     R0,[R5, #+0]
   \   0000000E   0xF200 0x71FF      ADDW     R1,R0,#+2047
   \   00000012   0x8029             STRH     R1,[R5, #+0]
    190                  green   +=  0x7ff;
   \   00000014   0x8868             LDRH     R0,[R5, #+2]
   \   00000016   0xF200 0x72FF      ADDW     R2,R0,#+2047
   \   0000001A   0x806A             STRH     R2,[R5, #+2]
    191                  blue    -=  0x7ff;
   \   0000001C   0x88A8             LDRH     R0,[R5, #+4]
   \   0000001E   0xF240 0x73FF      MOVW     R3,#+2047
   \   00000022   0x1AC3             SUBS     R3,R0,R3
   \   00000024   0x80AB             STRH     R3,[R5, #+4]
    192                  
    193                  SetLedColor(0,red,green,blue);
   \   00000026   0xB29B             UXTH     R3,R3
   \   00000028   0xB292             UXTH     R2,R2
   \   0000002A   0xB289             UXTH     R1,R1
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x.... 0x....      BL       SetLedColor
    194                  SetLedColor(1,red,green,blue);
   \   00000032   0x88AB             LDRH     R3,[R5, #+4]
   \   00000034   0x886A             LDRH     R2,[R5, #+2]
   \   00000036   0x8829             LDRH     R1,[R5, #+0]
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0x.... 0x....      BL       SetLedColor
    195                  SetLedColor(2,red,green,blue);
   \   0000003E   0x88AB             LDRH     R3,[R5, #+4]
   \   00000040   0x886A             LDRH     R2,[R5, #+2]
   \   00000042   0x8829             LDRH     R1,[R5, #+0]
   \   00000044   0x2002             MOVS     R0,#+2
   \   00000046   0x.... 0x....      BL       SetLedColor
    196              }
   \                     ??test_DM412_Led_0: (+1)
   \   0000004A   0x4620             MOV      R0,R4
   \   0000004C   0x1E44             SUBS     R4,R0,#+1
   \   0000004E   0xB2C0             UXTB     R0,R0
   \   00000050   0x2800             CMP      R0,#+0
   \   00000052   0xD1DB             BNE.N    ??test_DM412_Led_1
    197          }
   \   00000054   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .data, align 2
   \                     ??red:
   \   00000000   0x5555             DC16 21845
   \   00000002   0xAAAA             DC16 43690
   \   00000004   0xFFFF             DC16 65535

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     ??red

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x0192 0x0195      DC16 402, 405, 406
   \              0x0196       
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x0193 0x0194      DC16 403, 404, 213
   \              0x00D5       
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x0192 0x0195      DC16 402, 405, 406
   \              0x0196       
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x0193 0x0194      DC16 403, 404, 213
   \              0x00D5       
   \   00000006   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   SentLantch_LED
        40   -> Delay_Nus
        40   -> GPIO_SetOrClearValue
      40   SentTwoByte_LED
        40   -> Delay_Nus
        40   -> GPIO_SetOrClearValue
      24   SetLedColor
         0   -> SentLantch_LED
        24   -> SentTwoByte_LED
       8   bsp_DM412Init
         0   -> GPIO_PinselConfig
         8   -> GPIO_PinselConfig
      16   test_DM412_Led
        16   -> SetLedColor
        16   -> bsp_DM412Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       8  ?_0
       8  ?_1
       8  ?_2
       8  ?_3
     130  SentLantch_LED
     146  SentTwoByte_LED
      60  SetLedColor
      64  bsp_DM412Init
       6  red
          green
          blue
      86  test_DM412_Led

 
   6 bytes in section .data
 522 bytes in section .text
 
 522 bytes of CODE memory
   6 bytes of DATA memory

Errors: none
Warnings: none
