###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       26/Dec/2017  15:21:27
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC199B-200 主板\Software\APP\comm\app_comm_dtu.c
#    Command line =  
#        "F:\iar\NC199B-200 主板\Software\APP\comm\app_comm_dtu.c" -D
#        USE_STDPERIPH_DRIVER -D _STM32F10X_HD -D STM32F10X_CL -D DEBUG -D
#        STM32F103RC -D STM32_FLASH_SIZE=256 -D HSE_VALUE=25000000 -lCN
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\
#        -o
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC199B-100\Library\Project\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\AES\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Config\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\User\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Port\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\OS\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\SIM900A\Config\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Protocol\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\APP\Iap\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Driver\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\IAR\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\uCOS-III\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\CoreSupport\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\St\FWLib\STM32F10x_StdPeriph_Driver\inc\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-CPU\ARM-Cortex-M3\IAR\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-LIB\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\BSP\Os\OSAL\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\OSAL\OS\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-MB\Source\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\Micrium\uC-OS-III\Source\
#        -I F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\ -I
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\Source\FatFs\option\ -Om
#        --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\List\app_comm_dtu.lst
#    Object file  =  
#        F:\iar\NC199B-100\Library\Project\IAR\..\..\..\Output\Lib\Debug-RC\Obj\app_comm_dtu.o
#
###############################################################################

F:\iar\NC199B-200 主板\Software\APP\comm\app_comm_dtu.c
      1          /*******************************************************************************
      2           *   Filename:       app_comm_dtu.c
      3           *   Revised:        All copyrights reserved to redmorningcn.
      4           *   Revision:       v1.0
      5           *   Writer:	     redmorningcn.
      6           *
      7           *   Description:    双击选中 dtu 按 Ctrl + H, 钩选 Match the case, Replace with
      8           *                   输入您要的名字，点击 Replace All
      9           *                   双击选中 Dtu 按 Ctrl + H, 钩选 Match the case, Replace with
     10           *                   输入您要的名字，点击 Replace All
     11           *                   双击选中 DTU 按 Ctrl + H, 钩选 Match the case, Replace with
     12           *                   输入您要的名字，点击 Replace All
     13           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_COMM_PRIO     ）
     14           *                                            和 任务堆栈（ APP_TASK_COMM_STK_SIZE ）大小
     15           *
     16           *   Notes:
     17           *     				E-mail: redmorningcn@qq.com
     18           *
     19           *******************************************************************************/
     20          
     21          /*******************************************************************************
     22           * INCLUDES
     23           */
     24          #define  SNL_APP_SOURCE
     25          #include <includes.h>
     26          #include <app_comm_protocol.h>
     27          #include <app_ctrl.h>
     28          #include <app.h>
     29          #include <os_cfg_app.h>
     30          //#include  "IAP_program_mcu.h"
     31          
     32          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     33          const  CPU_CHAR  *app_comm_dtu__c = "$Id: $";
     34          #endif
     35          
     36          #define APP_TASK_COMM_EN     DEF_ENABLED
     37          #if APP_TASK_COMM_EN == DEF_ENABLED
     38          /*******************************************************************************
     39           * CONSTANTS
     40           */
     41          
     42          /*******************************************************************************
     43           * MACROS
     44           */
     45          //#define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 1)
     46          #define IAP_START_CODE              1
     47          #define IAP_DATA_CODE               2
     48          #define IAP_END_CODE                3
     49          
     50          /*******************************************************************************
     51           * TYPEDEFS
     52           */
     53          //IAP 下载帧控制字
     54          #define     IAP_FRAME_CODE          10 
     55          //SET 设置控制字
     56          #define     SET_FRAME_CODE          2      
     57          
     58          
     59          /*******************************************************************************
     60           * LOCAL VARIABLES
     61           */
     62          
     63          /*******************************************************************************
     64           * GLOBAL VARIABLES
     65           */
     66          
     67          /***********************************************
     68          * 描述： 软定时器声明
     69          */
     70          
     71          /***********************************************
     72          * 描述： 软定时器回调函数
     73          */
     74          
     75          
     76          /*******************************************************************************
     77           * LOCAL FUNCTIONS
     78           */
     79          
     80          
     81          
     82          
     83          /*******************************************************************************
     84           * GLOBAL FUNCTIONS
     85           */
     86          
     87          /*******************************************************************************
     88           * EXTERN VARIABLES
     89           */
     90          
     91           /*******************************************************************************
     92           * EXTERN FUNCTIONS
     93           */
     94          //uint8   FRAM_StoreRecNumMgr(StrRecNumMgr  *SRecNumMgr);
     95          //uint8   FRAM_StoreOilPara(StrOilPara  *SOilPara);
     96          //void    BSP_DispClrAll(void);
     97          //uint8   FRAM_StoreProductInfo(StrProductInfo  *sProductInfo);
     98          //uint8   ReadFM24CL64(uint16  Addr, uint8 *DataBuf, uint32 DataBufLen);            
     99          //uint8   WriteFM24CL64(uint16  Addr, uint8 *DataBuf, uint32 DataBufLen);            
    100          //void    GetOilPara(void);
    101          
    102          
    103          uint8   comm_record_send_one(StrDevDtu * sDtu,uint8 addrnum);
    104          void    comm_record_send(StrDevDtu * sDtu,uint8 addrnum);
    105          void    comm_para_flow(StrDevDtu * sDtu,uint8 addrnum);
    106          int8    IAP_PragramDeal(uint8 *databuf,char datalen);
    107          //uint8   comm_tinyrec_send(StrDevOtr * sOtr,uint8    addrnum);
    108          
    109          /*******************************************************************************/
    110          
    111          //extern  stcSysCtrl  sCtrl;
    112          
    113          /*******************************************************************************
    114           * 名    称： app_comm_dtu
    115           * 功    能： 调用无线通讯处理函数。
    116           *            如果是定时器超时，则对应地址的timeout计算加1，并判断
    117           *            值是否到满足该地址故障判断次数，是否执行通讯异常处理。
    118           *            如果是接收到数据事件，则根据接收数据进行处理。
    119           * 入口参数： 无
    120           * 出口参数： 无
    121           * 作　 　者： redmorningcn.
    122           * 创建日期： 2017-05-18
    123           * 修    改：
    124           * 修改日期：
    125           * 备    注： 任务创建函数需要在app.h文件中声明
    126           *******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    127          void    app_comm_dtu(void)
    128          {
   \                     app_comm_dtu: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB084             SUB      SP,SP,#+16
    129              //判断对应地址连接是否接收到数据
    130              uint8   i = 0;
   \   00000006   0x2500             MOVS     R5,#+0
    131              //uint8   status = 0;
    132              uint8   echolen = 0;
   \   00000008   0x4C48             LDR.N    R4,??app_comm_dtu_0
   \   0000000A   0xE000             B.N      ??app_comm_dtu_1
    133          
    134              while(i < COMM_DEV_DTU_CONN_NUM){
    135                  if(Ctrl.Dtu.ConnCtrl[i].RecvEndFlg == 1)                   //如果地址i接收到数据，对数据进行处理
    136                  {
    137                      /***********************************************
    138                      * 描述： 从接收的revcbuf中取数据
    139                      *        根据接收到的地址CA，进行无线  数据传输；
    140                      *        接收到地址C2，进行  设置模式。
    141                      */
    142                      switch(Ctrl.Dtu.RxCtrl.FrameCode)
    143                      {
    144                          case 0:     //V1.0
    145                      
    146                              if(Ctrl.Dtu .RxCtrl.SourceAddr == SLAVE_ADDR_DTU)       //地址等于CA，无线数据传输。
    147                              {
    148                                  comm_record_send((StrDevDtu *)&Ctrl.Dtu,i);        //数据的需要传递  dtu，明确 地址，pch等信息。
    149                              }
    150                              
    151                              if(Ctrl.Dtu.RxCtrl.SourceAddr == SLAVE_ADDR_SET)       //地址等于C2，参数设置。
    152                              {
    153                                  comm_para_flow((StrDevDtu *)&Ctrl.Dtu,i);          //设置参数，或信息交互。依据code进行相应操作。
    154                                  
    155                                  //参数设置，数据原路返回
    156                                  CSNC_SendData(  Ctrl.Dtu.pch,                        //DTU 的PCH：串口号，收发控制等底层信息
    157                                                  Ctrl.Dtu.RxCtrl.DestAddr,            //源地址，
    158                                                  Ctrl.Dtu.RxCtrl.SourceAddr,          //目标地址
    159                                                  Ctrl.Dtu.RxCtrl.FramNum,             //帧序号 
    160                                                  Ctrl.Dtu.RxCtrl.FrameCode,           //命令字
    161                                                  Ctrl.Dtu.Rd.Buf,                     //数据区
    162                                                  Ctrl.Dtu.RxCtrl.Len                  //发送长度
    163                                                );
    164                              }
    165                              break;
    166                          case 1:     //V2.0
    167                              break;
    168                          case SET_FRAME_CODE:        //V2.0 IAP参数设置
    169                              
    170                              break;
    171                              
    172                          case IAP_FRAME_CODE:        //V2.0 IAP程序下载
    173                                  //status = IAP_PragramDeal(Ctrl.Dtu.Rd.Buf , Ctrl.Dtu.RxCtrl.Len ); //调用程序下载函数   
    174                                  IAP_PragramDeal(Ctrl.Dtu.Rd.Buf , Ctrl.Dtu.RxCtrl.Len ); //调用程序下载函数  
    175                                  
    176                                  echolen = 4;
    177                                  //应答数据          //如果是IAP传包帧，则传数据长度4，如果是开始、结束。返回长度为
    178                                  if(     Ctrl.Dtu.Rd.Buf[0] == IAP_START_CODE 
    179                                      ||  Ctrl.Dtu.Rd.Buf[0] == IAP_END_CODE )
    180                                  {
    181                                      echolen = Ctrl.Dtu.RxCtrl.Len;   
    182                                  }
    183                                  
    184                                  CSNC_SendData(  Ctrl.Dtu.pch,                        //DTU 的PCH：串口号，收发控制等底层信息
    185                                                  Ctrl.Dtu.RxCtrl.DestAddr,            //源地址，
    186                                                  Ctrl.Dtu.RxCtrl.SourceAddr,          //目标地址
    187                                                  Ctrl.Dtu.RxCtrl.FramNum,             //帧序号 ，在接收中累加
    188                                                  Ctrl.Dtu.RxCtrl.FrameCode,           //命令字
    189                                                  Ctrl.Dtu.Rd.Buf,                     //数据区
    190                                                  echolen                               //发送长度
    191                                              );
    192                              break;
    193                              
    194                          default:;  //V2.0
    195                      }
    196                      Ctrl.Dtu.ConnCtrl[i].RecvEndFlg = 0;                   //数据已处理。 接收数据置1
    197                      Ctrl.Dtu.ConnCtrl[i].TimeOut    = 0;                   //超时计数清零
    198          
    199                      return  ;
    200                  }
    201                  
    202                  i++;
   \                     ??app_comm_dtu_2: (+1)
   \   0000000C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??app_comm_dtu_1: (+1)
   \   0000000E   0xB2ED             UXTB     R5,R5
   \   00000010   0x4628             MOV      R0,R5
   \   00000012   0x2802             CMP      R0,#+2
   \   00000014   0xDA49             BGE.N    ??app_comm_dtu_3
   \   00000016   0xEB04 0x00C0      ADD      R0,R4,R0, LSL #+3
   \   0000001A   0xF200 0x462E      ADDW     R6,R0,#+1070
   \   0000001E   0x7830             LDRB     R0,[R6, #+0]
   \   00000020   0x2801             CMP      R0,#+1
   \   00000022   0xD1F3             BNE.N    ??app_comm_dtu_2
   \   00000024   0xF204 0x4721      ADDW     R7,R4,#+1057
   \   00000028   0x7938             LDRB     R0,[R7, #+4]
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD002             BEQ.N    ??app_comm_dtu_4
   \   0000002E   0x280A             CMP      R0,#+10
   \   00000030   0xD01E             BEQ.N    ??app_comm_dtu_5
   \   00000032   0xE036             B.N      ??app_comm_dtu_6
   \                     ??app_comm_dtu_4: (+1)
   \   00000034   0x7878             LDRB     R0,[R7, #+1]
   \   00000036   0x28CA             CMP      R0,#+202
   \   00000038   0xD104             BNE.N    ??app_comm_dtu_7
   \   0000003A   0x4629             MOV      R1,R5
   \   0000003C   0xF204 0x20E1      ADDW     R0,R4,#+737
   \   00000040   0x.... 0x....      BL       comm_record_send
   \                     ??app_comm_dtu_7: (+1)
   \   00000044   0x7878             LDRB     R0,[R7, #+1]
   \   00000046   0x28C2             CMP      R0,#+194
   \   00000048   0xD12B             BNE.N    ??app_comm_dtu_6
   \   0000004A   0xF204 0x28E1      ADDW     R8,R4,#+737
   \   0000004E   0x4629             MOV      R1,R5
   \   00000050   0x4640             MOV      R0,R8
   \   00000052   0x.... 0x....      BL       comm_para_flow
   \   00000056   0x78F8             LDRB     R0,[R7, #+3]
   \   00000058   0x9002             STR      R0,[SP, #+8]
   \   0000005A   0xF8CD 0x8004      STR      R8,[SP, #+4]
   \   0000005E   0x7938             LDRB     R0,[R7, #+4]
   \   00000060   0x9000             STR      R0,[SP, #+0]
   \   00000062   0x78BB             LDRB     R3,[R7, #+2]
   \   00000064   0x787A             LDRB     R2,[R7, #+1]
   \   00000066   0x7839             LDRB     R1,[R7, #+0]
   \   00000068   0x69F8             LDR      R0,[R7, #+28]
   \   0000006A   0x.... 0x....      BL       CSNC_SendData
   \   0000006E   0xE018             B.N      ??app_comm_dtu_6
   \                     ??app_comm_dtu_5: (+1)
   \   00000070   0xF204 0x28E1      ADDW     R8,R4,#+737
   \   00000074   0x78F9             LDRB     R1,[R7, #+3]
   \   00000076   0x4640             MOV      R0,R8
   \   00000078   0x.... 0x....      BL       IAP_PragramDeal
   \   0000007C   0x2004             MOVS     R0,#+4
   \   0000007E   0xF894 0x12E1      LDRB     R1,[R4, #+737]
   \   00000082   0x2901             CMP      R1,#+1
   \   00000084   0xD001             BEQ.N    ??app_comm_dtu_8
   \   00000086   0x2903             CMP      R1,#+3
   \   00000088   0xD100             BNE.N    ??app_comm_dtu_9
   \                     ??app_comm_dtu_8: (+1)
   \   0000008A   0x78F8             LDRB     R0,[R7, #+3]
   \                     ??app_comm_dtu_9: (+1)
   \   0000008C   0x9002             STR      R0,[SP, #+8]
   \   0000008E   0xF8CD 0x8004      STR      R8,[SP, #+4]
   \   00000092   0x7938             LDRB     R0,[R7, #+4]
   \   00000094   0x9000             STR      R0,[SP, #+0]
   \   00000096   0x78BB             LDRB     R3,[R7, #+2]
   \   00000098   0x787A             LDRB     R2,[R7, #+1]
   \   0000009A   0x7839             LDRB     R1,[R7, #+0]
   \   0000009C   0x69F8             LDR      R0,[R7, #+28]
   \   0000009E   0x.... 0x....      BL       CSNC_SendData
   \                     ??app_comm_dtu_6: (+1)
   \   000000A2   0x2000             MOVS     R0,#+0
   \   000000A4   0x7030             STRB     R0,[R6, #+0]
   \   000000A6   0x7070             STRB     R0,[R6, #+1]
   \   000000A8   0xE03E             B.N      ??app_comm_dtu_10
    203              }
    204           
    205              /***********************************************
    206              *   描述： 如果是超时。
    207              *1. 超时时，所有地址计算加1，对应计算器在收到数据时清零。
    208              *2. 10数据无应答，发送一次数据。
    209              */
    210              if( Ctrl.Os.CommEvtFlag |  COMM_EVT_FLAG_DTU_TIMEOUT){
    211                  uint8 i = 0;
   \                     ??app_comm_dtu_3: (+1)
   \   000000AA   0x2100             MOVS     R1,#+0
   \   000000AC   0xE002             B.N      ??app_comm_dtu_11
    212                  while( i < COMM_DEV_DTU_CONN_NUM){
    213                      Ctrl.Dtu.ConnCtrl[i].TimeOut++;
    214                      
    215                      if(Ctrl.Dtu.ConnCtrl[i].TimeOut > 10 * COMM_DEV_DTU_CONN_NUM){
    216                          Ctrl.Dtu.ConnCtrl[i].TimeOut = 10 * COMM_DEV_DTU_CONN_NUM + 1;
    217                          Ctrl.Dtu.ConnCtrl[i].ErrFlg = 1;               //超时数大于10次，5S，报通讯错误。
    218                          
    219                      }else{
    220                          Ctrl.Dtu.ConnCtrl[i].ErrFlg = 0;               //接收到数据，通讯清零
   \                     ??app_comm_dtu_12: (+1)
   \   000000AE   0x2200             MOVS     R2,#+0
   \   000000B0   0x7042             STRB     R2,[R0, #+1]
    221                      }
    222                      i++;
   \                     ??app_comm_dtu_13: (+1)
   \   000000B2   0x1C49             ADDS     R1,R1,#+1
   \                     ??app_comm_dtu_11: (+1)
   \   000000B4   0x2902             CMP      R1,#+2
   \   000000B6   0xDA0E             BGE.N    ??app_comm_dtu_14
   \   000000B8   0xEB04 0x00C1      ADD      R0,R4,R1, LSL #+3
   \   000000BC   0xF200 0x402F      ADDW     R0,R0,#+1071
   \   000000C0   0x7802             LDRB     R2,[R0, #+0]
   \   000000C2   0x1C52             ADDS     R2,R2,#+1
   \   000000C4   0x7002             STRB     R2,[R0, #+0]
   \   000000C6   0xB2D2             UXTB     R2,R2
   \   000000C8   0x2A15             CMP      R2,#+21
   \   000000CA   0xDBF0             BLT.N    ??app_comm_dtu_12
   \   000000CC   0x2215             MOVS     R2,#+21
   \   000000CE   0x7002             STRB     R2,[R0, #+0]
   \   000000D0   0x2201             MOVS     R2,#+1
   \   000000D2   0x7042             STRB     R2,[R0, #+1]
   \   000000D4   0xE7ED             B.N      ??app_comm_dtu_13
    223                  }
    224                  
    225                  /***********************************************
    226                  * 描述： 如果是超时。
    227                  * 发送数据
    228                  */ 
    229                  if( Ctrl.Para.dat.sRecNumMgr.Current == 0 )                                     //记录号为0，还未发送数据。不做通讯状态判断
   \                     ??app_comm_dtu_14: (+1)
   \   000000D6   0x1D20             ADDS     R0,R4,#+4
   \   000000D8   0x6802             LDR      R2,[R0, #+0]
   \   000000DA   0x2A00             CMP      R2,#+0
   \   000000DC   0xD10C             BNE.N    ??app_comm_dtu_15
    230                  {
    231                      uint8 i = 0;
   \   000000DE   0x2000             MOVS     R0,#+0
   \   000000E0   0x4602             MOV      R2,R0
   \   000000E2   0xE004             B.N      ??app_comm_dtu_16
    232                      while( i < COMM_DEV_DTU_CONN_NUM){
    233                          Ctrl.Dtu.ConnCtrl[i].TimeOut = 0;
   \                     ??app_comm_dtu_17: (+1)
   \   000000E4   0xEB04 0x01C1      ADD      R1,R4,R1, LSL #+3
   \   000000E8   0xF881 0x242F      STRB     R2,[R1, #+1071]
    234                          i++;
   \   000000EC   0x1C40             ADDS     R0,R0,#+1
    235                      }
   \                     ??app_comm_dtu_16: (+1)
   \   000000EE   0xB2C0             UXTB     R0,R0
   \   000000F0   0x4601             MOV      R1,R0
   \   000000F2   0x2902             CMP      R1,#+2
   \   000000F4   0xDBF6             BLT.N    ??app_comm_dtu_17
    236                      return;
   \   000000F6   0xE017             B.N      ??app_comm_dtu_10
    237                  }
    238                          
    239                  //发送1条数据记录
    240                  i =0 ;
   \                     ??app_comm_dtu_15: (+1)
   \   000000F8   0x2100             MOVS     R1,#+0
   \   000000FA   0xE001             B.N      ??app_comm_dtu_18
    241                  while(i < COMM_DEV_DTU_CONN_NUM){
    242                      if(Ctrl.Dtu.ConnCtrl[i].SlaveAddr == SLAVE_ADDR_DTU){              //对DTU地址发送数据 
    243                                                                                              
    244                          if(     Ctrl.Para.dat.sRecNumMgr.Current > Ctrl.Para.dat.sRecNumMgr.GrsRead      //数据未发完，10每次，否则，有新数据才发送
    245                             ||   Ctrl.Para.dat.sRecNumMgr.GrsRead > Ctrl.Para.dat.sRecNumMgr.Current   ) //记录异常，也发送
    246                          {
    247                              comm_record_send_one((StrDevDtu *)&Ctrl.Dtu,i);  
    248                              break;
    249                          }
    250                      }
    251                      i++;
   \                     ??app_comm_dtu_19: (+1)
   \   000000FC   0x1C49             ADDS     R1,R1,#+1
   \   000000FE   0xB2C9             UXTB     R1,R1
   \                     ??app_comm_dtu_18: (+1)
   \   00000100   0x2902             CMP      R1,#+2
   \   00000102   0xDA11             BGE.N    ??app_comm_dtu_10
   \   00000104   0xEB04 0x03C1      ADD      R3,R4,R1, LSL #+3
   \   00000108   0xF893 0x3431      LDRB     R3,[R3, #+1073]
   \   0000010C   0x2BCA             CMP      R3,#+202
   \   0000010E   0xD1F5             BNE.N    ??app_comm_dtu_19
   \   00000110   0x6883             LDR      R3,[R0, #+8]
   \   00000112   0x4293             CMP      R3,R2
   \   00000114   0xD301             BCC.N    ??app_comm_dtu_20
   \   00000116   0x429A             CMP      R2,R3
   \   00000118   0xD2F0             BCS.N    ??app_comm_dtu_19
   \                     ??app_comm_dtu_20: (+1)
   \   0000011A   0xF204 0x20E1      ADDW     R0,R4,#+737
   \   0000011E   0xB004             ADD      SP,SP,#+16
   \   00000120   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000124   0x.... 0x....      B.W      comm_record_send_one
    252                  }
    253              }
    254          }
   \                     ??app_comm_dtu_10: (+1)
   \   00000128   0xE8BD 0x81FF      POP      {R0-R8,PC}       ;; return
   \                     ??app_comm_dtu_0:
   \   0000012C   0x........         DC32     Ctrl
    255          
    256          /*******************************************************************************
    257           * 				end of file
    258           *******************************************************************************/
    259          #endif
    260          
    261          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   app_comm_dtu
        40   -> CSNC_SendData
        40   -> IAP_PragramDeal
        40   -> comm_para_flow
        40   -> comm_record_send
         0   -> comm_record_send_one


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     304  app_comm_dtu

 
 304 bytes in section .text
 
 304 bytes of CODE memory

Errors: none
Warnings: none
